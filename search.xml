<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>千年大同</title>
      <link href="/blog/posts/12314/"/>
      <url>/blog/posts/12314/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 清明小长假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>山东寻老纪</title>
      <link href="/blog/posts/undefined/"/>
      <url>/blog/posts/undefined/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%; margin-bottom: 20px;">  <iframe src="//player.bilibili.com/player.html?bvid=BV1KZseebEAM&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div><p>大二班的兄弟姐妹们这次五一自驾山东行，又是多达8家，总共30多口人的集体行动，还加入了鱼一年级一班的新同学，住我们楼上的七月一家。整体行程略偏特种兵，特别是有老有小，司机比较辛苦。</p><p>DAY0：节前最后一个工作日请了半天假，下午两点正式出发，开了七个小时340多公里达到东营酒店入住。(其实主要就是堵在东五环，真实体验了一次一个半小时还没出五环)。</p><p>DAY1：一早大部队驱车前往孤东海堤看黄河入海口。原本正规的应该是在黄河生态公园看入海口，但公园太大，车开不到跟前，要坐摆渡车，还得排长队坐船。孤东海堤是一个不正规的野景区，私人承包的船，可以少排队一会坐船去看黄河渤海分界线。看完之后继续赶路前往莱州(李苏苏姥姥家)，晚上苏苏姥姥订的海鲜大餐，当晚入住莱州酒店。</p><p>DAY2：上午吃了莱州羊汤，然后前往海边赶海，海水退潮后小朋友们捡鱼虾贝壳小螃蟹捡的不亦乐乎，中午就在海边的烧烤店吃了烤串。下午继续开200公里到蓬莱，我们家大概下午四点到达蓬莱阁景区，游完了八仙过海的蓬莱仙境。晚上在海边沙滩给团队里的小妮妮过了生日。当晚入住蓬莱的酒店。</p><p>DAY3：赶上午十点的码头烟台蓬长客港坐游轮前往长岛，开启我们的长岛之行。登岛之后先入住吃午饭，下午坐船去大黑山岛游完，晚上回到民宿休息。</p><p>DAY4：包了个大巴去月牙湾捡鹅卵石，然后去九丈崖，到此所有玩儿的景点就结束啦。之后部分家庭就启程回京了，我们又修整了一晚上。</p><p>DAY5：赶一大早八点半的游轮返回蓬莱，开上车启程回京，路上总共开了十个小时，晚上七点半终于到家啦。</p><p>友情提醒部分：<br>1️⃣ 首先就是高速充电，其实完全没必要存在充电焦虑，也无需提前规划充电点，我们去的时候充了一次，回来充了两次。建议在高速上找能来回两边互通的服务区，如果这个方向充电满了就去对面充。如果服务区真的充不上就打开导航下高速找充电桩，沿途都能找到。<br>2️⃣ 登长岛的时候码头人太多，车根本开不到码头附近的停车场，建议就把车停酒店附近，然后打车去码头。如果错过了船票就改下一班。<br>尽管旅途中有的家庭发生了小小的意外，但总体而言这又是一次愉快的集体行动。期待大中华寻老纪(寻找小朋友们的老家)下一站～</p>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 五一小长假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>港澳自由行</title>
      <link href="/blog/posts/10049/"/>
      <url>/blog/posts/10049/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 出境游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平替ELK之方案二：使用Quickwit+Kafka进行日志收集</title>
      <link href="/blog/posts/48234/"/>
      <url>/blog/posts/48234/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>自前司负责日志分析工作任务开始，我就一直深受日志存储之痛。</p><p>在整个日志分析链条之中，采集工具千千万万，无论是老牌的 <code>flume</code>，中生代的 <code>filebeat</code>，还是云原生新贵 <code>fluentbit</code>、<code>vector</code>，采集性能都相差不大，对原有服务器的性能影响和损耗都能维持在一个很低的水准，因此用谁都一样。</p><p>在日志传输、缓存、削峰、限流领域，Kafka 几乎是唯一的选择。任何日志采集和数据存储平台都得具备对接 Kafka 的能力。</p><p>偏偏在日志存储方面，自七八年前 <code>Elasticsearch</code> 问世以来，几乎形成了垄断地位，至今一直没有什么产品能威胁到它的地位。这么多年来版本不停迭代，功能越做越丰富，产品版图扩的越来越大，什么机器学习、AI 功能做了不少，但最基本的大容量数据存储性能、存储成本却一直拉跨。功能做的越多学习成本直线上升。咱就说不能有个开箱即用、配置简单、上手迅速、性能也不差的日志存储产品吗？</p><p>直到我发现了 <code>Quickwit</code>。</p><div class="note primary no-icon"><p>关于 Quickwit 的介绍 参见 <a href="/blog/posts/19384/#Quickwit-%E4%BB%8B%E7%BB%8D">Quickwit 介绍</a></p></div><p>有了 <code>Quickwit</code>，现在日志分析链条上，前半部分从采集到 <code>Kafka</code> 都不变，后半部分从 <code>Kafka</code> 到 <code>Elasticsearch</code> 就改成了 <code>Kafka</code> 到 <code>Quickwit</code>。</p><h2 id="部署-Kafka">部署 Kafka</h2><p>参见 <a href="/blog/posts/33340/#%E9%83%A8%E7%BD%B2-Kafka">部署 Kafka</a></p><h2 id="部署单节点-Quickwit">部署单节点 Quickwit</h2><p>参见 <a href="/blog/posts/19384/#Quickwit-%E9%83%A8%E7%BD%B2">Quickwit 部署</a></p><h2 id="Quickwit-对接-Kafka">Quickwit 对接 Kafka</h2><p>Quickwit 支持从 Kafka 读取数据，这样原本通过 Filebeat 等方式采集上来的日志，送到 Kafka 后，可以不再存入 Elasticsearch，而是改为存入 Quickwit。</p><h3 id="创建索引">创建索引</h3><p>参考 <a href="https://quickwit.io/docs/ingest-data/kafka#create-index">Create index</a></p><p>准备好索引配置文件，然后使用命令创建索引：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./quickwit index create --index-config gh-archive.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建-source">创建 source</h3><p>参考 <a href="https://quickwit.io/docs/ingest-data/kafka#create-kafka-source">Create Kafka source</a></p><p>Kafka 支持的安全协议包括：</p><ul><li>PLAINTEXT 无任何安全保护，直接连</li><li>SASL_PLAINTEXT</li><li>SASL_SSL</li><li>SSL</li></ul><p>我使用的是 <code>SASL_PLAINTEXT</code>，source 配置文件如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>kafka-source.yaml</span></div><code class="language-yaml"><span class="token comment">#</span><span class="token comment"># Kafka source config file.</span><span class="token comment">#</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token key atrule">source_id</span><span class="token punctuation">:</span> <span class="token string">"kafka-source"</span><span class="token key atrule">source_type</span><span class="token punctuation">:</span> kafka<span class="token key atrule">num_pipelines</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token key atrule">params</span><span class="token punctuation">:</span>  <span class="token key atrule">topic</span><span class="token punctuation">:</span> kd_req_statistics  <span class="token key atrule">client_params</span><span class="token punctuation">:</span>    <span class="token key atrule">bootstrap.servers</span><span class="token punctuation">:</span> kafka<span class="token punctuation">-</span>0.kafka<span class="token punctuation">-</span>headless.svc.cluster.local<span class="token punctuation">:</span><span class="token number">9092</span>    <span class="token key atrule">security.protocol</span><span class="token punctuation">:</span> SASL_PLAINTEXT    <span class="token key atrule">sasl.mechanisms</span><span class="token punctuation">:</span> SCRAM<span class="token punctuation">-</span>SHA<span class="token punctuation">-</span><span class="token number">256</span>    <span class="token key atrule">sasl.username</span><span class="token punctuation">:</span> user    <span class="token key atrule">sasl.password</span><span class="token punctuation">:</span> passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建 source：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./quickwit <span class="token builtin class-name">source</span> create <span class="token parameter variable">--index</span> gh-archive --source-config kafka-source.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等待一会，在 Quickwit 界面能看到 Kafka 的数据已经进来了。</p><div class="note success no-icon"><p>遗留问题：目前一个索引只能写一个 topic，还没研究出怎么能接多个 topic</p></div><h2 id="部署-Quickwit-集群">部署 Quickwit 集群</h2><h3 id="Kubernetes-部署">Kubernetes 部署</h3><p>参考 <a href="https://quickwit.io/docs/deployment/kubernetes/helm">Install Quickwit with Helm</a></p><h3 id="二进制部署">二进制部署</h3><p>Quickwit 总共有 5 种角色：</p><ul><li><code>Indexers</code> ingest documents from data sources and build indexes.</li><li><code>Searchers</code> execute search queries submitted via the REST API.</li><li>The <code>Metastore</code> stores index metadata in a PostgreSQL-compatible database or cloud-hosted file.</li><li>The <code>Control Plane</code> distributes and coordinates indexing workloads on indexers.</li><li>The <code>Janitor</code> performs periodic maintenance tasks.</li></ul><p>5 种角色启动的时候以 <code>--service</code> 参数指定。结构图如下：<br><img src="https://quickwit.io/img/home-page-architecture-light.svg" alt=""></p><h4 id="环境规划">环境规划</h4><table><thead><tr><th>IP</th><th>角色</th><th>启动命令</th></tr></thead><tbody><tr><td>192.168.126.128</td><td>metastore</td><td>./quickwit run --service metastore</td></tr><tr><td>192.168.126.129</td><td>control-plane</td><td>./quickwit run --service control_plane</td></tr><tr><td>192.168.126.130</td><td>indexer-1, minio-1</td><td>./quickwit run --service indexer</td></tr><tr><td>192.168.126.131</td><td>indexer-2, minio-2</td><td>./quickwit run --service indexer</td></tr><tr><td>192.168.126.132</td><td>searcher, minio-3</td><td>./quickwit run --service searcher</td></tr></tbody></table><h4 id="节点配置">节点配置</h4><p><code>metastore</code> 的配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token key atrule">cluster_id</span><span class="token punctuation">:</span> mycluster<span class="token key atrule">node_id</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>metastore<span class="token key atrule">listen_address</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">rest</span><span class="token punctuation">:</span>  <span class="token key atrule">listen_port</span><span class="token punctuation">:</span> <span class="token number">7280</span><span class="token key atrule">peer_seeds</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>metastore  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>control<span class="token punctuation">-</span>plane  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">advertise_address</span><span class="token punctuation">:</span> 192.168.126.128<span class="token key atrule">data_dir</span><span class="token punctuation">:</span> /data/qwdata<span class="token key atrule">storage</span><span class="token punctuation">:</span>  <span class="token key atrule">s3</span><span class="token punctuation">:</span>    <span class="token key atrule">flavor</span><span class="token punctuation">:</span> minio    <span class="token key atrule">access_key_id</span><span class="token punctuation">:</span> exGkixAd72LLudQnC6sY    <span class="token key atrule">secret_access_key</span><span class="token punctuation">:</span> pTY49ucK0L8JLl7CZJRONjdYduGMkHIvaIvNcKeU    <span class="token key atrule">region</span><span class="token punctuation">:</span> pek    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//quickwit<span class="token punctuation">-</span>node<span class="token punctuation">-</span>1<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">force_path_style_access</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>QW_S3_FORCE_PATH_STYLE_ACCESS<span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token boolean important">false</span><span class="token punctuation">}</span>    <span class="token key atrule">disable_multi_object_delete</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">disable_multipart_upload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>peer_seeds</code> 不需要把所有节点都写全，后面扩容时也无需把新节点增加到 <code>peer_seeds</code> 里，quickwit 靠 <code>listen_address</code> 和 <code>advertise_address</code> 自动发现集群里设置了同一个 <code>cluster_id</code> 的节点。</p><p><code>control-plane</code> 的配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token key atrule">cluster_id</span><span class="token punctuation">:</span> mycluster<span class="token key atrule">node_id</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>control<span class="token punctuation">-</span>plane<span class="token key atrule">listen_address</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">rest</span><span class="token punctuation">:</span>  <span class="token key atrule">listen_port</span><span class="token punctuation">:</span> <span class="token number">7280</span><span class="token key atrule">peer_seeds</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>metastore  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>control<span class="token punctuation">-</span>plane  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">advertise_address</span><span class="token punctuation">:</span> 192.168.126.129<span class="token key atrule">data_dir</span><span class="token punctuation">:</span> /data/qwdata<span class="token key atrule">storage</span><span class="token punctuation">:</span>  <span class="token key atrule">s3</span><span class="token punctuation">:</span>    <span class="token key atrule">flavor</span><span class="token punctuation">:</span> minio    <span class="token key atrule">access_key_id</span><span class="token punctuation">:</span> exGkixAd72LLudQnC6sY    <span class="token key atrule">secret_access_key</span><span class="token punctuation">:</span> pTY49ucK0L8JLl7CZJRONjdYduGMkHIvaIvNcKeU    <span class="token key atrule">region</span><span class="token punctuation">:</span> pek    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//quickwit<span class="token punctuation">-</span>node<span class="token punctuation">-</span>1<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">force_path_style_access</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>QW_S3_FORCE_PATH_STYLE_ACCESS<span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token boolean important">false</span><span class="token punctuation">}</span>    <span class="token key atrule">disable_multi_object_delete</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">disable_multipart_upload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>indexer-1</code> 的配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token key atrule">cluster_id</span><span class="token punctuation">:</span> mycluster<span class="token key atrule">node_id</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">listen_address</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">rest</span><span class="token punctuation">:</span>  <span class="token key atrule">listen_port</span><span class="token punctuation">:</span> <span class="token number">7280</span><span class="token key atrule">peer_seeds</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>metastore  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>control<span class="token punctuation">-</span>plane  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">advertise_address</span><span class="token punctuation">:</span> 192.168.126.130<span class="token key atrule">data_dir</span><span class="token punctuation">:</span> /data/qwdata<span class="token key atrule">storage</span><span class="token punctuation">:</span>  <span class="token key atrule">s3</span><span class="token punctuation">:</span>    <span class="token key atrule">flavor</span><span class="token punctuation">:</span> minio    <span class="token key atrule">access_key_id</span><span class="token punctuation">:</span> exGkixAd72LLudQnC6sY    <span class="token key atrule">secret_access_key</span><span class="token punctuation">:</span> pTY49ucK0L8JLl7CZJRONjdYduGMkHIvaIvNcKeU    <span class="token key atrule">region</span><span class="token punctuation">:</span> pek    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//quickwit<span class="token punctuation">-</span>node<span class="token punctuation">-</span>1<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">force_path_style_access</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>QW_S3_FORCE_PATH_STYLE_ACCESS<span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token boolean important">false</span><span class="token punctuation">}</span>    <span class="token key atrule">disable_multi_object_delete</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">disable_multipart_upload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>indexer-2</code> 的配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token key atrule">cluster_id</span><span class="token punctuation">:</span> mycluster<span class="token key atrule">node_id</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">2</span><span class="token key atrule">listen_address</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">rest</span><span class="token punctuation">:</span>  <span class="token key atrule">listen_port</span><span class="token punctuation">:</span> <span class="token number">7280</span><span class="token key atrule">peer_seeds</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>metastore  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>control<span class="token punctuation">-</span>plane  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">advertise_address</span><span class="token punctuation">:</span> 192.168.126.131<span class="token key atrule">data_dir</span><span class="token punctuation">:</span> /data/qwdata<span class="token key atrule">storage</span><span class="token punctuation">:</span>  <span class="token key atrule">s3</span><span class="token punctuation">:</span>    <span class="token key atrule">flavor</span><span class="token punctuation">:</span> minio    <span class="token key atrule">access_key_id</span><span class="token punctuation">:</span> exGkixAd72LLudQnC6sY    <span class="token key atrule">secret_access_key</span><span class="token punctuation">:</span> pTY49ucK0L8JLl7CZJRONjdYduGMkHIvaIvNcKeU    <span class="token key atrule">region</span><span class="token punctuation">:</span> pek    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//quickwit<span class="token punctuation">-</span>node<span class="token punctuation">-</span>1<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">force_path_style_access</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>QW_S3_FORCE_PATH_STYLE_ACCESS<span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token boolean important">false</span><span class="token punctuation">}</span>    <span class="token key atrule">disable_multi_object_delete</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">disable_multipart_upload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>searcher</code> 的配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token key atrule">cluster_id</span><span class="token punctuation">:</span> mycluster<span class="token key atrule">node_id</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>searcher<span class="token key atrule">listen_address</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">rest</span><span class="token punctuation">:</span>  <span class="token key atrule">listen_port</span><span class="token punctuation">:</span> <span class="token number">7280</span><span class="token key atrule">peer_seeds</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>metastore  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>control<span class="token punctuation">-</span>plane  <span class="token punctuation">-</span> quickwit<span class="token punctuation">-</span>indexer<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">advertise_address</span><span class="token punctuation">:</span> 192.168.126.132<span class="token key atrule">data_dir</span><span class="token punctuation">:</span> /data/qwdata<span class="token key atrule">storage</span><span class="token punctuation">:</span>  <span class="token key atrule">s3</span><span class="token punctuation">:</span>    <span class="token key atrule">flavor</span><span class="token punctuation">:</span> minio    <span class="token key atrule">access_key_id</span><span class="token punctuation">:</span> exGkixAd72LLudQnC6sY    <span class="token key atrule">secret_access_key</span><span class="token punctuation">:</span> pTY49ucK0L8JLl7CZJRONjdYduGMkHIvaIvNcKeU    <span class="token key atrule">region</span><span class="token punctuation">:</span> pek    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//quickwit<span class="token punctuation">-</span>node<span class="token punctuation">-</span>1<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">force_path_style_access</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>QW_S3_FORCE_PATH_STYLE_ACCESS<span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token boolean important">false</span><span class="token punctuation">}</span>    <span class="token key atrule">disable_multi_object_delete</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">disable_multipart_upload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="启动集群">启动集群</h4><p>每个节点上启动 Quickwit，命令见上文环境规划，启动后任意节点的 <code>7280</code> 端口均可以打开 <code>ui</code><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fautomation%2Fquickwit-cluster.png" alt=""></p><h3 id="测试">测试</h3><p>在现公司部署的容器版 Quickwit 对接上 <code>Kafka</code> 后，平均吞吐量大约在 <code>3000docs/s</code> 左右，目前运行稳定。</p><p>Quickwit 对原始数据具有很高的压缩比，这一点可以说完爆 Elasticsearch。一个令我没想到的是，按说对象存储上的数据查询性能是比较差的，但 <code>Quickwit</code> 从 <code>Minio</code> 上检索数据量大约在 7 千万条左右，时间能控制在毫秒级，这一点真是惊到我了。后面会再做几次扩容测试观察观察。</p><p>总体来说，Quickwit 目前已经能满足我对日志存储的所有要求了~</p>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> automation </tag>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平替ELK之方案一：使用Clickhouse+Kafka进行日志收集</title>
      <link href="/blog/posts/33340/"/>
      <url>/blog/posts/33340/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>作为老牌的日志统一收集和查询套件，ELK（又或称ELKB）在实际使用过程中愈发面临着严重的性能问题。其在大数据量写入、同时又混合着查询的情况下性能急剧下降已经是业界公认的事实了。</p><p>在此总结一下 ELK 的几大问题：</p><ul><li>作为 ELKB 链条上的一环，Logstash 是所有组件中最大的短板，它的性能严重不匹配它前面的 Kafka 和后面的 ES。虽然它提供了强大的 grok 解析功能，但这种功能上带来的优势已经被性能太差造成几乎不可用完全抵消了，毕竟能用才是我们的第一目标。</li><li>ES 的429 TOO_MANY_REQUESTS 问题。在我前司的ELK集群使用过程中发现，即便是配置有 256G 内存的物理机作为数据节点（Elasticsearch版本为7.15），在每日几十 TB 的数据量情况下，Logstash 写入 ES 也经常会报 429 TOO_MANY_REQUESTS 拒绝写入错误，无论怎么调 ES 参数、调整 Logstash 批量写入大小都无法解决。</li><li>ES 的数据膨胀问题。一条日志被 Filebeat 收集后会打上很多标签字段，这条日志写入 ES 后会占据额外的存储空间，以及每个字段还会占据索引空间，然而 ES 并不会对数据做压缩。因此一条日志在存入 ES 后大约会放大 1.3~1.5 倍。</li></ul><h2 id="Clickhouse-介绍">Clickhouse 介绍</h2><p>Clickhouse 是一款高性能列式分布式数据库管理系统，官方对 Clickhouse 进行了测试，发现有下列优势：</p><ul><li>Clickhouse 写入吞吐量大，单服务器日志写入量在 50MB 到 200MB/s，每秒写入超过 60w 记录数，是 ES 的 5 倍以上。在 ES 中比较常见的写 Rejected 导致数据丢失、写入延迟等问题，在 Clickhouse 中不容易发生。</li><li>查询速度快，官方宣称数据在 pagecache 中，单服务器查询速率大约在 2-30GB/s；没在 pagecache 的情况下，查询速度取决于磁盘的读取速率和数据的压缩率。经测试 Clickhouse 的查询速度比 ES 快 5-30 倍以上。</li><li>Clickhouse比 ES 服务器成本更低。一方面 Clickhouse 的数据压缩比比 ES 高，相同数据占用的磁盘空间只有 ES 的 1/3 到 1/30，节省了磁盘空间的同时，也能有效的减少磁盘IO，这也是 Clickhouse 查询效率更高的原因之一；另一方面 Clickhouse 比 ES 占用更少的内存，消耗更少的 CPU 资源。我们预估用 Clickhouse 处理日志可以将服务器成本降低一半。</li></ul><p>下面是一组Clickhouse和Elasticsearch的对比</p><table><thead><tr><th>支持功能</th><th>Elasticsearch</th><th>Clickhouse</th></tr></thead><tbody><tr><td>开发语言</td><td>java</td><td>c++</td></tr><tr><td>存储类型</td><td>文档存储</td><td>列式数据库</td></tr><tr><td>分布式支持</td><td>分片和副本</td><td>分片和副本</td></tr><tr><td>扩展性</td><td>高</td><td>高</td></tr><tr><td>写入速度</td><td>慢</td><td>快</td></tr><tr><td>CPU/内存占用</td><td>高</td><td>低</td></tr><tr><td>存储占用(54G日志导入)</td><td>高 94G(174%)</td><td>低 23G(42.6%)</td></tr><tr><td>精确匹配查询速度</td><td>一般</td><td>快</td></tr><tr><td>模糊匹配查询速度</td><td>快</td><td>慢</td></tr><tr><td>权限管理</td><td>支持</td><td>支持</td></tr><tr><td>查询难度</td><td>低</td><td>高</td></tr><tr><td>可视化支持</td><td>高(Kibana)</td><td>低(客户端工具)</td></tr><tr><td>维护难度</td><td>低</td><td>高</td></tr></tbody></table><h2 id="部署-CKB">部署 CKB</h2><p>CKB是 Clickhouse + Kafka + Filebeats的缩写。在这一套工具里，减少了最大的短板 Logstash，部分牺牲了 grok 的便利性，但 Logstash 里有些简单的功能 Filebeat 已经可以支持了（比如添加/删除/转换字段）。</p><h3 id="部署-Kafka">部署 Kafka</h3><p>本文选择的版本是 <code>kafka_2.13-3.7.0</code>。在这个版本里 Kafka 还需要 Zookeeper 的支持，在 4.0 版本之后就不需要 Zookeeper 了（<a href="https://kafka.apache.org/documentation/#zk%EF%BC%89%E3%80%82">https://kafka.apache.org/documentation/#zk）。</a></p><p>部署的时候可以使用 Kafka 自带的 Zookeeper，也可以使用外部单独部署的 Zookeeper。本文使用三节点虚拟机部署 Kafka，同时使用 Kafka 自带的 Zookeeper，节点角色规划如下：</p><h3 id="部署-Kafka-图形化界面-KOWL">部署 Kafka 图形化界面 KOWL</h3><p><a href="https://github.com/ignitz/kowl">KOWL</a> 是一个开源的Kafka图形化界面，本文使用podman部署：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">podman</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token parameter variable">-e</span> <span class="token assign-left variable">KAFKA_BROKERS</span><span class="token operator">=</span><span class="token number">192.168</span>.126.47:9092 quay.io/cloudhut/kowl:master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>浏览器打开界面：<a href="http://192.168.126.47:8080">http://192.168.126.47:8080</a><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fautomation%2Fckb%2Fkowl.png" alt=""></p><p>能看到集群的节点列表、Topics、Consumer Groups等，该有的功能基本都有。</p><h3 id="部署-filebeat-收集日志">部署 filebeat 收集日志</h3><p>安装filebeat略。添加一个采集器配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">filebeat.inputs</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> filestream  <span class="token key atrule">id</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>filestream<span class="token punctuation">-</span>id  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">paths</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /var/log/<span class="token important">*.log</span>    <span class="token punctuation">-</span> /var/log/syslog<span class="token key atrule">filebeat.config.modules</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>path.config<span class="token punctuation">}</span>/modules.d/<span class="token important">*.yml</span>  <span class="token key atrule">reload.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">setup.template.settings</span><span class="token punctuation">:</span>  <span class="token key atrule">index.number_of_shards</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token key atrule">output.kafka</span><span class="token punctuation">:</span>  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"192.168.126.47:9092"</span><span class="token punctuation">,</span><span class="token string">"192.168.126.48:9092"</span><span class="token punctuation">,</span><span class="token string">"192.168.126.49:9092"</span><span class="token punctuation">]</span>  <span class="token comment">#username: ""</span>  <span class="token comment">#password: ""</span>  <span class="token key atrule">partition.round_robin</span><span class="token punctuation">:</span>    <span class="token key atrule">reachable_only</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment">#sasl.mechanism: "SCRAM-SHA-256"</span>  <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">"FIOPS_LOGS"</span><span class="token key atrule">processors</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">add_host_metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">when.not.contains.tags</span><span class="token punctuation">:</span> forwarded<span class="token key atrule">path.logs</span><span class="token punctuation">:</span> /var/log/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>output.kafka</code> 配置了 filebeat 的输出目标是上一步部署的 kafka，为简便起见，kafka 未做用户权限设置。topic 自己随便起个名字。filebeat 支持自动在 kafka 创建不存在的 topic，并使用默认值设置 topic 的分区数等配置。</p><p>启动 filebeat 后，在 KOWL 界面查看 topic 已经自动创建好了：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fautomation%2Fckb%2Ftopics.png" alt=""></p><p>进入topic，查看消息详情：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fautomation%2Fckb%2Fmessages.png" alt=""></p><p>可以看到filebeat采上来的日志长这样：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"@timestamp"</span><span class="token operator">:</span> <span class="token string">"2024-03-05T09:21:28.147Z"</span><span class="token punctuation">,</span>  <span class="token property">"@metadata"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"beat"</span><span class="token operator">:</span> <span class="token string">"filebeat"</span><span class="token punctuation">,</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"8.12.2"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"agent"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"ephemeral_id"</span><span class="token operator">:</span> <span class="token string">"ec85a63d-6560-4cf1-802c-c188a9a214b9"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"3c4ba1f6-6e54-4d7b-b6cf-0433fb86c6af"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"kafka-1"</span><span class="token punctuation">,</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"filebeat"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"8.12.2"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"ecs"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"8.0.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"host"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"192.168.126.47"</span><span class="token punctuation">,</span>      <span class="token string">"fe80::20c:29ff:fed6:7f4b"</span><span class="token punctuation">,</span>      <span class="token string">"10.88.0.1"</span><span class="token punctuation">,</span>      <span class="token string">"fe80::8fd:b4ff:fe26:d26d"</span><span class="token punctuation">,</span>      <span class="token string">"fe80::74a6:dbff:fe73:4e14"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"mac"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"00-0C-29-D6-7F-4B"</span><span class="token punctuation">,</span>      <span class="token string">"0A-FD-B4-26-D2-6D"</span><span class="token punctuation">,</span>      <span class="token string">"76-A6-DB-73-4E-14"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"kafka-1"</span><span class="token punctuation">,</span>    <span class="token property">"architecture"</span><span class="token operator">:</span> <span class="token string">"x86_64"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"kafka-1"</span><span class="token punctuation">,</span>    <span class="token property">"os"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"22.04.3 LTS (Jammy Jellyfish)"</span><span class="token punctuation">,</span>      <span class="token property">"family"</span><span class="token operator">:</span> <span class="token string">"debian"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Ubuntu"</span><span class="token punctuation">,</span>      <span class="token property">"kernel"</span><span class="token operator">:</span> <span class="token string">"5.15.0-91-generic"</span><span class="token punctuation">,</span>      <span class="token property">"codename"</span><span class="token operator">:</span> <span class="token string">"jammy"</span><span class="token punctuation">,</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"linux"</span><span class="token punctuation">,</span>      <span class="token property">"platform"</span><span class="token operator">:</span> <span class="token string">"ubuntu"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"559bea47fc1544d0b0c9606c9e590f42"</span><span class="token punctuation">,</span>    <span class="token property">"containerized"</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"log"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"offset"</span><span class="token operator">:</span> <span class="token number">6846610</span><span class="token punctuation">,</span>    <span class="token property">"file"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"inode"</span><span class="token operator">:</span> <span class="token string">"4194448"</span><span class="token punctuation">,</span>      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/var/log/syslog"</span><span class="token punctuation">,</span>      <span class="token property">"device_id"</span><span class="token operator">:</span> <span class="token string">"64769"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Mar  5 09:21:24 localhost filebeat[17608]: {\"log.level\":\"info\",\"@timestamp\":\"2024-03-05T09:21:24.822Z\",\"log.logger\":\"monitoring\",\"log.origin\":{\"function\":\"github.com/elastic/beats/v7/libbeat/monitoring/report/log.(*reporter).logSnapshot\",\"file.name\":\"log/log.go\",\"file.line\":187},\"message\":\"Non-zero metrics in the last 30s\",\"service.name\":\"filebeat\",\"monitoring\":{\"metrics\":{\"beat\":{\"cgroup\":{\"memory\":{\"mem\":{\"usage\":{\"bytes\":51556352}}}},\"cpu\":{\"system\":{\"ticks\":6970,\"time\":{\"ms\":10}},\"total\":{\"ticks\":12090,\"time\":{\"ms\":10},\"value\":12090},\"user\":{\"ticks\":5120}},\"handles\":{\"limit\":{\"hard\":524288,\"soft\":524288},\"open\":14},\"info\":{\"ephemeral_id\":\"ec85a63d-6560-4cf1-802c-c188a9a214b9\",\"uptime\":{\"ms\":18600109},\"version\":\"8.12.2\"},\"memstats\":{\"gc_next\":40875136,\"memory_alloc\":20938616,\"memory_total\":483685464,\"rss\":47435776},\"runtime\":{\"goroutines\":44}},\"filebeat\":{\"events\":{\"active\":0,\"added\":1,\"done\":1},\"harvester\":{\"open_files\":2,\"running\":2}},\"libbeat\":{\"config\":{\"module\":{\"running\":0}},\"output\":{\"events\":{\"acked\":1,\"active\":0,\"batches\":1,\"total\":1}},\"outputs\":{\"kafka\":{\"bytes_read\":54,\"bytes_write\":1402}},\"pipeline\":{\"clients\":2,\"events\":{\"active\":0,\"published\":1,\"total\":1},\"queue\":{\"acked\":1}}},\"registrar\":{\"states\":{\"current\":0}},\"system\":{\"load\":{\"1\":0.16,\"15\":0.25,\"5\":0.22,\"norm\":{\"1\":0.08,\"15\":0.125,\"5\":0.11}}}},\"ecs.version\":\"1.6.0\"}}"</span><span class="token punctuation">,</span>  <span class="token property">"input"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"filestream"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="部署-Clickhouse">部署 Clickhouse</h3><p>本文选择的版本是23.8.2。Clickhouse 也需要一个 Zookeeper，默认也可使用 Clickhouse 内置的 ZK。</p><p>Clickhouse 集群支持分片+副本，本文不对 Clickhouse 架构做过多介绍。本文使用 2 节点虚机部署 Clickhouse，只设置1分片、2副本。同时使用Clickhouse自带的Zookeeper，节点角色规划如下：</p><table><thead><tr><th>IP</th><th>安装软件</th><th>角色</th></tr></thead><tbody><tr><td>192.168.126.41</td><td>Clickhouse-23.8.2, zookeeper</td><td>shard0-replica0, zk_id=0</td></tr><tr><td>192.168.126.42</td><td>Clickhouse-23.8.2, zookeeper</td><td>shard0-replica1, zk_id=1</td></tr></tbody></table><p>本文使用ansible-playbook自动化部署Clickhouse，具体playbook可联系作者获取。</p><p>使用Clickhouse自带的clickhouse-client连接集群：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">clickhouse-client <span class="token parameter variable">-h</span> localhost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入密码后即可进入控制台。</p><p>配置 Clickhouse 连接 Kafka 总共需要三步：</p><ol><li>创建一个 Kafka 引擎表用于连接 Kafka</li><li>创建一个 MergeTree 或 MergeTree 系列类型的本地表作为数据表，实际存储从 kafka 消费过来的数据</li><li>创建一个物化视图关联 Kafka 引擎表和数据表，这样才能把 Kafka 消费的实际数据存入<br>以上三个步骤缺一不可</li></ol><h4 id="创建一个Kafka引擎表">创建一个Kafka引擎表</h4><p>Kafka 引擎表的字段必须和 Kafka 采上来的日志格式相匹配，日志格式是 json 格式的，<code>kafka_format</code> 可设置成 <code>JSONEachRow</code>。注意上一节里采上来的 message 是一个多层的复杂 json 格式，我们可以只选择第一层 key（即 @timestamp、message、host、log……）作为 Kafka 引擎表的字段，这样第一层的 value（可以还是一个复杂json）会作为字符串整体存入。message 里不在表字段出现的 key，或者解析失败的字段会直接被丢弃。Kafka 引擎表一般以 <code>_queue</code> 结尾。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> kafka_fiops_logs_queue <span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>message<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>host<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>log<span class="token punctuation">`</span></span> String<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> Kafka<span class="token punctuation">(</span><span class="token punctuation">)</span>SETTINGS  kafka_broker_list <span class="token operator">=</span> <span class="token string">'192.168.126.47:9092'</span><span class="token punctuation">,</span>  kafka_topic_list <span class="token operator">=</span> <span class="token string">'FIOPS_LOGS'</span><span class="token punctuation">,</span>  kafka_group_name <span class="token operator">=</span> <span class="token string">'fiopsgroup'</span><span class="token punctuation">,</span>  kafka_format <span class="token operator">=</span> <span class="token string">'JSONEachRow'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里 <code>@timestamp</code> 没有设置成 <code>Datetime</code> 类型，是因为 Clickhouse 的 <code>Datetime</code> 类型不能解析 message 的 <code>@timestamp</code> 格式 <code>2024-03-05T09:21:28.147Z</code>，所以退而求其次使用了 <code>String</code> 类型。</p><h4 id="创建一个MergeTree引擎的数据表">创建一个MergeTree引擎的数据表</h4><p>可以使用 <code>MergeTree</code>、<code>ReplicatedMergeTree</code> 等类型作为实际的数据表，其字段必须和 Kafka 引擎表保持一致。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">on</span> cluster <span class="token keyword">default</span><span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>message<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>host<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>log<span class="token punctuation">`</span></span> String<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> ReplicatedMergeTree<span class="token punctuation">(</span><span class="token string">'/clickhouse/tables/{shard}/kafka_fiops_logs_table'</span><span class="token punctuation">,</span> <span class="token string">'kafka_fiops_logs_table-{replica}'</span><span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="创建一个物化视图">创建一个物化视图</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> materialized <span class="token keyword">view</span> fiops_logs_consumer <span class="token keyword">to</span> kafka_fiops_logs_table <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> kafka_fiops_logs_queue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上三个步骤均完成以后，打开 KOWL 的 topic，切换到 Consumers 页面可以看到多出了一个 consumer group <code>fiopsgroup</code>，正是我们 Kafka 引擎表里设置的kafka_group_name。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fautomation%2Fckb%2Fconsumer.png" alt=""></p><p>查询数据表，看是否已经写入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> kafka_fiops_logs_table <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> kafka_fiops_logs_table<span class="token keyword">LIMIT</span> <span class="token number">1</span>Query id: b9424a2d<span class="token operator">-</span>fb20<span class="token operator">-</span><span class="token number">43</span>a9<span class="token operator">-</span>b584<span class="token operator">-</span><span class="token number">72351</span>b2e1017┌─<span class="token variable">@timestamp</span>───────────────┬─message──────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─host───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─log────────────────────────────────────────────────────────────────────────────────────────┐│ <span class="token number">2024</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">05</span>T04:<span class="token number">11</span>:<span class="token number">24.841</span>Z │ Mar  <span class="token number">5</span> <span class="token number">04</span>:<span class="token number">11</span>:<span class="token number">06</span> localhost systemd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Stopping Filebeat sends log files <span class="token keyword">to</span> Logstash <span class="token operator">or</span> directly <span class="token keyword">to</span> Elasticsearch<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> │ {<span class="token string">"name"</span>:<span class="token string">"kafka-1"</span><span class="token punctuation">,</span><span class="token string">"containerized"</span>:<span class="token boolean">false</span><span class="token punctuation">,</span><span class="token string">"ip"</span>:<span class="token punctuation">[</span><span class="token string">"192.168.126.47"</span><span class="token punctuation">,</span><span class="token string">"fe80::20c:29ff:fed6:7f4b"</span><span class="token punctuation">,</span><span class="token string">"10.88.0.1"</span><span class="token punctuation">,</span><span class="token string">"fe80::8fd:b4ff:fe26:d26d"</span><span class="token punctuation">,</span><span class="token string">"fe80::74a6:dbff:fe73:4e14"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"mac"</span>:<span class="token punctuation">[</span><span class="token string">"00-0C-29-D6-7F-4B"</span><span class="token punctuation">,</span><span class="token string">"0A-FD-B4-26-D2-6D"</span><span class="token punctuation">,</span><span class="token string">"76-A6-DB-73-4E-14"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"hostname"</span>:<span class="token string">"kafka-1"</span><span class="token punctuation">,</span><span class="token string">"architecture"</span>:<span class="token string">"x86_64"</span><span class="token punctuation">,</span><span class="token string">"os"</span>:{<span class="token string">"kernel"</span>:<span class="token string">"5.15.0-91-generic"</span><span class="token punctuation">,</span><span class="token string">"codename"</span>:<span class="token string">"jammy"</span><span class="token punctuation">,</span><span class="token string">"type"</span>:<span class="token string">"linux"</span><span class="token punctuation">,</span><span class="token string">"platform"</span>:<span class="token string">"ubuntu"</span><span class="token punctuation">,</span><span class="token string">"version"</span>:<span class="token string">"22.04.3 LTS (Jammy Jellyfish)"</span><span class="token punctuation">,</span><span class="token string">"family"</span>:<span class="token string">"debian"</span><span class="token punctuation">,</span><span class="token string">"name"</span>:<span class="token string">"Ubuntu"</span>}<span class="token punctuation">,</span><span class="token string">"id"</span>:<span class="token string">"559bea47fc1544d0b0c9606c9e590f42"</span>} │ {<span class="token string">"offset"</span>:<span class="token number">5176394</span><span class="token punctuation">,</span><span class="token string">"file"</span>:{<span class="token string">"path"</span>:<span class="token string">"/var/log/syslog"</span><span class="token punctuation">,</span><span class="token string">"device_id"</span>:<span class="token string">"64769"</span><span class="token punctuation">,</span><span class="token string">"inode"</span>:<span class="token string">"4194448"</span>}} │└──────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴────────────────────────────────────────────────────────────────────────────────────────────┘<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">.</span> Elapsed: <span class="token number">0.012</span> sec<span class="token punctuation">.</span> Processed <span class="token number">3.09</span> thousand <span class="token keyword">rows</span><span class="token punctuation">,</span> <span class="token number">3.68</span> MB <span class="token punctuation">(</span><span class="token number">263.09</span> thousand <span class="token keyword">rows</span><span class="token operator">/</span>s<span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">313.10</span> MB<span class="token operator">/</span>s<span class="token punctuation">.</span><span class="token punctuation">)</span>Peak memory <span class="token keyword">usage</span>: <span class="token number">4.42</span> MiB<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="优化日志采集字段">优化日志采集字段</h4><p>filebeat 采上来的日志添加了很多我们不需要的字段，会占据很多额外空间。丢弃一些字段的功能原来是由 Logstash 的filter 来完成的，不过 filebeat 现在也支持。修改filebeat 配置文件：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">filebeat.inputs</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> filestream  <span class="token key atrule">id</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>filestream<span class="token punctuation">-</span>id  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">paths</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /var/log/<span class="token important">*.log</span>    <span class="token punctuation">-</span> /var/log/syslog<span class="token key atrule">filebeat.config.modules</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>path.config<span class="token punctuation">}</span>/modules.d/<span class="token important">*.yml</span>  <span class="token key atrule">reload.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">setup.template.settings</span><span class="token punctuation">:</span>  <span class="token key atrule">index.number_of_shards</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token key atrule">output.kafka</span><span class="token punctuation">:</span>  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"192.168.126.47:9092"</span><span class="token punctuation">,</span><span class="token string">"192.168.126.48:9092"</span><span class="token punctuation">,</span><span class="token string">"192.168.126.49:9092"</span><span class="token punctuation">]</span>  <span class="token comment">#username: ""</span>  <span class="token comment">#password: ""</span>  <span class="token key atrule">partition.round_robin</span><span class="token punctuation">:</span>    <span class="token key atrule">reachable_only</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment">#sasl.mechanism: "SCRAM-SHA-256"</span>  <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">"FIOPS_LOGS"</span><span class="token key atrule">processors</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">add_host_metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">when.not.contains.tags</span><span class="token punctuation">:</span> forwarded  <span class="token punctuation">-</span> <span class="token key atrule">move_fields</span><span class="token punctuation">:</span>      <span class="token key atrule">from</span><span class="token punctuation">:</span> <span class="token string">"host"</span>      <span class="token key atrule">fields</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"hostname"</span><span class="token punctuation">,</span> <span class="token string">"ip"</span><span class="token punctuation">]</span>      <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token string">""</span>  <span class="token punctuation">-</span> <span class="token key atrule">move_fields</span><span class="token punctuation">:</span>      <span class="token key atrule">from</span><span class="token punctuation">:</span> <span class="token string">"log"</span>      <span class="token key atrule">fields</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span>      <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token string">""</span>  <span class="token punctuation">-</span> <span class="token key atrule">move_fields</span><span class="token punctuation">:</span>      <span class="token key atrule">from</span><span class="token punctuation">:</span> <span class="token string">"file"</span>      <span class="token key atrule">fields</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"path"</span><span class="token punctuation">]</span>      <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token string">""</span>  <span class="token punctuation">-</span> <span class="token key atrule">extract_array</span><span class="token punctuation">:</span>      <span class="token key atrule">field</span><span class="token punctuation">:</span> <span class="token string">"ip"</span>      <span class="token key atrule">mappings</span><span class="token punctuation">:</span>        <span class="token key atrule">hostip</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token punctuation">-</span> <span class="token key atrule">drop_fields</span><span class="token punctuation">:</span>      <span class="token key atrule">fields</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"metadata"</span><span class="token punctuation">,</span> <span class="token string">"agent"</span><span class="token punctuation">,</span> <span class="token string">"ecs"</span><span class="token punctuation">,</span> <span class="token string">"input"</span><span class="token punctuation">,</span> <span class="token string">"log"</span><span class="token punctuation">,</span> <span class="token string">"host"</span><span class="token punctuation">,</span> <span class="token string">"file"</span><span class="token punctuation">,</span> <span class="token string">"ip"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启filebeat，打开KOWL查看新的message现在长这样：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"@timestamp"</span><span class="token operator">:</span> <span class="token string">"2024-03-05T09:42:39.176Z"</span><span class="token punctuation">,</span>  <span class="token property">"@metadata"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"beat"</span><span class="token operator">:</span> <span class="token string">"filebeat"</span><span class="token punctuation">,</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"8.12.2"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Mar  5 09:42:37 localhost conmon[12590]: {\"level\":\"info\",\"ts\":\"2024-03-05T09:42:37.357Z\",\"msg\":\"assigning partitions\",\"source\":\"kafka_client\",\"why\":\"new assignments from direct consumer\",\"how\":\"assigning everything new, keeping current assignment\",\"input\":\"FIOPS_LOGS[0{0 e-1 ce0}]\"}"</span><span class="token punctuation">,</span>  <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/var/log/syslog"</span><span class="token punctuation">,</span>  <span class="token property">"hostip"</span><span class="token operator">:</span> <span class="token string">"192.168.126.47"</span><span class="token punctuation">,</span>  <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"kafka-1"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>已经去掉了没用的字段。现在修改 Clickhouse 里的表结构，使其重新适配 message。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">add</span> <span class="token keyword">column</span> hostname String<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">add</span> <span class="token keyword">column</span> hostip String<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">add</span> <span class="token keyword">column</span> path String<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">drop</span> <span class="token keyword">column</span> host<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">drop</span> <span class="token keyword">column</span> log<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Kafka 引擎表不支持 add column，只能删表重建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> kafka_fiops_logs_queue<span class="token keyword">create</span> <span class="token keyword">table</span> kafka_fiops_logs_queue<span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>message<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>hostname<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>hostip<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>path<span class="token punctuation">`</span></span> String<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> Kafka<span class="token punctuation">(</span><span class="token punctuation">)</span>SETTINGS  kafka_broker_list <span class="token operator">=</span> <span class="token string">'192.168.126.47:9092'</span><span class="token punctuation">,</span>  kafka_topic_list <span class="token operator">=</span> <span class="token string">'FIOPS_LOGS'</span><span class="token punctuation">,</span>  kafka_group_name <span class="token operator">=</span> <span class="token string">'fiopsgroup'</span><span class="token punctuation">,</span>  kafka_format <span class="token operator">=</span> <span class="token string">'JSONEachRow'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新查询：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> kafka_fiops_logs_table <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span> <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> kafka_fiops_logs_table<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span> <span class="token keyword">DESC</span><span class="token keyword">LIMIT</span> <span class="token number">1</span>Query id: <span class="token number">22</span>b83419<span class="token operator">-</span><span class="token number">1949</span><span class="token operator">-</span><span class="token number">461</span>a<span class="token operator">-</span>a688<span class="token operator">-</span><span class="token number">67</span>bbc8eef9f2┌─<span class="token variable">@timestamp</span>───────────────┬─message────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─hostname─┬─hostip─────────┬─path────────────┐│ <span class="token number">2024</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">05</span>T09:<span class="token number">49</span>:<span class="token number">13.266</span>Z │ Mar  <span class="token number">5</span> <span class="token number">09</span>:<span class="token number">49</span>:<span class="token number">12</span> localhost conmon<span class="token punctuation">[</span><span class="token number">12590</span><span class="token punctuation">]</span>: {<span class="token string">"level"</span>:<span class="token string">"info"</span><span class="token punctuation">,</span><span class="token string">"ts"</span>:<span class="token string">"2024-03-05T09:49:12.097Z"</span><span class="token punctuation">,</span><span class="token string">"msg"</span>:<span class="token string">"assigning partitions"</span><span class="token punctuation">,</span><span class="token string">"source"</span>:<span class="token string">"kafka_client"</span><span class="token punctuation">,</span><span class="token string">"why"</span>:<span class="token string">"new assignments from direct consumer"</span><span class="token punctuation">,</span><span class="token string">"how"</span>:<span class="token string">"assigning everything new, keeping current assignment"</span><span class="token punctuation">,</span><span class="token string">"input"</span>:<span class="token string">"FIOPS_LOGS[0{0 e-1 ce0}]"</span>} │ kafka<span class="token operator">-</span><span class="token number">1</span>  │ <span class="token number">192.168</span><span class="token number">.126</span><span class="token number">.47</span> │ <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>syslog │└──────────────────────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴──────────┴────────────────┴─────────────────┘<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">.</span> Elapsed: <span class="token number">0.008</span> sec<span class="token punctuation">.</span> Processed <span class="token number">3.21</span> thousand <span class="token keyword">rows</span><span class="token punctuation">,</span> <span class="token number">2.04</span> MB <span class="token punctuation">(</span><span class="token number">401.69</span> thousand <span class="token keyword">rows</span><span class="token operator">/</span>s<span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">255.17</span> MB<span class="token operator">/</span>s<span class="token punctuation">.</span><span class="token punctuation">)</span>Peak memory <span class="token keyword">usage</span>: <span class="token number">5.79</span> MiB<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="增加数据分区">增加数据分区</h4><p>类似 MySQL、TiDB 这些关系型数据库，Clickhouse 也支持数据分区（Partition），可以将上面创建的数据表按照日期进行每月分区，这里用到了函数 <code>toYYYYMM</code>，可将 <code>Date</code> 或者 <code>Datetime</code> 类型的字段转换成 <code>年月</code>，但 kafka_fiops_logs_table 表里的 <code>@timestamp</code> 字段由于解析的原因已经被我们设置成了 <code>String</code> 类型，没法直接用 <code>toYYYYMM</code> 函数，需要先把 <code>String</code> 转成 <code>Datetime</code>，用到了函数 <code>parseDateTimeBestEffort</code>。写法如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> kafka_fiops_logs_table <span class="token keyword">on</span> cluster <span class="token keyword">default</span><span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>message<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>hostname<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>hostip<span class="token punctuation">`</span></span> String<span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>path<span class="token punctuation">`</span></span> String<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> ReplicatedMergeTree<span class="token punctuation">(</span><span class="token string">'/clickhouse/tables/{shard}/kafka_fiops_logs_table'</span><span class="token punctuation">,</span> <span class="token string">'kafka_fiops_logs_table-{replica}'</span><span class="token punctuation">)</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> toYYYYMM<span class="token punctuation">(</span>parseDateTimeBestEffort<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token identifier"><span class="token punctuation">`</span>@timestamp<span class="token punctuation">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> automation </tag>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用OpenTelemetry+Quickwit实现应用可观测性</title>
      <link href="/blog/posts/19384/"/>
      <url>/blog/posts/19384/</url>
      
        <content type="html"><![CDATA[<div class="note primary no-icon"><p>OpenTelemetry 也被称为 OTel，是一个供应商中立的、开源的可观测性框架， 可用于插桩、生成、采集和导出链路、 指标和日志等遥测数据。Quickwit 是一个由 Rust 编写的、基于云原生存储数据的搜索引擎，特别适用于日志集中存储、链路数据存储。它通常用来替代 Elasticsearch 作为OpenTelemetry 的 后端存储，并且具有比 Elasticsearch 高数十倍的性能体现。</p></div><p>本文将首先介绍 OpenTelemetry 基本知识，然后介绍如何部署 Quickwit 以对接 OpenTelemetry 实现可观测性数据存储。</p><h2 id="OpenTelemetry-介绍">OpenTelemetry 介绍</h2><p>OpenTelemetry 将可观测性分成了 Log、Trace、Metrics 三个领域，如下图所示：<br><img src="https://static001.infoq.cn/resource/image/47/33/477d3e0fe1c1d3f258680317153af633.png" alt=""></p><p>在我们通常的认知中，Log 是由 Filebeat、Flume、Fluentbit 等工具从服务器、容器平台等源端采集，可经过 Logstash 等转换、处理、聚合，然后送入 Elasticsearch，经典的 ELKB 方案。</p><p>Trace 是由 Skywalking、Zipkin 等 SDK 框架结合代码打埋点，通过 Jeager（ UI + Collector）等工具进行收集和查询。</p><p>Metrics 则是需要中间件、程序开放 /metrics 端点，由 Prometheus 进行收集，由 Grafana 进行展示。</p><p>这三者共同构成了可观测性指标。在通常情况下，三者是分别由不同类型的工具进行采集、存储、展示的，而 OpenTelemetry 则将三者合并到一起，提供了统一的 OTLP 协议，使用统一的 Otel-Collector 组件进行收集。</p><h3 id="Otel-Collector-部署">Otel-Collector 部署</h3><p>前文 <a href="/blog/posts/2128614243/#%E9%83%A8%E7%BD%B2OpenTelemetry-Collector">部署OpenTelemetry Collector</a> 已经介绍了如何部署 Otel-Collector，并且将 trace 数据存入了 Elasticsearch。此处不再赘述。</p><h3 id="Opentelemetry-javaagent-配置">Opentelemetry-javaagent 配置</h3><p>本文以 Java 为例介绍如何在 JAVA_OPTS 中配置 Opentelemetry-javaagent，参考如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-javaagent:/path/to/your/opentelemetry-javaagent.jar<span class="token parameter variable">-Dotel.service.name</span><span class="token operator">=</span><span class="token operator">&lt;</span>service_name<span class="token operator">&gt;</span> <span class="token parameter variable">-Dotel.propagators</span><span class="token operator">=</span>b3-Dotel.instrumentation.common.default-enabled<span class="token operator">=</span>true-Dotel.instrumentation.common.db-statement-sanitizer.enabled<span class="token operator">=</span>false<span class="token parameter variable">-Dotel.instrumentation.redisson.enabled</span><span class="token operator">=</span>false<span class="token parameter variable">-Dotel.metrics.exporter</span><span class="token operator">=</span>prometheus <span class="token parameter variable">-Dotel.traces.exporter</span><span class="token operator">=</span>otlp<span class="token parameter variable">-Dotel.logs.exporter</span><span class="token operator">=</span>otlp,logging<span class="token parameter variable">-Dotel.exporter.otlp.endpoint</span><span class="token operator">=</span>http://otel-collector:4317<span class="token parameter variable">-Dotel.exporter.prometheus.port</span><span class="token operator">=</span><span class="token number">9464</span><span class="token parameter variable">-Dotel.exporter.prometheus.host</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上配置中，开启了 otel 的三大可观测性指标：<code>otel.traces</code>、<code>otel.logs</code>、<code>otel.metrics</code>。其中 metrics 开在了本地的 9464 端口，并指定由 prometheus 接收；logs 配置了两个导出器，一个将通过 otlp 协议送到 otel-collector，另一个打印到控制台；而 traces 和之前保持不变。最后指定导出器地址<code>otel.exporter.otlp.endpoint</code>为：<a href="http://otel-collector:4317">http://otel-collector:4317</a>。</p><h3 id="go-zero-配置">go-zero 配置</h3><p>在前文 <a href="/blog/posts/2938485576/#go-zero%E5%90%AF%E5%8A%A8%E9%93%BE%E8%B7%AF%E8%B7%9F%E8%B8%AA%E5%8A%9F%E8%83%BD">go-zero启动链路跟踪功能</a> 中，traces 通过 <code>jaeger</code> 方式送到 <code>jaeger-collector</code>、或者兼容 <code>jaeger</code> 协议的 <code>otel-collector:14278</code> 端口。本文将使用 <code>otlp</code> 协议送到 <code>otel-collector:4317</code> 端口，配置如下:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Telemetry</span><span class="token punctuation">:</span>  <span class="token key atrule">Name</span><span class="token punctuation">:</span> fiops<span class="token punctuation">-</span>automation  <span class="token key atrule">Endpoint</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector<span class="token punctuation">:</span><span class="token number">4317</span>  <span class="token key atrule">Sampler</span><span class="token punctuation">:</span> <span class="token number">1.0</span>  <span class="token key atrule">Batcher</span><span class="token punctuation">:</span> otlpgrpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用-Quickwit-存储、查询数据">使用 Quickwit 存储、查询数据</h2><h3 id="Quickwit-介绍">Quickwit 介绍</h3><p><a href="https://quickwit.io">Quickwit</a> 是一个用于日志管理和分析的开源、云原生、分布式搜索引擎。Quickwit 用 Rust 编写，从头开始设计，可在大型数据集上提供成本效益和高可扩展性，是 Elasticsearch 的现代且可靠的替代方案。</p><p>本文将 OpenTelemetry 收集到的数据从 Elasticsearch 替换为 Quickwit。</p><h3 id="Quickwit-部署">Quickwit 部署</h3><p>Quickwit 支持单节点部署和集群部署，本文仅做功能测试，使用单节点部署，生产上强烈建议使用集群方式部署，具体部署方案参见 <a href="https://quickwit.io/docs/deployment/deployment-modes">Deployment modes</a></p><p>在 Kubernetes 上以 <code>deployment</code> 方式部署：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> quickwit  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> quickwit<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> quickwit  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> quickwit      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">kubesphere.io/collectSavedLog</span><span class="token punctuation">:</span> <span class="token string">'true'</span>        <span class="token key atrule">kubesphere.io/restartedAt</span><span class="token punctuation">:</span> <span class="token string">'2024-09-19T10:01:07.865Z'</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> host<span class="token punctuation">-</span>time          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /etc/localtime            <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> timezone          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /etc/timezone            <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>config            <span class="token key atrule">defaultMode</span><span class="token punctuation">:</span> <span class="token number">420</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> qwdata          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> qwdata      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> quickwit<span class="token punctuation">-</span>container          <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'quickwit/quickwit:v0.8.1'</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> run          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> rest              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">7280</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> grpc              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">7281</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> discovery              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">7282</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> UDP          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> QW_CONFIG              <span class="token key atrule">value</span><span class="token punctuation">:</span> /quickwit/quickwit.yaml            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> QW_DATA_DIR              <span class="token key atrule">value</span><span class="token punctuation">:</span> /opt/qwdata          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">limits</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">'2'</span>              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 4000Mi            <span class="token key atrule">requests</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 100Mi          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> timezone              <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/timezone            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> host<span class="token punctuation">-</span>time              <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/localtime            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /quickwit/quickwit.yaml              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> quickwit.yaml            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /quickwit/trace<span class="token punctuation">-</span>index.yaml              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> trace<span class="token punctuation">-</span>index.yaml            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /quickwit/log<span class="token punctuation">-</span>index.yaml              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> log<span class="token punctuation">-</span>index.yaml            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> qwdata              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /opt/qwdata          <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log          <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> default      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> default      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> 25%      <span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> 25%  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">progressDeadlineSeconds</span><span class="token punctuation">:</span> <span class="token number">600</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>deployment 中用到了三个配置文件，一个是 quickwit 的主配置文件 <code>quickwit.yaml</code>，另外两个是用于新建索引的索引配置文件 <code>trace-index.yaml</code> 和 <code>log-index.yaml</code>。</p><p>主配置文件如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">data_dir</span><span class="token punctuation">:</span> /opt/qwdata<span class="token key atrule">default_index_root_uri</span><span class="token punctuation">:</span> s3<span class="token punctuation">:</span>//quickwit/quickwit<span class="token punctuation">-</span>indexes<span class="token key atrule">gossip_listen_port</span><span class="token punctuation">:</span> <span class="token number">7282</span><span class="token key atrule">listen_address</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">storage</span><span class="token punctuation">:</span>  <span class="token key atrule">s3</span><span class="token punctuation">:</span>    <span class="token key atrule">flavor</span><span class="token punctuation">:</span> minio    <span class="token key atrule">access_key_id</span><span class="token punctuation">:</span> tEbN3FvjQrH7JGCR    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//minio<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">region</span><span class="token punctuation">:</span> beijing    <span class="token key atrule">secret_access_key</span><span class="token punctuation">:</span> W11u92GPDpyvNxtuLXbkrlq6QGmo9n7F<span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>强烈建议将 quickwit 的数据存储设置为 <code>S3</code>，并在主配置文件中设置 <code>S3</code> 的地址和相关信息。</p><h3 id="创建索引">创建索引</h3><p>现在，创建两个新的索引分别用于存放 traces 和 logs。</p><p>新建索引 <code>otel-traces-v0_8</code>：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token key atrule">index_id</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>traces<span class="token punctuation">-</span>v0_8<span class="token key atrule">retention</span><span class="token punctuation">:</span>  <span class="token key atrule">period</span><span class="token punctuation">:</span> 7 days  <span class="token key atrule">schedule</span><span class="token punctuation">:</span> daily<span class="token key atrule">doc_mapping</span><span class="token punctuation">:</span>  <span class="token key atrule">field_mappings</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> trace_id      <span class="token key atrule">type</span><span class="token punctuation">:</span> bytes      <span class="token key atrule">fast</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">indexed</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">input_format</span><span class="token punctuation">:</span> hex      <span class="token key atrule">output_format</span><span class="token punctuation">:</span> hex      <span class="token key atrule">stored</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>……<span class="token key atrule">tag_fields</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token key atrule">store_source</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">index_field_presence</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">timestamp_field</span><span class="token punctuation">:</span> span_start_timestamp_nanos<span class="token key atrule">mode</span><span class="token punctuation">:</span> strict<span class="token key atrule">max_num_partitions</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token key atrule">tokenizers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入 quickwit pod，执行命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./quickwit index create --index-config trace-index.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>另外一个索引同理。现在打开 UI 页面查看 quickwit 索引：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fotelquickwit%2Findexes.png" alt=""></p><p>搜索数据：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fotelquickwit%2Fquery.png" alt=""></p><h3 id="更改-Otel-存储为-Quickwit">更改 Otel 存储为 Quickwit</h3><p>修改 otel-colletor 的配置文件，将 exporter 从 <code>jaeger-collector</code> 改为 <code>quickwit</code>，配置文件相见 <a href="https://blog-1255547500.cos.ap-beijing.myqcloud.com/resources/manifests/otel-collector.yaml">otel-collector.yaml</a></p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 可观测性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云原生CD项目LizardCD</title>
      <link href="/blog/posts/34304/"/>
      <url>/blog/posts/34304/</url>
      
        <content type="html"><![CDATA[<p>历经公司内部近两年的实践和优化，今天终于把自研的云原生CD工具开源了~开心~</p><h2 id="背景">背景</h2><p>大概从2022年下半年起，为了满足公司容器化部署应用的持续交付需求，我就开始在市面上寻找相应的项目和工具。做云原生部署，当然首选CNCF的项目。</p><h3 id="ArgoCD">ArgoCD</h3><div class="note success no-icon"><p><a href="https://argoproj.github.io/cd/">https://argoproj.github.io/cd/</a></p></div><p>从CNCF的毕业项目开始，我第一个找的就是ArgoCD。背靠Argo这个大项目，ArgoCD确实是一个功能无比强大的CD平台，以GitOps为核心，将用户期望的工作负载状态以声明式yaml存放于Gitlab，通过Operator控制器实现应用实际状态和用户声明的状态保持一致。确实是经典的玩法，但这个玩法在我所在的部门却并不适用，原因主要是两点：</p><ol><li>我所在的业务部门并不是K8S平台的管理和运营方，我们作为使用方，只有namespace级别的权限。而且公司内部使用的是青云的KubeSphere，KubeSphere的多租户做的非常好。对于普通用户，我们只能通过KS界面访问到有权限的企业空间和namespace（KS里叫项目空间），无法拿到kubeconfig，没有clusterrole，也不知道apiserver地址。CNCF里类似ArgoCD这样的项目，打底都需要部署CRD+Operator，没有集群权限根本无法玩儿。</li><li>GitOps在我司实际使用中会有各种各样的问题。我承认将应用的manifests维护在Gitlab是比较好的一个方法，作为应用资源的一部分可以被版本管理和回退，但我们一个项目每天可能会部署好几十次，每次发布应用都必须提交Gitlab有点没必要，大多数情况下就是更新一个image，image本身有镜像仓库管理，并不需要版本管理，也不会从Gitlab做回退。一般CI流水线之后接部署只需要做一个<code>set image</code>的动作。</li></ol><h3 id="KubeVela">KubeVela</h3><div class="note success no-icon"><p><a href="https://kubevela.net/zh/">https://kubevela.net/zh/</a></p></div><p>Pass掉ArgoCD以后，我又找到了KubeVela，这是一个CNCF的孵化项目，他提出了一个很新颖的概念——OAM(<a href="https://kubevela.net/zh/docs/platform-engineers/oam/oam-model">Open Application Model</a>)，它将应用部署所需的所有组件和各项运维动作，描述为一个统一的、与基础设施无关的“部署计划”。这玩意听起来逼格很高啊，但闭着眼睛想都知道，为了实现它的OAM，必然需要CRD，仔细研读它的官网，不出所料，各种控制器直接就把我劝退了。</p><p>和ArgoCD一样，对于对接多集群，KubeVela使用的也是kubeconfig（参见<a href="https://kubevela.net/zh/docs/case-studies/multi-cluster">多集群应用交付</a>)，难道没有kubeconfig，作为一个普通用户就没有资格做CD了吗？我只是需要一个小小的CD，用不上这么多高大上的功能啊。</p><h3 id="公司内部平台">公司内部平台</h3><p>将视线转移到公司内部提供的部署平台，公司当然不能让业务部门的应用无法在容器部署，IT部门不就是为了业务部门服务嘛。但，公司的部署平台在性能、可扩展性、定制化程度各方面还是不能满足我的需求。</p><h3 id="自己搞">自己搞</h3><p>以上的各种问题促使我必须要自己开发一个CD功能，解决的痛点直接瞄准我所在部门的切实需求。</p><p>经过两周开发，我基于client-go封装的K8S接口上线了，通过K8S的更新策略StrategicMergePatchType可以实现对工作负载yaml字段的局部更新，以实现<code>set image</code>。后来我又陆陆续续加入了重启（rollout restart）、scale（通过<code>set replicas</code>）、获取资源定义yaml、通过yaml更新资源等一系列功能，而这，就是LizardCD的前身。</p><p>稳定使用了一年半时间，日均部署400余次，前前后后修了不少bug，终于我觉得时机成熟，本着开源奉献的精神，不如将此项目丰富一下共功能后开源，梦想一下借助广大开发者共同帮助这个项目进步和发展。</p><h2 id="LizardCD">LizardCD</h2><p>LizardCD是一个轻量级的云原生持续交付项目，基于server-agent模式运行，支持多集群环境应用交付。</p><h3 id="名称由来">名称由来</h3><p>仿照各类CNCF项目的logo都是一个小动物（比如go是一个小鼹鼠），我也从各种动物里面找，觉得蜥蜴这个动物比较贴近我的想法，lizardcd-agent像一个蜥蜴一样吸附于K8S集群中，完成各种资源操作任务。</p><h3 id="解决痛点">解决痛点</h3><ul><li>不同于ArgoCD之类的项目，LizardCD没有使用CRD，也没有Operator，因此部署的时候不需要clusterrole</li><li>agent可以以<code>In-Cluster</code>模式，作为deployment部署于集群中，通过serviceaccount使用少量的rbac权限（一个namespace级别，仅需create/patch/list deployments/statefulsets等role即可）。因此无需kubeconfig、无需clusterrole、无需apiserver地址，特别适用于只能通过dashboard访问某些namespace的用户场景</li><li>对接多集群也不需要kubeconfig，在要接入集群的namespace中部署一个或多个agent即可</li></ul><h3 id="特性">特性</h3><ul><li>云原生应用部署，同时支持实体机以及通过HTTP接口对接第三方部署/自动化平台，理论上可支持任意提供HTTP接口的平台/系统，如 ArgoCD、Ansible/AWX</li><li>无需 <code>kubeconfig</code>、<code>ClusterRole</code>，也无需知道 APIServer 地址、证书，agent 支持 <code>InCluster</code> 模式部署，特别适合于非容器集群管理员的普通用户进行应用部署</li><li>支持多集群管理，通过统一的 <code>ui</code> 和 <code>cli</code> 集中查看、管理、操作多个集群的工作负载，并进行应用部署</li><li>agent 可以在启动时自动地注册到服务注册中心，只要网络端口可达。之后 server 会自动发现已注册并且网络端口可达的 agent，就此完成纳管过程</li><li>以应用为中心，提供完善的应用管理。无论应用部署于容器或是实体机，或是在第三方平台创建的一个部署对象，lizardcd 均支持对其进行持续交付</li><li>对于部署了服务网格（如 <code>Istio</code>）的集群，Lizardcd 支持将其接入，并结合应用管理实现灰度发布、流量控制等操作（例如基于 header 或权重）</li><li>支持完整的 <code>Helm Cli</code> 功能，包括 Repo 添加、删除，Release 安装、卸载、更新、历史记录，README 和 values 文件查看、编辑等</li><li>内置 <code>Prometheus Metrics</code> 指标监控，以及基于 <code>Opentelemetry</code> 和 <code>Jaeger</code> 的链路跟踪功能</li></ul><h3 id="架构">架构</h3><p><img src="https://project-1255547500.cos.ap-beijing.myqcloud.com/lizardcd%2Flizardcd%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt=""></p><h3 id="使用方法">使用方法</h3><p>项目地址：<a href="https://github.com/hongyuxuan/lizardcd">https://github.com/hongyuxuan/lizardcd</a></p><p>项目提供二进制文件和Helm Charts两种部署方式。使用二进制文件部署时必须提前准备好注册中心，支持etcd、nacos、consul，默认使用etcd。需要注册中心和agent、server网络端口可达。使用Helm Charts时可勾选是否同时安装注册中心。具体用法详见 <a href="https://hongyuxuan.github.io/lizardcd-doc/">lizardcd官方文档</a></p><p>欢迎各路云原生大神指正，并提出你们新的需求~</p>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> automation </tag>
            
            <tag> DevOps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S网络系列之四：网络策略NetworkPolicy</title>
      <link href="/blog/posts/58928/"/>
      <url>/blog/posts/58928/</url>
      
        <content type="html"><![CDATA[<p>敬请期待</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>K8S网络系列之三：流量新贵GatewayAPI</title>
      <link href="/blog/posts/25942/"/>
      <url>/blog/posts/25942/</url>
      
        <content type="html"><![CDATA[<div class="note success no-icon"><p><a href="https://gateway-api.sigs.k8s.io/">https://gateway-api.sigs.k8s.io/</a></p></div><p>GatewayAPI是一个K8S官方项目，聚焦于提供L4和L7层的流量路由。该项目代表了下一代K8S流量入口、负载均衡和服务网格。</p><p>GatewayAPI提供了一组CRDs，这些CRD的结构和承担的角色如下图所示：<br><img src="https://gateway-api.sigs.k8s.io/images/resource-model.png" alt=""></p><h2 id="配置步骤">配置步骤</h2><h3 id="安装Gateway-API">安装Gateway API</h3><p>首先安装Gateway API包括的一系列CRDs，执行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.0.0/standard-install.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果打不开，可使用下面的文件<br><a href="https://blog-1255547500.cos.ap-beijing.myqcloud.com/resources%2Fmanifests%2Fmetallb.yaml">standard-install.yaml</a></p><h3 id="选定一个Controller">选定一个Controller</h3><p>安装好CRD以后，还需要找一个能提供Gateway API功能的controller实现方案，如下所示：<br><a href="https://gateway-api.sigs.k8s.io/implementations/">https://gateway-api.sigs.k8s.io/implementations/</a></p><p>本文选择其中的<a href="https://gateway-api.sigs.k8s.io/implementations/#istio">Istio</a>来作为Gateway API的controller实现。</p><h3 id="安装Istio">安装Istio</h3><p>在<a href="https://hongyuxuan2138.gitee.io/blog/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/%E5%BE%AE%E6%9C%8D%E5%8A%A1/">Istio系列文章</a>里面我们介绍过安装Istio，但该文中使用的是<code>Istio API</code>，本文我们将使用Istio提供的<code>Gateway API</code>来实现。</p><p>首先需要安装Istio，过程略。</p><p>接着我们按照<a href="https://istio.io/latest/zh/docs/examples/bookinfo/">Bookinfo 应用</a>这篇文档中的内容，来通过Gateway API实现流量控制。</p><p>按照前序操作，假设现在Bookinfo服务启动并运行中，现在需要使应用程序可以从外部访问Kubernetes集群， 例如使用浏览器。可以使用网关实现这个目标。</p><ol><li>为Bookinfo应用程序定义一个网关。使用以下命令创建<a href="https://gateway-api.sigs.k8s.io/api-types/gateway/">Kubernetes Gateway</a>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/gateway-api/bookinfo-gateway.yamlgateway.gateway.networking.k8s.io/bookinfo-gateway createdhttproute.gateway.networking.k8s.io/bookinfo created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中bookinfo-gateway.yaml如下所示：</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>bookinfo-gateway.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> gateway.networking.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>gateway<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">gatewayClassName</span><span class="token punctuation">:</span> istio  <span class="token key atrule">listeners</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP    <span class="token key atrule">allowedRoutes</span><span class="token punctuation">:</span>      <span class="token key atrule">namespaces</span><span class="token punctuation">:</span>        <span class="token key atrule">from</span><span class="token punctuation">:</span> Same<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> gateway.networking.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> HTTPRoute<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hostnames</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"bookinfo.default.cicc.io"</span>  <span class="token key atrule">parentRefs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>gateway  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">matches</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span>        <span class="token key atrule">type</span><span class="token punctuation">:</span> Exact        <span class="token key atrule">value</span><span class="token punctuation">:</span> /productpage    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span>        <span class="token key atrule">type</span><span class="token punctuation">:</span> PathPrefix        <span class="token key atrule">value</span><span class="token punctuation">:</span> /static    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span>        <span class="token key atrule">type</span><span class="token punctuation">:</span> Exact        <span class="token key atrule">value</span><span class="token punctuation">:</span> /login    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span>        <span class="token key atrule">type</span><span class="token punctuation">:</span> Exact        <span class="token key atrule">value</span><span class="token punctuation">:</span> /logout    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span>        <span class="token key atrule">type</span><span class="token punctuation">:</span> PathPrefix        <span class="token key atrule">value</span><span class="token punctuation">:</span> /api/v1/products    <span class="token key atrule">backendRefs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>从bookinfo网关资源处获取网关地址和端口：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">INGRESS_HOST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get gtw bookinfo-gateway <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">'{.status.addresses[0].value}'</span><span class="token variable">)</span></span><span class="token builtin class-name">export</span> <span class="token assign-left variable">INGRESS_PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get gtw bookinfo-gateway <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">'{.spec.listeners[?(@.name=="http")].port}'</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>设置GATEWAY_URL：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GATEWAY_URL</span><span class="token operator">=</span><span class="token variable">$INGRESS_HOST</span><span class="token builtin class-name">:</span><span class="token variable">$INGRESS_PORT</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>确认可以从集群外部访问应用</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token string">"http://<span class="token variable">${GATEWAY_URL}</span>/productpage"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-o</span> <span class="token string">"&lt;title&gt;.*&lt;/title&gt;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果有正常输出，说明Istio提供的Gateway API可以正常工作了。</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S网络系列之二：Ingress介绍和使用</title>
      <link href="/blog/posts/55739/"/>
      <url>/blog/posts/55739/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>Ingress类似一个7层HTTP服务器，通过配置域名、location路径等将访问到ingress的请求反向代理到service，再由service路由到pod。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fingress%2Fingress-arch.png" alt=""></p><p>Ingress需要对应的Controller去实现，实现Ingress Controller的方案和开源项目有很多，最常见的就是Nginx Ingress Controller。除此之外还有Kong、APISIX、HAProxy等。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fingress%2Fingress-controller.png" alt=""></p><p>下表是各类Ingress Controller的对比：</p><table><thead><tr><th>对比项</th><th>APISIX Ingress</th><th>Nginx Ingress</th><th>Kong Ingress</th><th>Traefix</th><th>HAProxy</th><th>Istio Ingress</th></tr></thead><tbody><tr><td>协议</td><td>http/https,http2,grpc,tcp/udp,tcp+tls,Dubbo</td><td>http/https,http2,grpc,tcp/udp</td><td>http/https,http2,grpc</td><td>http/https,http2,grpc,tcp,tcp+tls</td><td>http/https,http2,grpc,tcp,tcp+tls</td><td>http/https,http2,grpc,tcp,tcp+tls,mongo,mysql,redis</td></tr><tr><td>基础平台</td><td>Openresty/tengine</td><td>Nginx</td><td>openresty</td><td>Traefik</td><td>Haproxy</td><td>Envoy</td></tr><tr><td>路由匹配</td><td>path,method,host,header,nginx变量,args变量,自定义函数</td><td>host,path</td><td>path,method,host,header</td><td>path,method,host,header,query,path prefix</td><td>host,path</td><td>path,method,host,header</td></tr><tr><td>命名空间支持</td><td>-</td><td>-</td><td>指定命名空间</td><td>公用或指定命名空间</td><td>公用或指定命名空间</td><td>公用或指定命名空间</td></tr><tr><td>部署策略</td><td>ab部署、灰度发布、金丝雀发布</td><td>-</td><td>金丝雀部署、蓝绿部署</td><td>金丝雀部署、蓝绿部署、灰度发布</td><td>蓝绿部署、灰度发布</td><td>金丝雀部署、蓝绿部署、灰度发布</td></tr><tr><td>upstream探测</td><td>重试、超时、心跳、熔断</td><td>重试、超时、心跳</td><td>心跳、熔断</td><td>重试、超时、心跳、熔断</td><td>探测url、ip、port</td><td>重试、超时、心跳、熔断</td></tr><tr><td>负载均衡算法</td><td>一致性hash、WRR</td><td>RR、会话保持、最小连接、最短时间、一致性hash</td><td>WRR、会话保持</td><td>WRR、动态RR、会话保持</td><td>RR、static-RR、最小连接、源IP、url、header、会话保持</td><td>RR、会话保持、一致性hash、maglev负载均衡</td></tr></tbody></table><h2 id="配置说明">配置说明</h2><h3 id="ingress-spec字段说明">ingress.spec字段说明</h3><table><thead><tr><th>字段</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>defaultBackend</td><td>&lt;Object&gt;</td><td>当请求不匹配任何rules时，使用的默认流量处理后端。如果没有rules，则必须指定defaultBackend。如果没有设置defaultBackend，那么对不匹配任何规则的请求的处理将取决于Ingress Controller</td></tr><tr><td>ingressClassName</td><td>&lt;string&gt;</td><td>指定ingressClass资源的名字。用于替代退役的annotation ‘<a href="http://kubernetes.io/ingress.class">kubernetes.io/ingress.class</a>’。当同时设置时并出现冲突时，annotation优先级高于ingressClassName，并发出警告。<br>xxClassName广泛应用于k8s的各类资源，表示指定对该类资源的一个实现，通常都需要一个安装一个Controller</td></tr><tr><td>rules</td><td>&lt;[]Object&gt;</td><td>用于配置Ingress Controller的主机规则列表。如果未指定或者没有匹配的规则，所有流量都被发送到defaultBackend</td></tr><tr><td>tls</td><td>&lt;[]Object&gt;</td><td>TLS配置。Ingress目前只支持一个TLS端口443.如果列表中的多个成员指定了不同的主机，那么根据SNI TLS扩展指定的主机名，它们将在同一个端口上多路复用，如果实现Ingress的控制器支持SNI。<br>备注：SNI(Server Name Indication) 是TLS的扩展，用来解决一个服务器拥有多个域名的情况</td></tr></tbody></table><h3 id="ingress-spec-rules说明">ingress.spec.rules说明</h3><table><thead><tr><th>字段</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>host</td><td>&lt;string&gt;</td><td>访问主机的FQDN。1.不允许使用IP地址。2.不允许使用":“指定端口，端口隐式的表示为80-http、443-https。<a href="http://3.xn--foo-g88dj4ao0au0jmqf3h021czx0bu68aivu.bar.com">3.可以精准使用主机名如foo.bar.com</a>，也可以”<em>"作为前缀如</em>.foo.com，但不能独立使用"*"作为主机名</td></tr><tr><td>http</td><td>&lt;Object&gt;</td><td>指向后端的http选择器列表<br> paths: &lt;[]Object&gt; - required - 将请求映射到后端的路径集合</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S网络系列之一：Service的基本原理和工作模式</title>
      <link href="/blog/posts/40075/"/>
      <url>/blog/posts/40075/</url>
      
        <content type="html"><![CDATA[<h2 id="kube-proxy的作用">kube-proxy的作用</h2><p>kube-proxy的工作流程<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fservice%2Fkube-proxy.png" alt=""><br>在k8s中，service的ClusterIP能够实现数据报文请求的转发，需要在每个node节点上部署一个组件kube-proxy：</p><ul><li>实时监控API，获取service和pod信息，来保持pod和虚拟IP的映射关系</li><li>维护本地netfilter、iptables、IPVS等内核组件，实现数据报文的转发规则</li><li>实现每个node节点上虚拟IP的发布和路由维护</li><li>构建路由信息，通过转发规则转发报文到虚拟IP对应的pod</li></ul><h2 id="kube-proxy的三种模式">kube-proxy的三种模式</h2><h3 id="1-Userspace-Proxy-Mode">1.Userspace Proxy Mode</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fservice%2Fkube-proxy-mode.png" alt=""><br>在userspace代理模式下，kube-proxy起到一个反向代理的功能，对userspace的报文封装再往kernelspace转发，主要是处理路由规则下发，数据包转发和负载均衡，所以kube-proxy会在网络流量和数据报文传输较高时频繁地在userspace和kernelspace之间进行上下文切换。</p><p>在该模式下，kube-proxy流量转发步骤：</p><ul><li>接受APISserver新建或删除service和pod的指令</li><li>当获取到新建service的指令后，kube-proxy在node上开放随机端口，然后转发到pod上</li><li>kube-proxy会维护iptables规则，将访问service的虚拟IP和端口的流量拦截并重定向到上面开放的端口</li><li>当重定向的流量获取到node端口时，kube-proxy作为一个负载均衡器，把流量分发给后端的pod</li></ul><h3 id="2-Iptables-Proxy-Mode">2.Iptables Proxy Mode</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fservice%2Fkube-proxy-iptables.png" alt=""><br>userspace代理模式由于性能原因，在kubernetes v1.2以后就不再怎么使用了，取而代之的是iptables代理模式。在iptables模式中，kube-proxy不再作为反向代理在虚拟IP和pod之间进行转发，而是将这个工作交给iptables来做，iptables和netfilter紧密合作在kernelspace里就实现了数据包的转发。</p><p>在该模式下，kube-proxy流量转发步骤：</p><ul><li>接受APISserver新建或删除service和pod的指令</li><li>kube-proxy在node上设置iptables规则，当有请求转发到service的虚拟IP上时，会立即被捕获并重定向到此service的一个pod上</li><li>kube-proxy会在node上为每一个service对应的pod设置iptables规则</li></ul><h3 id="3-IPVS-Proxy-Mode">3.IPVS Proxy Mode</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fservice%2Fkube-proxy-ipvs.png" alt=""><br>IPVS是lvs的一个组件，提供高性能、高可靠的四层负载均衡器，IPVS是IP Virtual Server的简写。IPVS构建在netfilter上，作为Linux内核的一部分，在四层实现了负载均衡。IPVS能直接转发基于service的TCP/UDP到Real Server上；还能直接构建一个虚拟IP并通过负载均衡算法，把请求转发到pod上。这里的IPVS的功能就类似于kube-proxy在userspace代理模式下作的工作。</p><p>而在iptables模式中，一个k8s集群会有大量service，意味着会有极大量的iptables规则，IPVS在这方面做了改进，它将网络转发规则用hash tables来存储，而且主要工作在kernelspace，尖山了上下文切换影响的性能。</p><h2 id="Service的概念">Service的概念</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fservice%2Fservice.png" alt=""><br>service是K8S中的核心资源类型。一个pod运行起来以后，在集群的pod之间可以直接写podIP或者pod名称访问，但集群之外、或者跨namespace的pod想要想访问这个pod，就必须为之建立一个service。service是pod对外提供访问的必经之路。</p><p>service可以根据标签选择器（label selector）对应到pod。当创建一个service时也会对应创建一个<code>endpoint</code>对象，<code>endpoint</code>是用来做容器发现的。当pod重启以后，podIP和名称都会发生变化，但service不会变，它会监听APISserver通过<code>endpoint</code>实时更新它所关联的pod。service通过kube-proxy组件实现将网络数据路由到它所关联的pod。</p><p>service还提供了负载均衡的能力，它对于收到的请求会基于<code>RoundRobin</code>轮询算法路由到后端的pod。</p><h2 id="Service四种类型">Service四种类型</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fnetwork%2Fservice%2Fservice-type.png" alt=""></p><h3 id="ClusterIP">ClusterIP</h3><p>默认类型，是NodePort和LoadBalancer类型的基础。使用clusterIP映射selector标签关联的pod的动态IP，为副本控制器管理的pod的多副本提供统一接入点。默认不指定serviceType的话会分配clusterIP，并根据创建集群时设置的service的CIDR随机分配一个IP。</p><h3 id="NodePort">NodePort</h3><p>在ClusterIP基础之上，在所有集群成员节点上暴露相同的nodePort（可用范围30000~32767），用户通过访问任意集群成员节点的nodePort以转发ClusterIP。</p><h3 id="LoadBalancer">LoadBalancer</h3><p>在NodePort基础上，调用云供应商提供的功能自动创建一个4层负载均衡器，用户通过云供应商提供的负载均衡器以转发到成员节点的nodePort。负载均衡器的端口和service的端口保持一致。</p><h3 id="ExternalName">ExternalName</h3><p>不同于以上三种，不使用selector关联当前命名空间中的pod。把externalName所指定的互联网DNS主机名，在集群内创建Service NAME别名，类似于CNAME记录。</p><h2 id="总结">总结</h2><p>K8S向集群外部暴露端口方案</p><table><thead><tr><th>暴露方案</th><th>原理</th><th>优点</th><th>缺点</th><th>使用场景</th></tr></thead><tbody><tr><td>port-forward</td><td>通过kubectl port-forward，建立socket监听转发pod、deployment、service端口到本地，另起终端通过访问本机指定端口</td><td>独立于应用，无需修改应用配置。无权ssh访问成员节点时的用法</td><td>不可用于生产</td><td>开发人员测试</td></tr><tr><td>hostPort</td><td>但pod暴露方案，pod所在节点上的kube-proxy维护该节点iptables的NAT表的自定义链规则，在集群外部通过访问pod所在节点的固定端口，已访问pod。通过pod.spec.containers.ports.hostPort指定节点监听端口</td><td>简单、测试</td><td>无控制器的单pod</td><td>测试环境，集群外部临时访问无控制器管理的单pod</td></tr><tr><td>hostNetwork</td><td>单pod使用所在节点的网络名称空间，访问节点即访问pod。需要开启pod.spec.hostNetwork: true</td><td>简单，把传统基础架构服务容器化</td><td>安全隐患，需要使用securityContext加固</td><td>测试环境，或传统基础架构服务容器化。特殊容器如ingress controller</td></tr><tr><td>nodePort</td><td>暴露单pod、service或由rs、rc、deployment所管理的pod。NodePort类型SVC，通过访问所有成员节点的svc.spec.ports.nodePort以转发到service endpoints</td><td>可用于暴露多副本应用</td><td>依赖于外部自维护LB，统一集群节点访问入口</td><td>on-premise配置外部LB暴露4层业务</td></tr><tr><td>LoadBalancer</td><td>通过访问云供应商提供的LB，流量调度到成员节点的nodePort</td><td>云供应商提供LB，无需维护</td><td>依赖于公有云4层LB，不适合暴露http/https应用</td><td>使用云供应商托管的k8s，如AKS、EKS、GKE暴露非7层应用</td></tr><tr><td>ingress</td><td>7层暴露方案。通过访问DNS主机名，DNS记录解析到ingress controller，再由ingress controller转发到service</td><td>无需配置维护L7 LB适用于暴露http/https应用</td><td>类型较多，合理选择</td><td>标准化暴露7层应用</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S入门系列之三：安装部署高可用K8S集群</title>
      <link href="/blog/posts/42179/"/>
      <url>/blog/posts/42179/</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备">环境准备</h2><p>Vmware Workstation准备4台虚机，提前安装好ubuntu22.04系统，使用1master + 3node架构安装K8S集群，如下表所示：</p><table><thead><tr><th>主机名</th><th>IP</th><th>角色</th><th>操作系统</th></tr></thead><tbody><tr><td>k8s-master</td><td>192.168.126.188</td><td>control-plane</td><td>ubuntu22.04</td></tr><tr><td>k8s-node1</td><td>192.168.126.189</td><td><none></none></td><td>ubuntu22.04</td></tr><tr><td>k8s-node2</td><td>192.168.126.190</td><td><none></none></td><td>ubuntu22.04</td></tr><tr><td>k8s-node3</td><td>192.168.126.191</td><td><none></none></td><td>ubuntu22.04</td></tr></tbody></table><h2 id="安装K8S集群">安装K8S集群</h2><div class="note success no-icon"><p>本文使用sealos工具安装集群，官方文档：<a href="https://sealos.run/docs/self-hosting/lifecycle-management/quick-start/deploy-kubernetes">https://sealos.run/docs/self-hosting/lifecycle-management/quick-start/deploy-kubernetes</a></p></div><h3 id="先决条件">先决条件</h3><ul><li><a href="https://sealos.run/docs/self-hosting/lifecycle-management/quick-start/install-cli/">下载 Sealos 命令行工具</a></li><li>确保master节点到所有node节点的免密访问（配置公私钥）</li><li>每个集群节点应该有不同的主机名。主机名不要带下划线</li><li>所有节点的时间需要同步</li></ul><h3 id="查看集群镜像">查看集群镜像</h3><p>使用<a href="https://explore.ggcr.dev/">Registry Explorer</a>可以查看K8s集群镜像的所有版本</p><p>在第二个框直接输入 <a href="http://registry.cn-shanghai.aliyuncs.com/labring/kubernetes">registry.cn-shanghai.aliyuncs.com/labring/kubernetes</a><br>然后点击"Submit Query"：<br><img src="https://sealos.run/assets/images/registry-explorer-0fdf61405931ea12795a934f9af1b9e0.png" alt=""><br>根据列出来的sealos支持的K8S版本，选择其中一个。本文选择当时的最新版v1.29.1。</p><h3 id="一键安装K8S集群">一键安装K8S集群</h3><p>目前版本的K8S看起来网络插件已经换成了<a href="https://cilium.io/">cilium</a>，基于时下火爆的eBPF的一个网络观测和安全解决方案。在Registry Explorer中选择一个helm和cilium版本，然后执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sealos run registry.cn-shanghai.aliyuncs.com/labring/kubernetes:v1.29.1 registry.cn-shanghai.aliyuncs.com/labring/helm:v3.9.4 registry.cn-shanghai.aliyuncs.com/labring/cilium:v1.14.5 <span class="token parameter variable">--masters</span> <span class="token number">192.168</span>.126.188 <span class="token parameter variable">--nodes</span> <span class="token number">192.168</span>.126.189,192.168.126.190 <span class="token parameter variable">-i</span> /root/.ssh/id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>本人初始化只安装了2个node，另一个node留作验证添加节点。</p><p>在网络通畅的情况下（非离线）等待一会（大约2min）就能完成安装，还是非常方便的。</p><h2 id="安装nerdctl">安装nerdctl</h2><p>新版本的K8S底层已经不再使用docker作为容器引擎，改为使用containerd，但containerd的ctr命令非常难用，推荐使用nerdctr。nerdctl是一个与docker cli风格兼容的containerd的cli工具，github地址：<a href="https://github.com/containerd/nerdctl%E3%80%82">https://github.com/containerd/nerdctl。</a></p><p>nerdctr包含完整版和简易版，完整版还包含了containerd，我们用sealos安装K8S已经自带了containerd，所以下载nerdctr简易版即可。解压后将二进制包放到<code>$PATH</code>下。</p><p>因为nerdctr完全兼容docker，所以可以直接用alias将nerdctr别名为docker：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"alias docker=/usr/local/bin/nerdctr"</span> <span class="token operator">&gt;&gt;</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装Metrics-server">安装Metrics-server</h2><p>安装了<code>metrics-server</code>后才能使用<code>kubectl top</code>命令查看集群资源监控。可以单独安装<code>metrics-server</code>，也可以在安装了<code>Kuboard</code>（下文要安装的图形化界面）之后，由<code>kuboard</code>提供<code>metrics-scraper</code>，也能使用<code>kubectl top</code>命令</p><h2 id="安装MetalLB">安装MetalLB</h2><div class="note success no-icon"><p>LoadBalancer是K8S提供的四层网络访问方式，一般云厂商都会提供。但如果是我们自己安装的K8S则没有LoadBalancer。MetalLB是一个开源的LoadBalancer产品，非常适合在自己搭的K8S集群上提供四层网络服务。</p></div><div class="note success no-icon"><p>MetalLB官网：<a href="https://metallb.universe.tf/installation/">https://metallb.universe.tf/installation/</a></p></div><h3 id="准备工作">准备工作</h3><ol><li>修改kube-proxy的配置文件将ipvs的<code>strictARP</code>参数改为<code>true</code></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl edit configmap <span class="token parameter variable">-n</span> kube-system kube-proxy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeproxy.config.k8s.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> KubeProxyConfiguration<span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">"ipvs"</span><span class="token key atrule">ipvs</span><span class="token punctuation">:</span>  <span class="token key atrule">strictARP</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装MetalLB-2">安装MetalLB</h3><p>准备yaml文件：<a href="https://blog-1255547500.cos.ap-beijing.myqcloud.com/resources%2Fmanifests%2Fmetallb.yaml">metallb.yaml</a></p><h4 id="执行命令安装">执行命令安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> metallb.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上操作将MetalLB安装到<code>metalb-system</code>命名空间，包括以下组件：</p><ul><li>metallb-system/controller deployment：这是一个集群范围内的controller，用于分配IP地址</li><li>metallb-system/speaker daemonset：This is the component that speaks the protocol(s) of your choice to make the services reachable.</li><li>service accounts for the controller and speaker, along with the RBAC permissions that the components need to function.</li></ul><p>以上yaml并不包括需要设置LoadBalancer的配置文件，MetalLB将会一直处于空闲状态直到我们开始部署一个资源。</p><p>以上命令会安装如下CRD资源：<code>IPAddressPool</code>, <code>L2Advertisement</code>等。</p><h4 id="配置IP地址池">配置IP地址池</h4><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>ipaddresspool.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> metallb.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IPAddressPool<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> metallb<span class="token punctuation">-</span>pool  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> metallb<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">addresses</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 192.168.126.200<span class="token punctuation">-</span>192.168.126.210<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="公告服务IP">公告服务IP</h4><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>l2advertisement.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> metallb.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> L2Advertisement<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> metallb<span class="token punctuation">-</span>advertisement  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> metallb<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ipAddressPools</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> metallb<span class="token punctuation">-</span>pool<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用">使用</h3><p>编辑任意一个svc，将其type改为<code>LoadBalancer</code>，可以看到<code>EXTERNAL-IP</code>自动从我们配置的IP地址池中按顺序分配了一个可用IP。</p><h2 id="安装Kuboard">安装Kuboard</h2><p>命令行操作K8S毕竟不太方便，因此还需要为K8S配一个图形化界面。</p><div class="note success no-icon"><p>kuboard是一个K8S多集群管理界面，提供了K8S的集群管理、集群监控、资源操作等功能，官网：<a href="https://kuboard.cn/">https://kuboard.cn/</a></p></div><p>kuboard有多种安装方式，为便于测试，最终选择了static pod方式安装：<br><a href="https://kuboard.cn/install/v3/install-static-pod.html">https://kuboard.cn/install/v3/install-static-pod.html</a></p><p>使用此方式安装kuboard时，kuboard将使用该节点的80端口暴露服务，并且将数据存储在<code>/usr/share/kuboard</code>目录下。</p><p>在 Kubernetes master 节点上，执行如下两行指令，即可根据提示完成 kuboard 安装。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://addons.kuboard.cn/kuboard/kuboard-static-pod.sh <span class="token parameter variable">-o</span> kuboard.sh<span class="token function">sh</span> kuboard.shcurrent <span class="token function">ip</span> address is <span class="token number">192.168</span>.126.188create <span class="token function">file</span> /root/kuboard-sa.yamlkubectl apply <span class="token parameter variable">-f</span> /root/kuboard-sa.yamlnamespace/kuboard createdserviceaccount/kuboard-admin createdclusterrolebinding.rbac.authorization.k8s.io/kuboard-admin-crb createdserviceaccount/kuboard-viewer createdclusterrolebinding.rbac.authorization.k8s.io/kuboard-viewer-crb createdcreate <span class="token function">file</span> /etc/kubernetes/manifests/kuboard.yamlrestart kubelet检查状态 待 kuboard-v3-k8s-master 的容器组变为 Running 状态后，则安装成功，可以通过 http://192.168.126.188 访问 kuboard 界面No resources found <span class="token keyword">in</span> kuboard namespace.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问kuboard V3用户名密码：admin/Kuboard123</p><p>按照网页提示导入集群即可<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Finstall%2Fkuboard.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023跨向‘厦’一年</title>
      <link href="/blog/posts/17245/"/>
      <url>/blog/posts/17245/</url>
      
        <content type="html"><![CDATA[<h2 id="攻略">攻略</h2><h3 id="航班">航班</h3><table><thead><tr><th>航程</th><th>航班</th><th>时间</th></tr></thead><tbody><tr><td>北京大兴机场 - 厦门高崎T3</td><td>厦航MF8106</td><td>2023.12.28 19:15 - 22:10</td></tr><tr><td>厦门高崎T4 - 上海虹桥T2</td><td>东航MU5666</td><td>2024.01.02 14:00 - 15:40</td></tr><tr><td>上海虹桥T2 - 北京大兴机场</td><td>东航MU8331</td><td>2024.01.02 18:15 - 20:30</td></tr></tbody></table><h3 id="行程">行程</h3><p>DAY1: 晚上十点多落地厦门高崎，就在机场旁边随便找了个机场酒店就近入住。当晚大小孩算上共29人。</p><p>DAY2: 包了一辆38座大巴，载着29人前往土楼（永定土楼）游玩，晚上到云水谣景区入住民宿（花筑奢1949亲子度假民俗），非常赞的民俗，除了不临河（但走路2分钟也就到了）其它完美。</p><p>DAY3: 上午在云水谣逛一逛，看看怀远楼（大鱼海棠取景地），中午回民俗吃饭，下午启程返回厦门，当晚入住厦门。当天所有人员汇合共40人。</p><p>DAY4: 上午从厦门邮轮中心厦鼓码头（需要提前网上买票）坐邮轮前往鼓浪屿三丘田码头，因为买错了时间，改成了下午去往鼓浪屿内厝澳码头。上午于是改变行程先去厦鼓码头旁边的狐尾山公园游玩（当地的网红空中步道），下午到达鼓浪屿后和大部队40人在最美转角拍摄大合照。傍晚继续逛鼓浪屿各处盖章。晚饭坐大轮渡到厦门轮渡中心（中山路）下船，前往饭店——临家闽南菜——准备跨年。</p><p>DAY5: 上午厦门植物园，下午厦门大学（需要提前三天预约），当天大部分队伍启程回京。</p><p>DAY6: 酒店附近的海滩挖沙子，下午返回北京。买的上海虹桥的中转机票，比直飞便宜很多。</p><h2 id="美图">美图</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fxiamen%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240114090007.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fxiamen%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240114090013.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fxiamen%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240114090018.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fxiamen%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240114090022.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fxiamen%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240114085945.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fxiamen%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240114090026.jpg" alt=""></p><h2 id="避坑-推荐指南">避坑&amp;推荐指南</h2><p>永定土楼景区共三个土楼，第一次去没见过土楼的看看挺有意思，但不要在土楼里买特产（茶叶什么的）。</p><p>云水谣沿河民宿很多，我们住的民宿是2020年翻修过的，一个90年的小伙是老板，非常赞的民俗，院里还有一块儿童游乐区。他们家厨师做饭超级好吃，我们三顿饭都直接在他家解决了。附上他家的链接：<br><a href="https://hotels.ctrip.com/hotels/69311729.html?cityid=21416#ctm_ref=www_hp_bs_lst">花筑奢·1949设计师亲子度假型智能民宿(南靖云水谣中心水车店大榕树后)</a></p><p>厦门的出租车千万别坐，不管是招手停还是滴滴打车都不要选出租车，满嘴胡说八道，我们约的早上九点半的鼓浪屿船票，八点半就告诉我们来不及了不要去了，实际上完全来得及<span class="github-emoji"><span>😠</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。还有打车稍微堵车的路，司机一路上絮絮叨叨满脸不高兴<span class="github-emoji"><span>😡</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。相比起来网约车司机就很nice了<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><p>买去鼓浪屿船票的时候注意看好出发码头、到达码头、返程码头，注意看准了航班的出发时间，别像我们一样9:30的票买成了7:10的票。</p><p>厦大很难约上，但也可以在门口找黄牛80一人，美团买植物园+厦门的联票也才75。</p><p>厦门是个旅游城市，厦门岛上的一些民俗周边配套比较成熟，但民俗开业时间太久已经很破旧了，建议去厦门住宿就别找民宿了，直接找连锁酒店、星级酒店比较好。</p><p><span class="github-emoji"><span>😂</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😂</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 跨年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有了面包机，自己也能做出香喷喷好吃的面包</title>
      <link href="/blog/posts/5734/"/>
      <url>/blog/posts/5734/</url>
      
        <content type="html"><![CDATA[<p>今天给大家安利一款好用的面包机——柏翠PE889。此型号的面包机可以做普通面包、全麦面包、土司、馒头、肉松、果酱、冰激淋，也能和面。</p><p>入手了面包机以后，迫不及待地开始自己动手做起来。</p><h2 id="和面">和面</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215831.jpg" alt=""></p><h2 id="黄油巧克力">黄油巧克力</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215827.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215822.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215818.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215815.jpg" alt=""></p><h2 id="芝士热狗">芝士热狗</h2><p>小崽子也上手啦~<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215811.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110215803.jpg" alt=""></p><h2 id="巧克力土司">巧克力土司</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110214516.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fdaily%2Fbread%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240110214455.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 居家 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S二次开发系列之五：深度解析scheduler原理</title>
      <link href="/blog/posts/59790/"/>
      <url>/blog/posts/59790/</url>
      
        <content type="html"><![CDATA[<h2 id="调度器概述">调度器概述</h2><p>k8s scheduler是一个控制面进程，它分配Pod到Nodes。根据限制和可用资源，scheduler确定哪些节点符合调度队列里的Pod。然后对这些符合的节点进行打分，然后把Pod绑定到合适的节点上。一个集群内可以存在多个scheduler，而kube-scheduler是一个参考实现。</p><p>所以 scheduler 主要要做的事就是根据 Nodes 当前状态和Pod对资源的需求，按照顺序运行一系列指定的算法来挑选出一个Node。</p><p>我们可以通过下图，对上述说的列算法有一个初步的认识。</p><p><img src="https://pic3.zhimg.com/80/v2-abe98884f737429020266ae3ddad705e_720w.webp" alt=""></p><p>图中每一个绿色箭头在k8s中叫扩展点（extension point），从图中可以看到一共有10个扩展点。</p><h2 id="扩展点分类说明">扩展点分类说明</h2><div class="markmap-container" style="height:600px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;扩展点分类&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;sort&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;扩展点只有一个sort，这个扩展点下面只能有一个插件可以运行&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;filter&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;preFilter&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;NodeResourcesFit&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;NodePorts&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;VolumeRestrictions&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;PodTopologySpread&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;InterPodAffinity&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;VolumeBinding&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;NodeAffinity&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;filter&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;NodeUnschedulable&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;NodeName&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;TaintToleration&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;NodeAffinity&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;NodePorts&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;NodeResourcesFit&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;VolumeRestrictions&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;NodeVolumeLimits&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;VolumeBinding&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;VolumeZone&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;PodTopologySpread&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;InterPodAffnity&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;postFilter&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;DefaultPreemption&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;score&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;为上面 filter 扩展点筛选出来的所有 Node 进行打分，挑选出一个得分最高（最合适的）&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;reserve&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;默认只实现了一个插件VolumeBinding，更新Pod声明的PVC和对应的PV缓存信息，表示该PV已经被Pod占用&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;permit&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;bind&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;preBind&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;bind&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[35,36]},&quot;v&quot;:&quot;postBind&quot;}]}]}"></svg></div><p>上面我们主要从扩展点和插件方面说明了scheduler的架构。下面我们从源码架构说说scheduler是怎么工作。</p><p>下图是 kube-scheduler 代码的主要框架：</p><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fcustom%2Fkube-scheduler%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt=""></p><p>我们来看看，当一个新 Pod创建出来后，这个流程是怎么走的：</p><ol><li>informer 监听到了有新建Pod，根据Pod的优先级把Pod加入到activeQ中适当位置（即执行sort插件）；</li><li>scheduler 从activeQ队头取一个Pod（如果队列没有Pod可取，则会一直阻塞；此时假设就是上述说的新建的Pod），开始调度；</li><li>执行filter类型扩展点（包括preFilter，filter,postFilter）插件，选出所有符合Pod的Node，如果无法找到符合的Node， 则把Pod加入unscheduleableQ中，此次调度结束；</li><li>执行score扩展点插件，找出最符合Pod的那个Node；</li><li>assume Pod。这一步就是乐观假设Pod已经调度成功，更新缓存中Node和PodStats信息，到了这里scheduling cycle就已经结束了，然后会开启新的一轮调度。至于真正的绑定，则会新起一个协程。</li><li>执行reserve插件；</li><li>启动协程绑定Pod到Node上。实际上就是修改Pod.spec.nodeName: 选定的node名字，然后调用kube-apiserver接口写入etcd。如果绑定失败了，那么移除缓存中此前加入的信息，然后把Pod放入activeQ中，后续重新调度。</li><li>执行postBinding，该步没有实现的插件没所以没有做任何事。</li></ol><p>以上就是 kube-scheduler 的基本原理。</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S二次开发系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023圣诞趴</title>
      <link href="/blog/posts/58996/"/>
      <url>/blog/posts/58996/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=835243892&amp;bvid=BV1dg4y1r7MT&amp;cid=1379574591&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%A5%87%E5%A6%99%E5%9C%A3%E8%AF%9E%E5%A4%9C-%E6%B8%B8%E6%88%8F_00.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224220357.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210121.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210206.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210214.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210219.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210229.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210236.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224210312.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224211502.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224211522.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Factivity%2F2023%2Fchristmas%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231224211536.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 活动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 圣诞节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S二次开发系列之四：自定义开发Controller</title>
      <link href="/blog/posts/65360882/"/>
      <url>/blog/posts/65360882/</url>
      
        <content type="html"><![CDATA[<p>Kubernetes中，Controller是一个非常重要的组件，它可以根据我们声明的资源期望状态和实际状态来进行调谐（Reconcile），以确保我们的应用程序始终处于所需的状态。本文将介绍Controller的工作原理，并介绍如何编写一个Controller。</p><h2 id="Controller工作原理">Controller工作原理</h2><p>在K8s中，用户通过声明式API定义资源的“预期状态”，Controller则负责监视资源的实际状态，当资源的实际状态和“预期状态”不一致时，Controller则对系统进行必要的更改，以确保两者一致，这个过程被称之为调谐（Reconcile）。</p><p>K8s中有多种类型的Controller，例如Deployment Controller、ReplicaSet Controller和StatefulSet Controller等。每个控制器都有不同的工作原理和适用场景，但它们的基本原理都是相同的。我们也可以根据需要编写Controller来实现自定义的业务逻辑。</p><h2 id="K8S-HTTP-API的List-Watch机制">K8S HTTP API的List/Watch机制</h2><p>Controller需要监视K8S中资源的状态，这是如何实现的呢？</p><p>K8S Apiserver提供了常规的资源List接口，如下所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">--location</span> <span class="token string">'https://192.168.126.100:6443/api/v1/namespaces/default/pods'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'Authorization: Bearer Token'</span><span class="token punctuation">{</span>    <span class="token string">"kind"</span><span class="token builtin class-name">:</span> <span class="token string">"PodList"</span>,    <span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span> <span class="token string">"v1"</span>,    <span class="token string">"metadata"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>        <span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span> <span class="token string">"18128858"</span>    <span class="token punctuation">}</span>,    <span class="token string">"items"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token string">"metadata"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>                <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"nginx-68544fd76d-jjlsj"</span>,                <span class="token string">"generateName"</span><span class="token builtin class-name">:</span> <span class="token string">"nginx-68544fd76d-"</span>,                <span class="token string">"namespace"</span><span class="token builtin class-name">:</span> <span class="token string">"default"</span>,                <span class="token string">"uid"</span><span class="token builtin class-name">:</span> <span class="token string">"6d209662-dc6b-48b6-8768-57e34a8ebe62"</span>,                <span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span> <span class="token string">"17940143"</span>,                <span class="token string">"creationTimestamp"</span><span class="token builtin class-name">:</span> <span class="token string">"2023-12-14T07:54:50Z"</span>,                <span class="token string">"labels"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>                    <span class="token string">"app"</span><span class="token builtin class-name">:</span> <span class="token string">"nginx"</span>,                    <span class="token string">"app_type"</span><span class="token builtin class-name">:</span> <span class="token string">"frontend"</span>,                    <span class="token string">"pod-template-hash"</span><span class="token builtin class-name">:</span> <span class="token string">"68544fd76d"</span>                <span class="token punctuation">}</span>,                <span class="token string">"annotations"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>                    <span class="token string">"cni.projectcalico.org/containerID"</span><span class="token builtin class-name">:</span> <span class="token string">"160ffb3e8948966b33945a10e50299edc933937fcacf111d14fbcdddd131d09b"</span>,                    <span class="token string">"cni.projectcalico.org/podIP"</span><span class="token builtin class-name">:</span> <span class="token string">"10.244.123.131/32"</span>,                    <span class="token string">"cni.projectcalico.org/podIPs"</span><span class="token builtin class-name">:</span> <span class="token string">"10.244.123.131/32"</span>                <span class="token punctuation">}</span>,                <span class="token string">"ownerReferences"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span> <span class="token string">"apps/v1"</span>,                        <span class="token string">"kind"</span><span class="token builtin class-name">:</span> <span class="token string">"ReplicaSet"</span>,                        <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"nginx-68544fd76d"</span>,                        <span class="token string">"uid"</span><span class="token builtin class-name">:</span> <span class="token string">"ac770bcb-6369-44ed-8111-a746e1ce3955"</span>,                        <span class="token string">"controller"</span><span class="token builtin class-name">:</span> true,                        <span class="token string">"blockOwnerDeletion"</span><span class="token builtin class-name">:</span> <span class="token boolean">true</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span>,                <span class="token string">"managedFields"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>……<span class="token punctuation">]</span>            <span class="token punctuation">}</span>,            <span class="token string">"spec"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>……<span class="token punctuation">}</span>,            <span class="token string">"status"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>……<span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的API获取了default命名空间下面的所有pods列表。在返回值的<code>metadata</code>字段里有一个参数<code>resourceVersion</code>，该字段的值是此次List操作得到的资源的版本号。我们在watch请求中可以带上该版本号作为参数，Apiserver会watch将该版本之后的资源变化并通知客户端。</p><p>现在在URL后面加上参数<code>?watch=true</code>，则Apiserver会对default命名空间下面的pod的状态进行持续监控，并在pod状态发生变化时通过chunked Response(HTTP 1.1)或者Server Push(HTTP2)通知到客户端。K8S称此机制为watch。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">--location</span> <span class="token string">'https://192.168.126.100:6443/api/v1/namespaces/default/pods?watch=true&amp;resourceVersion=18128858'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'Authorization: Bearer Token'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在另一个终端中创建一个名为nginx的pod，然后将其删除，可以看到下面的输出：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"ADDED"</span>,<span class="token string">"object"</span>:<span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"Pod"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-6fggw"</span>,<span class="token string">"generateName"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"4f6c6528-1fdd-4f9d-a66d-74a5ac7d4142"</span>,<span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span><span class="token string">"18130095"</span>,<span class="token string">"creationTimestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"labels"</span>:<span class="token punctuation">{</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"nginx"</span>,<span class="token string">"app_type"</span><span class="token builtin class-name">:</span><span class="token string">"frontend"</span>,<span class="token string">"pod-template-hash"</span><span class="token builtin class-name">:</span><span class="token string">"68544fd76d"</span><span class="token punctuation">}</span>,<span class="token string">"ownerReferences"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"apps/v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"ReplicaSet"</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"8f979c58-c687-43d1-badb-83a258a467ea"</span>,<span class="token string">"controller"</span>:true,<span class="token string">"blockOwnerDeletion"</span>:true<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"managedFields"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"kube-controller-manager"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:generateName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:labels"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app_type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:pod-template-hash"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:ownerReferences"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>uid<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>8f979c58-c687-43d1-badb-83a258a467ea<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:spec"</span>:<span class="token punctuation">{</span><span class="token string">"f:containers"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>name<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>nginx-container<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:image"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:imagePullPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:name"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:resources"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:limits"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:requests"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePath"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:dnsPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:enableServiceLinks"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:restartPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:schedulerName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccount"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccountName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationGracePeriodSeconds"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"spec"</span>:<span class="token punctuation">{</span><span class="token string">"volumes"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"projected"</span>:<span class="token punctuation">{</span><span class="token string">"sources"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"serviceAccountToken"</span>:<span class="token punctuation">{</span><span class="token string">"expirationSeconds"</span>:3607,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"token"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"configMap"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-root-ca.crt"</span>,<span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span>,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"downwardAPI"</span>:<span class="token punctuation">{</span><span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"namespace"</span>,<span class="token string">"fieldRef"</span>:<span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"fieldPath"</span><span class="token builtin class-name">:</span><span class="token string">"metadata.namespace"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"defaultMode"</span>:420<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"containers"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"resources"</span>:<span class="token punctuation">{</span><span class="token string">"limits"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"200m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"200Mi"</span><span class="token punctuation">}</span>,<span class="token string">"requests"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"100m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"100Mi"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"volumeMounts"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"readOnly"</span>:true,<span class="token string">"mountPath"</span><span class="token builtin class-name">:</span><span class="token string">"/var/run/secrets/kubernetes.io/serviceaccount"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"terminationMessagePath"</span><span class="token builtin class-name">:</span><span class="token string">"/dev/termination-log"</span>,<span class="token string">"terminationMessagePolicy"</span><span class="token builtin class-name">:</span><span class="token string">"File"</span>,<span class="token string">"imagePullPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"IfNotPresent"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"restartPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"Always"</span>,<span class="token string">"terminationGracePeriodSeconds"</span>:30,<span class="token string">"dnsPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"ClusterFirst"</span>,<span class="token string">"serviceAccountName"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"serviceAccount"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"affinity"</span>:<span class="token punctuation">{</span><span class="token string">"podAntiAffinity"</span>:<span class="token punctuation">{</span><span class="token string">"requiredDuringSchedulingIgnoredDuringExecution"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"labelSelector"</span>:<span class="token punctuation">{</span><span class="token string">"matchExpressions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"app_type"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"In"</span>,<span class="token string">"values"</span>:<span class="token punctuation">[</span><span class="token string">"frontend"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"topologyKey"</span><span class="token builtin class-name">:</span><span class="token string">"kubernetes.io/hostname"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"schedulerName"</span><span class="token builtin class-name">:</span><span class="token string">"default-scheduler"</span>,<span class="token string">"tolerations"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/not-ready"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/unreachable"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"priority"</span>:0,<span class="token string">"enableServiceLinks"</span>:true,<span class="token string">"preemptionPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"PreemptLowerPriority"</span><span class="token punctuation">}</span>,<span class="token string">"status"</span>:<span class="token punctuation">{</span><span class="token string">"phase"</span><span class="token builtin class-name">:</span><span class="token string">"Pending"</span>,<span class="token string">"qosClass"</span><span class="token builtin class-name">:</span><span class="token string">"Burstable"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"MODIFIED"</span>,<span class="token string">"object"</span>:<span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"Pod"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-6fggw"</span>,<span class="token string">"generateName"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"4f6c6528-1fdd-4f9d-a66d-74a5ac7d4142"</span>,<span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span><span class="token string">"18130100"</span>,<span class="token string">"creationTimestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"labels"</span>:<span class="token punctuation">{</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"nginx"</span>,<span class="token string">"app_type"</span><span class="token builtin class-name">:</span><span class="token string">"frontend"</span>,<span class="token string">"pod-template-hash"</span><span class="token builtin class-name">:</span><span class="token string">"68544fd76d"</span><span class="token punctuation">}</span>,<span class="token string">"ownerReferences"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"apps/v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"ReplicaSet"</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"8f979c58-c687-43d1-badb-83a258a467ea"</span>,<span class="token string">"controller"</span>:true,<span class="token string">"blockOwnerDeletion"</span>:true<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"managedFields"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"kube-controller-manager"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:generateName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:labels"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app_type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:pod-template-hash"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:ownerReferences"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>uid<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>8f979c58-c687-43d1-badb-83a258a467ea<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:spec"</span>:<span class="token punctuation">{</span><span class="token string">"f:containers"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>name<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>nginx-container<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:image"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:imagePullPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:name"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:resources"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:limits"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:requests"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePath"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:dnsPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:enableServiceLinks"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:restartPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:schedulerName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccount"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccountName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationGracePeriodSeconds"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"spec"</span>:<span class="token punctuation">{</span><span class="token string">"volumes"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"projected"</span>:<span class="token punctuation">{</span><span class="token string">"sources"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"serviceAccountToken"</span>:<span class="token punctuation">{</span><span class="token string">"expirationSeconds"</span>:3607,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"token"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"configMap"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-root-ca.crt"</span>,<span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span>,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"downwardAPI"</span>:<span class="token punctuation">{</span><span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"namespace"</span>,<span class="token string">"fieldRef"</span>:<span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"fieldPath"</span><span class="token builtin class-name">:</span><span class="token string">"metadata.namespace"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"defaultMode"</span>:420<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"containers"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"resources"</span>:<span class="token punctuation">{</span><span class="token string">"limits"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"200m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"200Mi"</span><span class="token punctuation">}</span>,<span class="token string">"requests"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"100m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"100Mi"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"volumeMounts"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"readOnly"</span>:true,<span class="token string">"mountPath"</span><span class="token builtin class-name">:</span><span class="token string">"/var/run/secrets/kubernetes.io/serviceaccount"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"terminationMessagePath"</span><span class="token builtin class-name">:</span><span class="token string">"/dev/termination-log"</span>,<span class="token string">"terminationMessagePolicy"</span><span class="token builtin class-name">:</span><span class="token string">"File"</span>,<span class="token string">"imagePullPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"IfNotPresent"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"restartPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"Always"</span>,<span class="token string">"terminationGracePeriodSeconds"</span>:30,<span class="token string">"dnsPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"ClusterFirst"</span>,<span class="token string">"serviceAccountName"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"serviceAccount"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"nodeName"</span><span class="token builtin class-name">:</span><span class="token string">"k8s-node2.lab.example.com"</span>,<span class="token string">"securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"affinity"</span>:<span class="token punctuation">{</span><span class="token string">"podAntiAffinity"</span>:<span class="token punctuation">{</span><span class="token string">"requiredDuringSchedulingIgnoredDuringExecution"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"labelSelector"</span>:<span class="token punctuation">{</span><span class="token string">"matchExpressions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"app_type"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"In"</span>,<span class="token string">"values"</span>:<span class="token punctuation">[</span><span class="token string">"frontend"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"topologyKey"</span><span class="token builtin class-name">:</span><span class="token string">"kubernetes.io/hostname"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"schedulerName"</span><span class="token builtin class-name">:</span><span class="token string">"default-scheduler"</span>,<span class="token string">"tolerations"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/not-ready"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/unreachable"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"priority"</span>:0,<span class="token string">"enableServiceLinks"</span>:true,<span class="token string">"preemptionPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"PreemptLowerPriority"</span><span class="token punctuation">}</span>,<span class="token string">"status"</span>:<span class="token punctuation">{</span><span class="token string">"phase"</span><span class="token builtin class-name">:</span><span class="token string">"Pending"</span>,<span class="token string">"conditions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"PodScheduled"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"qosClass"</span><span class="token builtin class-name">:</span><span class="token string">"Burstable"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"MODIFIED"</span>,<span class="token string">"object"</span>:<span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"Pod"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-6fggw"</span>,<span class="token string">"generateName"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"4f6c6528-1fdd-4f9d-a66d-74a5ac7d4142"</span>,<span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span><span class="token string">"18130102"</span>,<span class="token string">"creationTimestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"labels"</span>:<span class="token punctuation">{</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"nginx"</span>,<span class="token string">"app_type"</span><span class="token builtin class-name">:</span><span class="token string">"frontend"</span>,<span class="token string">"pod-template-hash"</span><span class="token builtin class-name">:</span><span class="token string">"68544fd76d"</span><span class="token punctuation">}</span>,<span class="token string">"ownerReferences"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"apps/v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"ReplicaSet"</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"8f979c58-c687-43d1-badb-83a258a467ea"</span>,<span class="token string">"controller"</span>:true,<span class="token string">"blockOwnerDeletion"</span>:true<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"managedFields"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"Go-http-client"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token string">"f:conditions"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>ContainersReady<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:message"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:reason"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>Initialized<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>Ready<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:message"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:reason"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:containerStatuses"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:hostIP"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:startTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"subresource"</span><span class="token builtin class-name">:</span><span class="token string">"status"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"kube-controller-manager"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:generateName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:labels"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app_type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:pod-template-hash"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:ownerReferences"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>uid<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>8f979c58-c687-43d1-badb-83a258a467ea<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:spec"</span>:<span class="token punctuation">{</span><span class="token string">"f:containers"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>name<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>nginx-container<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:image"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:imagePullPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:name"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:resources"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:limits"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:requests"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePath"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:dnsPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:enableServiceLinks"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:restartPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:schedulerName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccount"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccountName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationGracePeriodSeconds"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"spec"</span>:<span class="token punctuation">{</span><span class="token string">"volumes"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"projected"</span>:<span class="token punctuation">{</span><span class="token string">"sources"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"serviceAccountToken"</span>:<span class="token punctuation">{</span><span class="token string">"expirationSeconds"</span>:3607,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"token"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"configMap"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-root-ca.crt"</span>,<span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span>,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"downwardAPI"</span>:<span class="token punctuation">{</span><span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"namespace"</span>,<span class="token string">"fieldRef"</span>:<span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"fieldPath"</span><span class="token builtin class-name">:</span><span class="token string">"metadata.namespace"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"defaultMode"</span>:420<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"containers"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"resources"</span>:<span class="token punctuation">{</span><span class="token string">"limits"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"200m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"200Mi"</span><span class="token punctuation">}</span>,<span class="token string">"requests"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"100m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"100Mi"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"volumeMounts"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"readOnly"</span>:true,<span class="token string">"mountPath"</span><span class="token builtin class-name">:</span><span class="token string">"/var/run/secrets/kubernetes.io/serviceaccount"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"terminationMessagePath"</span><span class="token builtin class-name">:</span><span class="token string">"/dev/termination-log"</span>,<span class="token string">"terminationMessagePolicy"</span><span class="token builtin class-name">:</span><span class="token string">"File"</span>,<span class="token string">"imagePullPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"IfNotPresent"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"restartPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"Always"</span>,<span class="token string">"terminationGracePeriodSeconds"</span>:30,<span class="token string">"dnsPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"ClusterFirst"</span>,<span class="token string">"serviceAccountName"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"serviceAccount"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"nodeName"</span><span class="token builtin class-name">:</span><span class="token string">"k8s-node2.lab.example.com"</span>,<span class="token string">"securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"affinity"</span>:<span class="token punctuation">{</span><span class="token string">"podAntiAffinity"</span>:<span class="token punctuation">{</span><span class="token string">"requiredDuringSchedulingIgnoredDuringExecution"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"labelSelector"</span>:<span class="token punctuation">{</span><span class="token string">"matchExpressions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"app_type"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"In"</span>,<span class="token string">"values"</span>:<span class="token punctuation">[</span><span class="token string">"frontend"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"topologyKey"</span><span class="token builtin class-name">:</span><span class="token string">"kubernetes.io/hostname"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"schedulerName"</span><span class="token builtin class-name">:</span><span class="token string">"default-scheduler"</span>,<span class="token string">"tolerations"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/not-ready"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/unreachable"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"priority"</span>:0,<span class="token string">"enableServiceLinks"</span>:true,<span class="token string">"preemptionPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"PreemptLowerPriority"</span><span class="token punctuation">}</span>,<span class="token string">"status"</span>:<span class="token punctuation">{</span><span class="token string">"phase"</span><span class="token builtin class-name">:</span><span class="token string">"Pending"</span>,<span class="token string">"conditions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"Initialized"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"Ready"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"False"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersNotReady"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"containers with unready status: [nginx-container]"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersReady"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"False"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersNotReady"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"containers with unready status: [nginx-container]"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"PodScheduled"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"hostIP"</span><span class="token builtin class-name">:</span><span class="token string">"192.168.126.102"</span>,<span class="token string">"startTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"containerStatuses"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"state"</span>:<span class="token punctuation">{</span><span class="token string">"waiting"</span>:<span class="token punctuation">{</span><span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainerCreating"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"lastState"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"ready"</span>:false,<span class="token string">"restartCount"</span>:0,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"imageID"</span><span class="token builtin class-name">:</span><span class="token string">""</span>,<span class="token string">"started"</span>:false<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"qosClass"</span><span class="token builtin class-name">:</span><span class="token string">"Burstable"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"MODIFIED"</span>,<span class="token string">"object"</span>:<span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"Pod"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-6fggw"</span>,<span class="token string">"generateName"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"4f6c6528-1fdd-4f9d-a66d-74a5ac7d4142"</span>,<span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span><span class="token string">"18130114"</span>,<span class="token string">"creationTimestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"labels"</span>:<span class="token punctuation">{</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"nginx"</span>,<span class="token string">"app_type"</span><span class="token builtin class-name">:</span><span class="token string">"frontend"</span>,<span class="token string">"pod-template-hash"</span><span class="token builtin class-name">:</span><span class="token string">"68544fd76d"</span><span class="token punctuation">}</span>,<span class="token string">"annotations"</span>:<span class="token punctuation">{</span><span class="token string">"cni.projectcalico.org/containerID"</span><span class="token builtin class-name">:</span><span class="token string">"9e115a5d84568ea17e39a8c7cc7ca1fe8ec7e1be88882633a423f89cb175e338"</span>,<span class="token string">"cni.projectcalico.org/podIP"</span><span class="token builtin class-name">:</span><span class="token string">"10.244.123.176/32"</span>,<span class="token string">"cni.projectcalico.org/podIPs"</span><span class="token builtin class-name">:</span><span class="token string">"10.244.123.176/32"</span><span class="token punctuation">}</span>,<span class="token string">"ownerReferences"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"apps/v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"ReplicaSet"</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"8f979c58-c687-43d1-badb-83a258a467ea"</span>,<span class="token string">"controller"</span>:true,<span class="token string">"blockOwnerDeletion"</span>:true<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"managedFields"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"Go-http-client"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token string">"f:conditions"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>ContainersReady<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:message"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:reason"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>Initialized<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>Ready<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:message"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:reason"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:containerStatuses"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:hostIP"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:startTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"subresource"</span><span class="token builtin class-name">:</span><span class="token string">"status"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"kube-controller-manager"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:generateName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:labels"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app_type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:pod-template-hash"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:ownerReferences"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>uid<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>8f979c58-c687-43d1-badb-83a258a467ea<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:spec"</span>:<span class="token punctuation">{</span><span class="token string">"f:containers"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>name<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>nginx-container<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:image"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:imagePullPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:name"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:resources"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:limits"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:requests"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePath"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:dnsPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:enableServiceLinks"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:restartPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:schedulerName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccount"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccountName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationGracePeriodSeconds"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"calico"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:54Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:annotations"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cni.projectcalico.org/containerID"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cni.projectcalico.org/podIP"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cni.projectcalico.org/podIPs"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"subresource"</span><span class="token builtin class-name">:</span><span class="token string">"status"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"spec"</span>:<span class="token punctuation">{</span><span class="token string">"volumes"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"projected"</span>:<span class="token punctuation">{</span><span class="token string">"sources"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"serviceAccountToken"</span>:<span class="token punctuation">{</span><span class="token string">"expirationSeconds"</span>:3607,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"token"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"configMap"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-root-ca.crt"</span>,<span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span>,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"downwardAPI"</span>:<span class="token punctuation">{</span><span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"namespace"</span>,<span class="token string">"fieldRef"</span>:<span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"fieldPath"</span><span class="token builtin class-name">:</span><span class="token string">"metadata.namespace"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"defaultMode"</span>:420<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"containers"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"resources"</span>:<span class="token punctuation">{</span><span class="token string">"limits"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"200m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"200Mi"</span><span class="token punctuation">}</span>,<span class="token string">"requests"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"100m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"100Mi"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"volumeMounts"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"readOnly"</span>:true,<span class="token string">"mountPath"</span><span class="token builtin class-name">:</span><span class="token string">"/var/run/secrets/kubernetes.io/serviceaccount"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"terminationMessagePath"</span><span class="token builtin class-name">:</span><span class="token string">"/dev/termination-log"</span>,<span class="token string">"terminationMessagePolicy"</span><span class="token builtin class-name">:</span><span class="token string">"File"</span>,<span class="token string">"imagePullPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"IfNotPresent"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"restartPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"Always"</span>,<span class="token string">"terminationGracePeriodSeconds"</span>:30,<span class="token string">"dnsPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"ClusterFirst"</span>,<span class="token string">"serviceAccountName"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"serviceAccount"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"nodeName"</span><span class="token builtin class-name">:</span><span class="token string">"k8s-node2.lab.example.com"</span>,<span class="token string">"securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"affinity"</span>:<span class="token punctuation">{</span><span class="token string">"podAntiAffinity"</span>:<span class="token punctuation">{</span><span class="token string">"requiredDuringSchedulingIgnoredDuringExecution"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"labelSelector"</span>:<span class="token punctuation">{</span><span class="token string">"matchExpressions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"app_type"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"In"</span>,<span class="token string">"values"</span>:<span class="token punctuation">[</span><span class="token string">"frontend"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"topologyKey"</span><span class="token builtin class-name">:</span><span class="token string">"kubernetes.io/hostname"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"schedulerName"</span><span class="token builtin class-name">:</span><span class="token string">"default-scheduler"</span>,<span class="token string">"tolerations"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/not-ready"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/unreachable"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"priority"</span>:0,<span class="token string">"enableServiceLinks"</span>:true,<span class="token string">"preemptionPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"PreemptLowerPriority"</span><span class="token punctuation">}</span>,<span class="token string">"status"</span>:<span class="token punctuation">{</span><span class="token string">"phase"</span><span class="token builtin class-name">:</span><span class="token string">"Pending"</span>,<span class="token string">"conditions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"Initialized"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"Ready"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"False"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersNotReady"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"containers with unready status: [nginx-container]"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersReady"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"False"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersNotReady"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"containers with unready status: [nginx-container]"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"PodScheduled"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"hostIP"</span><span class="token builtin class-name">:</span><span class="token string">"192.168.126.102"</span>,<span class="token string">"startTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"containerStatuses"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"state"</span>:<span class="token punctuation">{</span><span class="token string">"waiting"</span>:<span class="token punctuation">{</span><span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainerCreating"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"lastState"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"ready"</span>:false,<span class="token string">"restartCount"</span>:0,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"imageID"</span><span class="token builtin class-name">:</span><span class="token string">""</span>,<span class="token string">"started"</span>:false<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"qosClass"</span><span class="token builtin class-name">:</span><span class="token string">"Burstable"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"DELETED"</span>,<span class="token string">"object"</span>:<span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"Pod"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-6fggw"</span>,<span class="token string">"generateName"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d-"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"4f6c6528-1fdd-4f9d-a66d-74a5ac7d4142"</span>,<span class="token string">"resourceVersion"</span><span class="token builtin class-name">:</span><span class="token string">"18130238"</span>,<span class="token string">"creationTimestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"deletionTimestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:36:41Z"</span>,<span class="token string">"deletionGracePeriodSeconds"</span>:0,<span class="token string">"labels"</span>:<span class="token punctuation">{</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"nginx"</span>,<span class="token string">"app_type"</span><span class="token builtin class-name">:</span><span class="token string">"frontend"</span>,<span class="token string">"pod-template-hash"</span><span class="token builtin class-name">:</span><span class="token string">"68544fd76d"</span><span class="token punctuation">}</span>,<span class="token string">"annotations"</span>:<span class="token punctuation">{</span><span class="token string">"cni.projectcalico.org/containerID"</span><span class="token builtin class-name">:</span><span class="token string">"9e115a5d84568ea17e39a8c7cc7ca1fe8ec7e1be88882633a423f89cb175e338"</span>,<span class="token string">"cni.projectcalico.org/podIP"</span><span class="token builtin class-name">:</span><span class="token string">""</span>,<span class="token string">"cni.projectcalico.org/podIPs"</span><span class="token builtin class-name">:</span><span class="token string">""</span><span class="token punctuation">}</span>,<span class="token string">"ownerReferences"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"apps/v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"ReplicaSet"</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-68544fd76d"</span>,<span class="token string">"uid"</span><span class="token builtin class-name">:</span><span class="token string">"8f979c58-c687-43d1-badb-83a258a467ea"</span>,<span class="token string">"controller"</span>:true,<span class="token string">"blockOwnerDeletion"</span>:true<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"managedFields"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"kube-controller-manager"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:generateName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:labels"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:app_type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:pod-template-hash"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:ownerReferences"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>uid<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>8f979c58-c687-43d1-badb-83a258a467ea<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:spec"</span>:<span class="token punctuation">{</span><span class="token string">"f:containers"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>name<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>nginx-container<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:image"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:imagePullPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:name"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:resources"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:limits"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:requests"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cpu"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:memory"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePath"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationMessagePolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:dnsPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:enableServiceLinks"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:restartPolicy"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:schedulerName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccount"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:serviceAccountName"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:terminationGracePeriodSeconds"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"calico"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:54Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:metadata"</span>:<span class="token punctuation">{</span><span class="token string">"f:annotations"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cni.projectcalico.org/containerID"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cni.projectcalico.org/podIP"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:cni.projectcalico.org/podIPs"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"subresource"</span><span class="token builtin class-name">:</span><span class="token string">"status"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"manager"</span><span class="token builtin class-name">:</span><span class="token string">"Go-http-client"</span>,<span class="token string">"operation"</span><span class="token builtin class-name">:</span><span class="token string">"Update"</span>,<span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:36:43Z"</span>,<span class="token string">"fieldsType"</span><span class="token builtin class-name">:</span><span class="token string">"FieldsV1"</span>,<span class="token string">"fieldsV1"</span>:<span class="token punctuation">{</span><span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token string">"f:conditions"</span>:<span class="token punctuation">{</span><span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>ContainersReady<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:message"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:reason"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>Initialized<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"k:{<span class="token entity" title="\&quot;">\"</span>type<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>Ready<span class="token entity" title="\&quot;">\"</span>}"</span>:<span class="token punctuation">{</span><span class="token string">"."</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastProbeTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:lastTransitionTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:message"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:reason"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:status"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:type"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"f:containerStatuses"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:hostIP"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:phase"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"f:startTime"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"subresource"</span><span class="token builtin class-name">:</span><span class="token string">"status"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"spec"</span>:<span class="token punctuation">{</span><span class="token string">"volumes"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"projected"</span>:<span class="token punctuation">{</span><span class="token string">"sources"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"serviceAccountToken"</span>:<span class="token punctuation">{</span><span class="token string">"expirationSeconds"</span>:3607,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"token"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"configMap"</span>:<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-root-ca.crt"</span>,<span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span>,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"ca.crt"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"downwardAPI"</span>:<span class="token punctuation">{</span><span class="token string">"items"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"namespace"</span>,<span class="token string">"fieldRef"</span>:<span class="token punctuation">{</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"fieldPath"</span><span class="token builtin class-name">:</span><span class="token string">"metadata.namespace"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"defaultMode"</span>:420<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"containers"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"resources"</span>:<span class="token punctuation">{</span><span class="token string">"limits"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"200m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"200Mi"</span><span class="token punctuation">}</span>,<span class="token string">"requests"</span>:<span class="token punctuation">{</span><span class="token string">"cpu"</span><span class="token builtin class-name">:</span><span class="token string">"100m"</span>,<span class="token string">"memory"</span><span class="token builtin class-name">:</span><span class="token string">"100Mi"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"volumeMounts"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"kube-api-access-7897x"</span>,<span class="token string">"readOnly"</span>:true,<span class="token string">"mountPath"</span><span class="token builtin class-name">:</span><span class="token string">"/var/run/secrets/kubernetes.io/serviceaccount"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"terminationMessagePath"</span><span class="token builtin class-name">:</span><span class="token string">"/dev/termination-log"</span>,<span class="token string">"terminationMessagePolicy"</span><span class="token builtin class-name">:</span><span class="token string">"File"</span>,<span class="token string">"imagePullPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"IfNotPresent"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"restartPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"Always"</span>,<span class="token string">"terminationGracePeriodSeconds"</span>:30,<span class="token string">"dnsPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"ClusterFirst"</span>,<span class="token string">"serviceAccountName"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"serviceAccount"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span>,<span class="token string">"nodeName"</span><span class="token builtin class-name">:</span><span class="token string">"k8s-node2.lab.example.com"</span>,<span class="token string">"securityContext"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"affinity"</span>:<span class="token punctuation">{</span><span class="token string">"podAntiAffinity"</span>:<span class="token punctuation">{</span><span class="token string">"requiredDuringSchedulingIgnoredDuringExecution"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"labelSelector"</span>:<span class="token punctuation">{</span><span class="token string">"matchExpressions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"app_type"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"In"</span>,<span class="token string">"values"</span>:<span class="token punctuation">[</span><span class="token string">"frontend"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"topologyKey"</span><span class="token builtin class-name">:</span><span class="token string">"kubernetes.io/hostname"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"schedulerName"</span><span class="token builtin class-name">:</span><span class="token string">"default-scheduler"</span>,<span class="token string">"tolerations"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/not-ready"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"key"</span><span class="token builtin class-name">:</span><span class="token string">"node.kubernetes.io/unreachable"</span>,<span class="token string">"operator"</span><span class="token builtin class-name">:</span><span class="token string">"Exists"</span>,<span class="token string">"effect"</span><span class="token builtin class-name">:</span><span class="token string">"NoExecute"</span>,<span class="token string">"tolerationSeconds"</span>:300<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"priority"</span>:0,<span class="token string">"enableServiceLinks"</span>:true,<span class="token string">"preemptionPolicy"</span><span class="token builtin class-name">:</span><span class="token string">"PreemptLowerPriority"</span><span class="token punctuation">}</span>,<span class="token string">"status"</span>:<span class="token punctuation">{</span><span class="token string">"phase"</span><span class="token builtin class-name">:</span><span class="token string">"Running"</span>,<span class="token string">"conditions"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"Initialized"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"Ready"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"False"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:36:43Z"</span>,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersNotReady"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"containers with unready status: [nginx-container]"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersReady"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"False"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:36:43Z"</span>,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"ContainersNotReady"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"containers with unready status: [nginx-container]"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"type"</span><span class="token builtin class-name">:</span><span class="token string">"PodScheduled"</span>,<span class="token string">"status"</span><span class="token builtin class-name">:</span><span class="token string">"True"</span>,<span class="token string">"lastProbeTime"</span>:null,<span class="token string">"lastTransitionTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"hostIP"</span><span class="token builtin class-name">:</span><span class="token string">"192.168.126.102"</span>,<span class="token string">"startTime"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:49Z"</span>,<span class="token string">"containerStatuses"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"nginx-container"</span>,<span class="token string">"state"</span>:<span class="token punctuation">{</span><span class="token string">"terminated"</span>:<span class="token punctuation">{</span><span class="token string">"exitCode"</span>:0,<span class="token string">"reason"</span><span class="token builtin class-name">:</span><span class="token string">"Completed"</span>,<span class="token string">"startedAt"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:35:55Z"</span>,<span class="token string">"finishedAt"</span><span class="token builtin class-name">:</span><span class="token string">"2023-12-15T07:36:41Z"</span>,<span class="token string">"containerID"</span><span class="token builtin class-name">:</span><span class="token string">"docker://08b4792466758680744919ec235c8c5934b92182c548e431c1e465df0c85428d"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">"lastState"</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">"ready"</span>:false,<span class="token string">"restartCount"</span>:0,<span class="token string">"image"</span><span class="token builtin class-name">:</span><span class="token string">"nginx:1.21.4"</span>,<span class="token string">"imageID"</span><span class="token builtin class-name">:</span><span class="token string">"docker-pullable://nginx@sha256:366e9f1ddebdb844044c2fafd13b75271a9f620819370f8971220c2b330a9254"</span>,<span class="token string">"containerID"</span><span class="token builtin class-name">:</span><span class="token string">"docker://08b4792466758680744919ec235c8c5934b92182c548e431c1e465df0c85428d"</span>,<span class="token string">"started"</span>:false<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"qosClass"</span><span class="token builtin class-name">:</span><span class="token string">"Burstable"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从上面HTTP Watch返回的Response中，可以看到有三种类型的事件：ADDED，MODIFIED和DELETED。ADDED表示创建了新的Pod，Pod的状态变化会产生MODIFIED类型的事件，DELETED则表示Pod被删除。</p><p>我们可以用client-go编写一个简易的Watch功能。</p><h2 id="实现一个简易的Watch">实现一个简易的Watch</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"os"</span><span class="token string">"time"</span><span class="token string">"github.com/zeromicro/go-zero/core/logx"</span>corev1 <span class="token string">"k8s.io/api/core/v1"</span>metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span>ktypes <span class="token string">"k8s.io/apimachinery/pkg/types"</span><span class="token string">"k8s.io/apimachinery/pkg/watch"</span><span class="token string">"k8s.io/client-go/kubernetes"</span><span class="token string">"k8s.io/client-go/rest"</span><span class="token string">"k8s.io/client-go/tools/clientcmd"</span><span class="token string">"k8s.io/client-go/util/flowcontrol"</span><span class="token punctuation">)</span><span class="token keyword">var</span> environment <span class="token operator">=</span> <span class="token string">"local"</span><span class="token keyword">var</span> kubeconfig <span class="token operator">=</span> <span class="token string">"./kubeconfig"</span><span class="token keyword">func</span> <span class="token function">createKubernetes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>kubernetes<span class="token punctuation">.</span>Clientset <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Using namespace=default"</span><span class="token punctuation">)</span><span class="token keyword">var</span> conf <span class="token operator">*</span>rest<span class="token punctuation">.</span>Config<span class="token keyword">var</span> err <span class="token builtin">error</span><span class="token keyword">if</span> environment <span class="token operator">==</span> <span class="token string">"local"</span> <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Using kubeconfig=%s"</span><span class="token punctuation">,</span> kubeconfig<span class="token punctuation">)</span>conf<span class="token punctuation">,</span> err <span class="token operator">=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> kubeconfig<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Using serviceaccount=default"</span><span class="token punctuation">)</span>conf<span class="token punctuation">,</span> err <span class="token operator">=</span> rest<span class="token punctuation">.</span><span class="token function">InClusterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>conf<span class="token punctuation">.</span>RateLimiter <span class="token operator">=</span> flowcontrol<span class="token punctuation">.</span><span class="token function">NewTokenBucketRateLimiter</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token comment">// setting a big ratelimiter for client-side throttling, default 5</span><span class="token punctuation">}</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span>clientset<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> clientset<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>clientset <span class="token operator">:=</span> <span class="token function">createKubernetes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// watch for changes to pods</span>watcher<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientset<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pods</span><span class="token punctuation">(</span><span class="token string">"default"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Watch</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">{</span>LabelSelector<span class="token punctuation">:</span> <span class="token string">"app=nginx"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// loop through events from the watcher</span><span class="token keyword">for</span> event <span class="token operator">:=</span> <span class="token keyword">range</span> watcher<span class="token punctuation">.</span><span class="token function">ResultChan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>pod <span class="token operator">:=</span> event<span class="token punctuation">.</span>Object<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Pod<span class="token punctuation">)</span><span class="token keyword">switch</span> event<span class="token punctuation">.</span>Type <span class="token punctuation">{</span><span class="token keyword">case</span> watch<span class="token punctuation">.</span>Added<span class="token punctuation">:</span>logx<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Pod %s added, current status is %s \n"</span><span class="token punctuation">,</span> pod<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> pod<span class="token punctuation">.</span>Status<span class="token punctuation">.</span>Phase<span class="token punctuation">)</span><span class="token comment">// todo: reconcile logic goes here</span><span class="token keyword">case</span> watch<span class="token punctuation">.</span>Modified<span class="token punctuation">:</span>logx<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Pod %s modified, current status is %s \n"</span><span class="token punctuation">,</span> pod<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> pod<span class="token punctuation">.</span>Status<span class="token punctuation">.</span>Phase<span class="token punctuation">)</span><span class="token comment">// todo: reconcile logic goes here</span><span class="token keyword">if</span> pod<span class="token punctuation">.</span>Status<span class="token punctuation">.</span>Phase <span class="token operator">==</span> <span class="token string">"Running"</span> <span class="token punctuation">{</span>data <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">`{"spec":{"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"%s"}}}}}`</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006-01-02T15:04:05Z"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> clientset<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Deployments</span><span class="token punctuation">(</span><span class="token string">"default"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Patch</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"tools"</span><span class="token punctuation">,</span> ktypes<span class="token punctuation">.</span>StrategicMergePatchType<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>PatchOptions<span class="token punctuation">{</span>FieldManager<span class="token punctuation">:</span> <span class="token string">"kubectl-rollout"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>logx<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Restart tools success"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">case</span> watch<span class="token punctuation">.</span>Deleted<span class="token punctuation">:</span>logx<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Pod %s deleted \n"</span><span class="token punctuation">,</span> pod<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token comment">// todo: reconcile logic goes here</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本例中监视的是app=nginx的Pod，主要的监听逻辑在<code>watcher.ResultChan()</code>。例子中实现了当Pod被修改后，并且处于<code>Running</code>状态时，重新启动<code>tools</code>这个deployment。</p><h2 id="K8S-Informer原理">K8S Informer原理</h2><p>采用K8S HTTP API可以查询K8S API资源对象并Watch其变化，但大量的HTTP调用会对Apiserver造成较大的负荷，而且网络调用可能存在较大的延迟。除此之外，开发者还需要在程序中处理资源的缓存，HTTP连接出问题后的重连等。为了解决这些问题并简化Controller的开发工作，K8S在client-go中提供了Informer客户端库。</p><p>在 Kubernetes中，Informer是一个客户端库，用于监视Kubernetes API服务器中的资源并将它们的当前状态缓存到本地。Informer提供了一种方法，让客户端应用程序可以高效地监视资源的更改，而无需不断地向 API 服务器发出请求。</p><p>相比直接采用HTTP Watch，使用 Kubernetes Informer有以下优势：</p><ul><li>减少API服务器的负载：通过在本地缓存资源信息，Informer减少了需要向API服务器发出的请求数量。这可以防止由于API服务器过载而影响整个集群的性能。</li><li>提高应用程序性能：使用缓存的数据，客户端应用程序可以快速访问资源信息，而无需等待API服务器响应。这可以提高应用程序性能并减少延迟。</li><li>简化代码：Informer提供了一种更简单、更流畅的方式来监视 Kubernetes 中的资源更改。客户端应用程序可以使用现有的Informer库来处理这些任务，而无需编写复杂的代码来管理与API服务器的连接并处理更新。</li><li>更高的可靠性：由于Informer在本地缓存数据，因此即使API服务器不可用或存在问题，它们也可以继续工作。这可以确保客户端应用程序即使在底层Kubernetes基础结构出现问题时也能保持功能。</li></ul><p>采用Informer库编写的Controller的架构如下图所示：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fcustom%2F6.png" alt=""></p><p>图中间的虚线将图分为上下两部分，其中上半部分是 Informer 库中的组件，下半部分则是使用 Informer 库编写的自定义 Controller 中的组件，这两部分一起组成了一个完整的 Controller。</p><p>采用 Informer 机制编写的 Controller 中的主要流程如下：</p><ol><li><p>Reflector采用K8s HTTP API List/Watch API Server中指定的资源。<br>Reflector会先List资源，然后使用 List 接口返回的resourceVersion来watch后续的资源变化。对应的源码<code>Reflector ListAndWatch</code>。</p></li><li><p>Reflector将List得到的资源列表和后续的资源变化放到一个FIFO（先进先出）队列中。对应的源码：</p><ul><li>使用 List 的结果刷新 FIFO 队列</li><li>将 Watch 收到的事件加入到 FIFO 队列</li></ul></li><li><p>Informer在一个循环中从FIFO队列中拿出资源对象进行处理。对应源码<code>processLoop</code>。</p></li><li><p>Informer将从FIFO队列中拿出的资源对象放到Indexer中。对应的源码<code>processDeltas</code>。<br>Indexer是Informer中的一个本地缓存，该缓存提供了索引功能（这是该组件取名为 Indexer 的原因），允许基于特定条件（如标签、注释或字段选择器）快速有效地查找资源。此处代码中的<code>clientState</code> 就是Indexer，来自于<code>NewIndexerInformer</code>方法中构建的Indexer，该Indexer作为<code>clientState</code>参数传递给了<code>newInformer</code>方法。</p></li><li><p>Indexer将收到的资源对象放入其内部的缓存<code>ThreadSafeStore</code>中。</p></li><li><p>回调Controller的<code>ResourceEventHandler</code>，将资源对象变化通知到应用逻辑。对应的源码<code>processDeltas</code>。</p></li><li><p>在<code>ResourceEventHandler</code>对资源对象的变化进行处理<br><code>ResourceEventHandler</code>处于用户的Controller代码中，K8S推荐的编程范式是将收到的消息放入到一个队列中，然后在一个循环中处理该队列中的消息，执行调谐逻辑。推荐该模式的原因是采用队列可以解耦消息生产者（Informer）和消费者（Controller调谐逻辑），避免消费者阻塞生产者。在用户代码中需要注意几点：</p><ul><li>前面我们已经讲到，Reflector会使用List的结果刷新FIFO队列，因此<code>ResourceEventHandler</code>收到的资源变化消息其实包含了Informer启动时获取的完整资源列表，Informer会采用ADDED事件将列表的资源通知到用户Controller。该机制屏蔽了List和Watch的细节，保证用户的<code>ResourceEventHandler</code>代码中会接收到Controller监控的资源的完整数据，包括启动Controller前已有的资源数据，以及之后的资源变化。</li><li><code>ResourceEventHandler</code>中收到的消息中只有资源对象的key，用户在Controller中可以使用该key为关键字，通过Indexer查询本地缓存中的完整资源对象。</li></ul></li></ol><h2 id="实现一个Informer">实现一个Informer</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token string">"fmt"</span><span class="token string">"os"</span><span class="token string">"resourceInformer/types"</span><span class="token punctuation">.</span> <span class="token string">"resourceInformer/utils"</span><span class="token string">"time"</span><span class="token string">"github.com/spf13/viper"</span>corev1 <span class="token string">"k8s.io/api/core/v1"</span>metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token string">"k8s.io/apimachinery/pkg/util/runtime"</span><span class="token string">"k8s.io/apimachinery/pkg/util/wait"</span><span class="token string">"k8s.io/client-go/kubernetes"</span><span class="token string">"k8s.io/client-go/rest"</span><span class="token string">"k8s.io/client-go/tools/cache"</span><span class="token string">"k8s.io/client-go/tools/clientcmd"</span><span class="token string">"k8s.io/client-go/util/flowcontrol"</span><span class="token string">"k8s.io/client-go/util/workqueue"</span><span class="token punctuation">)</span><span class="token keyword">var</span> conf <span class="token operator">=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"./conf/app.yaml"</span><span class="token punctuation">,</span> <span class="token string">"config file"</span><span class="token punctuation">)</span><span class="token comment">// Controller demonstrates how to implement a controller with client-go</span><span class="token keyword">type</span> Controller <span class="token keyword">struct</span> <span class="token punctuation">{</span>indexer  cache<span class="token punctuation">.</span>Indexerqueue    workqueue<span class="token punctuation">.</span>RateLimitingInterfaceinformer cache<span class="token punctuation">.</span>ControllernewObj   <span class="token builtin">string</span><span class="token punctuation">}</span><span class="token comment">// NewController creates a new Controller</span><span class="token keyword">func</span> <span class="token function">NewController</span><span class="token punctuation">(</span>queue workqueue<span class="token punctuation">.</span>RateLimitingInterface<span class="token punctuation">,</span> indexer cache<span class="token punctuation">.</span>Indexer<span class="token punctuation">,</span> informer cache<span class="token punctuation">.</span>Controller<span class="token punctuation">)</span> <span class="token operator">*</span>Controller <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>Controller<span class="token punctuation">{</span>informer<span class="token punctuation">:</span> informer<span class="token punctuation">,</span>indexer<span class="token punctuation">:</span>  indexer<span class="token punctuation">,</span>queue<span class="token punctuation">:</span>    queue<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Controller<span class="token punctuation">)</span> <span class="token function">processNextItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span><span class="token comment">// Wait until there is a new item in the working queue</span>queuekey<span class="token punctuation">,</span> quit <span class="token operator">:=</span> c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> quit <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token comment">// Tell the queue that we are done with processing this key</span><span class="token keyword">defer</span> c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span>queuekey<span class="token punctuation">)</span><span class="token comment">// Invoke the method containing the business logic</span>err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">syncToStdout</span><span class="token punctuation">(</span>queuekey<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>types<span class="token punctuation">.</span>QueueKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// Handle the error if something went wrong during the execution of the business logic</span>c<span class="token punctuation">.</span><span class="token function">handleErr</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> queuekey<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token comment">// syncToStdout is the business logic of the controller. In this controller it simply prints</span><span class="token comment">// information about the pod to stdout. In case an error happened, it has to simply return the error.</span><span class="token comment">// The retry logic should not be part of the business logic</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Controller<span class="token punctuation">)</span> <span class="token function">syncToStdout</span><span class="token punctuation">(</span>queuekey <span class="token operator">*</span>types<span class="token punctuation">.</span>QueueKey<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>obj<span class="token punctuation">,</span> exists<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span>indexer<span class="token punctuation">.</span><span class="token function">GetByKey</span><span class="token punctuation">(</span>queuekey<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Fetching object[%s] from store failed: %v"</span><span class="token punctuation">,</span> queuekey<span class="token punctuation">.</span>Key<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token operator">!</span>exists <span class="token punctuation">{</span><span class="token comment">// Below we will warm up our cache with a Pod, so that we will see a delete for one pod</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Object[%s] does not exists, maybe it has been deleted"</span><span class="token punctuation">,</span> queuekey<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>phase <span class="token operator">:=</span> obj<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Pod<span class="token punctuation">)</span><span class="token punctuation">.</span>Status<span class="token punctuation">.</span>Phase<span class="token keyword">if</span> queuekey<span class="token punctuation">.</span>Type <span class="token operator">==</span> types<span class="token punctuation">.</span>EVENT_ADDED <span class="token operator">&amp;&amp;</span> phase <span class="token operator">==</span> corev1<span class="token punctuation">.</span>PodPending <span class="token punctuation">{</span>c<span class="token punctuation">.</span>newObj <span class="token operator">=</span> queuekey<span class="token punctuation">.</span>Key<span class="token punctuation">}</span><span class="token comment">// Note that you also have to check the uid if you have a local controlled resource, which</span><span class="token comment">// is dependent on the actual instance, to detect that a Pod was recreated with the same name</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Pod[%s] is %s, status = %s"</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Pod<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> queuekey<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> phase<span class="token punctuation">)</span><span class="token keyword">if</span> queuekey<span class="token punctuation">.</span>Type <span class="token operator">==</span> types<span class="token punctuation">.</span>EVENT_MODIFIED <span class="token operator">&amp;&amp;</span> phase <span class="token operator">==</span> corev1<span class="token punctuation">.</span>PodRunning <span class="token operator">&amp;&amp;</span> queuekey<span class="token punctuation">.</span>Key <span class="token operator">==</span> c<span class="token punctuation">.</span>newObj <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"A new pod is created, need to restart tools"</span><span class="token punctuation">)</span><span class="token comment">// 重启tools deployment写在这里</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Controller<span class="token punctuation">)</span> <span class="token function">handleErr</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">,</span> key <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token comment">// Forget about the #AddRateLimited history of the key on every successful synchronization.</span><span class="token comment">// This ensures that future processing of updates for this key is not delayed because of</span><span class="token comment">// an outdated error history.</span>c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">Forget</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token comment">// This controller retries 5 times if something goes wrong. After that, it stops trying</span><span class="token keyword">if</span> c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">NumRequeues</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Error synching pod[%v]: %v"</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token comment">// Re-enqueue the key rate limited. Based on the rate limiter on the</span><span class="token comment">// queue and the re-enqueue history, the key will be processed later again</span>c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">AddRateLimited</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span>c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">Forget</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token comment">// Report to an external entity that, even after several retries, we could not successfully process this key</span>runtime<span class="token punctuation">.</span><span class="token function">HandleError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Dropping pod[%q] out of the queue: %v"</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Controller<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span>workers <span class="token builtin">int</span><span class="token punctuation">,</span> stopch <span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> runtime<span class="token punctuation">.</span><span class="token function">HandleCrash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Let the workers stop when we are done</span><span class="token keyword">defer</span> c<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">ShutDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Starting Pod controller"</span><span class="token punctuation">)</span><span class="token keyword">go</span> c<span class="token punctuation">.</span>informer<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>stopch<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">!</span>cache<span class="token punctuation">.</span><span class="token function">WaitForCacheSync</span><span class="token punctuation">(</span>stopch<span class="token punctuation">,</span> c<span class="token punctuation">.</span>informer<span class="token punctuation">.</span>HasSynced<span class="token punctuation">)</span> <span class="token punctuation">{</span>runtime<span class="token punctuation">.</span><span class="token function">HandleError</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Timed out waiting for caches to sync"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> workers<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span><span class="token keyword">go</span> wait<span class="token punctuation">.</span><span class="token function">Until</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>runWorker<span class="token punctuation">,</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> stopch<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;-</span>stopchLog<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Stopping Pod controller"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Controller<span class="token punctuation">)</span> <span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> c<span class="token punctuation">.</span><span class="token function">processNextItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> environment <span class="token operator">=</span> <span class="token string">"local"</span><span class="token keyword">var</span> kubeconfig <span class="token operator">=</span> <span class="token string">"./kubeconfig"</span><span class="token keyword">func</span> <span class="token function">createKubernetes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>kubernetes<span class="token punctuation">.</span>Clientset <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Using namespace=default"</span><span class="token punctuation">)</span><span class="token keyword">var</span> conf <span class="token operator">*</span>rest<span class="token punctuation">.</span>Config<span class="token keyword">var</span> err <span class="token builtin">error</span><span class="token keyword">if</span> environment <span class="token operator">==</span> <span class="token string">"local"</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Using kubeconfig=%s"</span><span class="token punctuation">,</span> kubeconfig<span class="token punctuation">)</span>conf<span class="token punctuation">,</span> err <span class="token operator">=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> kubeconfig<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Using serviceaccount=default"</span><span class="token punctuation">)</span>conf<span class="token punctuation">,</span> err <span class="token operator">=</span> rest<span class="token punctuation">.</span><span class="token function">InClusterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>conf<span class="token punctuation">.</span>RateLimiter <span class="token operator">=</span> flowcontrol<span class="token punctuation">.</span><span class="token function">NewTokenBucketRateLimiter</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token comment">// setting a big ratelimiter for client-side throttling, default 5</span><span class="token punctuation">}</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span>clientset<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> clientset<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>clientset <span class="token operator">:=</span> <span class="token function">createKubernetes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// create the pod watcher</span>optionsModifier <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>options <span class="token operator">*</span>metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>options<span class="token punctuation">.</span>LabelSelector <span class="token operator">=</span> <span class="token string">"app=nginx"</span><span class="token punctuation">}</span>podListWatcher <span class="token operator">:=</span> cache<span class="token punctuation">.</span><span class="token function">NewFilteredListWatchFromClient</span><span class="token punctuation">(</span>clientset<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RESTClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"pods"</span><span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">,</span> optionsModifier<span class="token punctuation">)</span><span class="token comment">// create the workqueue</span>queue <span class="token operator">:=</span> workqueue<span class="token punctuation">.</span><span class="token function">NewRateLimitingQueue</span><span class="token punctuation">(</span>workqueue<span class="token punctuation">.</span><span class="token function">DefaultControllerRateLimiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// Bind the workqueue to a cache with the help of an informer. This way we make sure that</span><span class="token comment">// whenever the cache is updated, the pod key is added to the workqueue.</span><span class="token comment">// Note that when we finally process the item from the workqueue, we might see a newer version</span><span class="token comment">// of the Pod than the version which was responsible for triggering the update.</span>indexer<span class="token punctuation">,</span> informer <span class="token operator">:=</span> cache<span class="token punctuation">.</span><span class="token function">NewIndexerInformer</span><span class="token punctuation">(</span>podListWatcher<span class="token punctuation">,</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Pod<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cache<span class="token punctuation">.</span>ResourceEventHandlerFuncs<span class="token punctuation">{</span>AddFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>obj <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>key<span class="token punctuation">,</span> err <span class="token operator">:=</span> cache<span class="token punctuation">.</span><span class="token function">MetaNamespaceKeyFunc</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>queue<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>types<span class="token punctuation">.</span>QueueKey<span class="token punctuation">{</span>Type<span class="token punctuation">:</span> types<span class="token punctuation">.</span>EVENT_ADDED<span class="token punctuation">,</span>Key<span class="token punctuation">:</span>  key<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>UpdateFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>old <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">new</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>key<span class="token punctuation">,</span> err <span class="token operator">:=</span> cache<span class="token punctuation">.</span><span class="token function">MetaNamespaceKeyFunc</span><span class="token punctuation">(</span><span class="token builtin">new</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>queue<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>types<span class="token punctuation">.</span>QueueKey<span class="token punctuation">{</span>Type<span class="token punctuation">:</span> types<span class="token punctuation">.</span>EVENT_MODIFIED<span class="token punctuation">,</span>Key<span class="token punctuation">:</span>  key<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>DeleteFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>obj <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// IndexerInformer uses a delta queue, therefore for deletes we have to use this</span><span class="token comment">// key function.</span>key<span class="token punctuation">,</span> err <span class="token operator">:=</span> cache<span class="token punctuation">.</span><span class="token function">DeletionHandlingMetaNamespaceKeyFunc</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>queue<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>types<span class="token punctuation">.</span>QueueKey<span class="token punctuation">{</span>Type<span class="token punctuation">:</span> types<span class="token punctuation">.</span>EVENT_DELETED<span class="token punctuation">,</span>Key<span class="token punctuation">:</span>  key<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>Log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Pod[%s] is DELETED"</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span> cache<span class="token punctuation">.</span>Indexers<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>controller <span class="token operator">:=</span> <span class="token function">NewController</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> indexer<span class="token punctuation">,</span> informer<span class="token punctuation">)</span><span class="token comment">// Now let's start the controller</span>stop <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">defer</span> <span class="token function">close</span><span class="token punctuation">(</span>stop<span class="token punctuation">)</span><span class="token keyword">go</span> controller<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> stop<span class="token punctuation">)</span><span class="token comment">// Wait forever</span><span class="token keyword">select</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">*</span>conf <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">"No config file specified"</span><span class="token punctuation">)</span><span class="token punctuation">}</span>viper<span class="token punctuation">.</span><span class="token function">SetConfigFile</span><span class="token punctuation">(</span><span class="token operator">*</span>conf<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>Log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">"Reading config file failed: %v\n"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span>viper<span class="token punctuation">.</span><span class="token function">WatchConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">InitLogger</span><span class="token punctuation">(</span>viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"Log.Level"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">"Kubeconfig"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>kubeconfig <span class="token operator">=</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">"Kubeconfig"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译运行此程序，指定好kubeconfig文件，使其连接到一个K8S上：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@k8s-master:~$ ./informer <span class="token parameter variable">-c</span> app.yaml<span class="token number">2023</span>/12/22 <span class="token number">11</span>:42:24.446 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Using <span class="token assign-left variable">namespace</span><span class="token operator">=</span>default<span class="token number">2023</span>/12/22 <span class="token number">11</span>:42:24.446 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Using <span class="token assign-left variable">kubeconfig</span><span class="token operator">=</span>/home/student/.kube/config<span class="token number">2023</span>/12/22 <span class="token number">11</span>:42:24.449 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Starting Pod controller<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>本程序监听了default命名空间下，label为app=nginx的POD的状态，其状态判断条件为：<br><code>if queuekey.Type == types.EVENT_MODIFIED &amp;&amp; phase == corev1.PodRunning &amp;&amp; queuekey.Key == c.newObj</code><br>即一个POD事件是<code>MODIFIED</code>，且其状态为<code>PodRunning</code>，且POD名是一个新的名称（即这个POD是一个新建的POD，对应的场景是其所属的deployment被重启了）。</p><p>现在向default空间提交一个nginx的deployment，查看informer监听的事件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2023</span>/12/22 <span class="token number">11</span>:45:13.456 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Pod<span class="token punctuation">[</span>nginx-5776d4fd9d-pplcs<span class="token punctuation">]</span> is ADDED, status <span class="token operator">=</span> Pending<span class="token number">2023</span>/12/22 <span class="token number">11</span>:45:13.474 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Pod<span class="token punctuation">[</span>nginx-5776d4fd9d-pplcs<span class="token punctuation">]</span> is MODIFIED, status <span class="token operator">=</span> Pending<span class="token number">2023</span>/12/22 <span class="token number">11</span>:45:13.518 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Pod<span class="token punctuation">[</span>nginx-5776d4fd9d-pplcs<span class="token punctuation">]</span> is MODIFIED, status <span class="token operator">=</span> Pending<span class="token number">2023</span>/12/22 <span class="token number">11</span>:45:14.638 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Pod<span class="token punctuation">[</span>nginx-5776d4fd9d-pplcs<span class="token punctuation">]</span> is MODIFIED, status <span class="token operator">=</span> Pending<span class="token number">2023</span>/12/22 <span class="token number">11</span>:45:15.538 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Pod<span class="token punctuation">[</span>nginx-5776d4fd9d-pplcs<span class="token punctuation">]</span> is MODIFIED, status <span class="token operator">=</span> Running<span class="token number">2023</span>/12/22 <span class="token number">11</span>:45:15.541 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> A new pod is created, need to restart tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note success no-icon"><p>本文涉及到的两份完整代码参见：<a href="https://gitee.com/hongyuxuan2138/resource-informer">https://gitee.com/hongyuxuan2138/resource-informer</a></p></div><h2 id="后记">后记</h2><p>通过自定义一个Informer相当于自己实现了一个资源的Controller，通常可用于以下场景：需要监听一些事件，并根据这些事件做一些其它资源的变更。这种场景如果不使用Informer，还可以通过定时刷新K8S资源状态来实现，但显然从逼格上来看就不如Informer。</p><h3 id="Informer在我司的应用场景">Informer在我司的应用场景</h3><p>我们在公司的K8S集群内部署了一套RedisCluster，因为他是容器内部署，客户端要连接它的话也必须部署在相同的容器集群内。如果客户端在容器集群外，就无法连上。原因是Cluster方式的Redis节点间通信使用的是私有地址（即POD IP），当我set一个key到Redis时，它会根据一定的规则决定将key分配给固定的slot，这个slot可能不在我当前连接的Redis副本上，而在另一个副本上（POD）。当前连接会把slot所在副本的IP（即POD IP）返回给客户端，这个IP是POD私有地址，容器外的客户端根本无法连接。解决这个问题的办法是我们又装了一个RedisCluster代理<code>predixy</code>，但这个代理有个bug，当它连接的RedisCluster有一个副本挂了，它不会自动清除这个已经失效的连接。此时如果客户端的访问正好落到这个失效的副本，就会报错连不上，必须重启<code>predix</code>才能重新和RedisCluster的当副本建立新连接。</p><p>问题来了，我怎么知道RedisCluster有一个POD重启了呢？Informer正是干这个事情的。我们自定义开发了一个Informer监视RedisCluster的POD重启事件，一旦发生后就去重启<code>predixy</code>，算是临时解决了这个bug。</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S二次开发系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S二次开发系列之三：自定义开发Admission Webhook</title>
      <link href="/blog/posts/1902483454/"/>
      <url>/blog/posts/1902483454/</url>
      
        <content type="html"><![CDATA[<p>Kubernetes默认提供了一些内置的准入控制器（Admission Webhook），它们负责管理集群中资源对象的创建、更新和删除。准入控制器可以调用Webhook服务，在创建Pod时更改配置（例如注入标签），或者在准入过程中验证Pod的配置，并给出<code>放行</code>或<code>拒绝</code>的响应。这种机制允许我们根据自定义逻辑在资源创建或更新的时候动态地修改其行为，从而为Kubernetes集群提供更灵活、更个性化的管理。</p><p>准入控制器的工作流程如下图所示：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fcustom%2F3.png" alt=""></p><p>从上图中可知，Admission Webhooks有两种类型:</p><ul><li>Mutating Admission Webhooks：变更型准入控制器，用于在资源存储到etcd之前通过Mutating Webhooks对资源进行修改。例如注入一个sidecar、挂载一个volumeMounts等。</li><li>Validating Admission Webhooks：验证型准入控制器，用于在资源存储到etcd之前通过Validating Webhooks对资源进行自定义策略验证。并返回<code>放行</code>或<code>拒绝</code>。</li></ul><p>本文将讲解这两种准入控制器的实现方式。</p><h2 id="Webhook工作方式">Webhook工作方式</h2><p>Admission Webhook和其它我们所熟知的webhook一样，说白了就是一个HTTP回调接口，Apiserver在收到一个资源的增删改查请求以后，会先去调用一下webhook，并附带上一个<code>AdmissionReview</code>类型的请求参数，然后我们自己实现这个webhook逻辑，再返回一个<code>AdmissionResponse</code>类型的返回值给Apiserver，Apiserver据此返回值来决定该资源是否要进行以及如何进行下一步操作。</p><p>既然是一个HTTP回调接口，我们就可以用任意语言（但仍然首选client-go框架）、任意Web框架来实现。</p><p>另外，Apiserver规定了webhook接口必须是https的，Apiserver会以https的方式发送给webhook，因此http不能被接受。</p><p>根据上述要求，我们最终选择go-gin框架来实现一个https接口。</p><h2 id="生成自签CA证书和服务端证书">生成自签CA证书和服务端证书</h2><p>有两种方式可以方便的生成自签CA证书和服务端证书：cfssl工具和openssl工具。</p><h3 id="cfssl">cfssl</h3><p><a href="https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssl_1.6.1_linux_amd64">点我下载cfssl</a><br><a href="https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssljson_1.6.1_linux_amd64">点我下载cfssljson</a></p><ol><li>创建CA证书机构配置文件ca-config.json</li></ol><pre class="line-numbers language-json" data-language="json"><div class="caption"><span>ca-config.json</span></div><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"signing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"default"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"expiry"</span><span class="token operator">:</span> <span class="token string">"876000h"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"profiles"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"server"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"usages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"signing"</span><span class="token punctuation">,</span> <span class="token string">"key encipherment"</span><span class="token punctuation">,</span> <span class="token string">"server auth"</span><span class="token punctuation">,</span> <span class="token string">"client auth"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"expiry"</span><span class="token operator">:</span> <span class="token string">"876000h"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>创建CA证书请求配置文件ca-csr.json</li></ol><pre class="line-numbers language-json" data-language="json"><div class="caption"><span>ca-csr.json</span></div><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"CA"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"expiry"</span><span class="token operator">:</span><span class="token string">"876000h"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"kubernetes"</span><span class="token punctuation">,</span>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>        <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>            <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"BJ"</span><span class="token punctuation">,</span>            <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"BJ"</span><span class="token punctuation">,</span>            <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"k8s"</span><span class="token punctuation">,</span>            <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"System"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>生成CA证书和私钥</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><span class="token number">2023</span>/12/13 <span class="token number">15</span>:18:40 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> generating a new CA key and certificate from CSR<span class="token number">2023</span>/12/13 <span class="token number">15</span>:18:40 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> generate received request<span class="token number">2023</span>/12/13 <span class="token number">15</span>:18:40 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> received CSR<span class="token number">2023</span>/12/13 <span class="token number">15</span>:18:40 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> generating key: rsa-2048<span class="token number">2023</span>/12/13 <span class="token number">15</span>:18:40 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> encoded CSR<span class="token number">2023</span>/12/13 <span class="token number">15</span>:18:40 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> signed certificate with serial number <span class="token number">237767326485485052000983960416676961846303085620</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行完后生成<code>ca.pem</code>和<code>ca-key.pem</code></p><ol start="4"><li>创建服务端证书请求配置文件tls-csr.json</li></ol><pre class="line-numbers language-json" data-language="json"><div class="caption"><span>tls-csr.json</span></div><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"admission"</span><span class="token punctuation">,</span>  <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>    <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>        <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"BJ"</span><span class="token punctuation">,</span>        <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"BJ"</span><span class="token punctuation">,</span>        <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"k8s"</span><span class="token punctuation">,</span>        <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"System"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"podaffinity-webhook-server"</span><span class="token punctuation">,</span>    <span class="token string">"podaffinity-webhook-server.kube-system"</span><span class="token punctuation">,</span>    <span class="token string">"podaffinity-webhook-server.kube-system.svc"</span><span class="token punctuation">,</span>    <span class="token string">"192.168.126.100"</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最重要的就是hosts字段，webhook要部署到哪个域名/IP下，就得把对应的域名/IP写进csr。</p><ol start="5"><li>用前一步生成的CA证书签发服务端证书和私钥</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## cfssl gencert -ca ca.pem -ca-key ca-key.pem -config ca-config.json -profile server tls-csr.json | cfssljson -bare tls</span><span class="token number">2023</span>/12/13 <span class="token number">15</span>:24:01 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> generate received request<span class="token number">2023</span>/12/13 <span class="token number">15</span>:24:01 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> received CSR<span class="token number">2023</span>/12/13 <span class="token number">15</span>:24:01 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> generating key: rsa-2048<span class="token number">2023</span>/12/13 <span class="token number">15</span>:24:02 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> encoded CSR<span class="token number">2023</span>/12/13 <span class="token number">15</span>:24:02 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> signed certificate with serial number <span class="token number">724880176019206124126086747821903513868891190856</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行完以后生成<code>tls.pem</code>和<code>tls-key.pem</code>，这两个就是我们需要的服务端证书和私钥文件。</p><p>如果webhook是单独部署，只要启动的时候能找到这两个文件就行。如果webhook以deployment形式部署到K8S，可以再用secret对象来存放这两个文件，然后再挂载进deployment：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create secret tls admission-certs <span class="token parameter variable">--key</span><span class="token operator">=</span>tls-key.pem <span class="token parameter variable">--cert</span><span class="token operator">=</span>tls.pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="openssl">openssl</h3><ol><li>生成CA私钥</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> ca.key <span class="token number">4096</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>准备CA证书配置文件ca.conf</li></ol><pre class="line-numbers language-conf" data-language="conf"><div class="caption"><span>ca.conf</span></div><code class="language-conf">[ req ]default_bits       = 4096distinguished_name = req_distinguished_name[ req_distinguished_name ]countryName                 = Country Name (2 letter code)countryName_default         = CNstateOrProvinceName         = State or Province Name (full name)stateOrProvinceName_default = BJlocalityName                = Locality Name (eg, city)localityName_default        = BJorganizationName            = Organization Name (eg, company)organizationName_default    = KubernetescommonName                  = Common Name (e.g. server FQDN or YOUR name)commonName_max              = 64commonName_default          = podaffinity-webhook-server.kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>生成CA证书请求文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> ca.csr <span class="token parameter variable">-key</span> ca.key <span class="token parameter variable">-config</span> ca.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>生成CA证书</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-in</span> ca.csr <span class="token parameter variable">-signkey</span> ca.key <span class="token parameter variable">-out</span> ca.crt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>生成服务端私钥</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> tls.key <span class="token number">2048</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li>准备服务端证书配置文件tls.conf</li></ol><pre class="line-numbers language-conf" data-language="conf"><div class="caption"><span>tls.conf</span></div><code class="language-conf">[ req ]default_bits       = 2048distinguished_name = req_distinguished_namereq_extensions     = req_ext[ req_distinguished_name ]countryName                 = Country Name (2 letter code)countryName_default         = CNstateOrProvinceName         = State or Province Name (full name)stateOrProvinceName_default = BJlocalityName                = Locality Name (eg, city)localityName_default        = BJorganizationName            = Organization Name (eg, company)organizationName_default    = LZBBYcommonName                  = Common Name (e.g. server FQDN or YOUR name)commonName_max              = 64commonName_default          = podaffinity-webhook-server.kube-system[ req_ext ]subjectAltName = @alt_names[alt_names]DNS.1   = podaffinity-webhook-serverDNS.2   = podaffinity-webhook-server.kube-systemDNS.3   = podaffinity-webhook-server.kube-system.svc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>alt_names和上面cfssl的hosts是一样的，webhook要部署到哪个域名/IP下，就得把对应的域名/IP写进去</p><ol start="7"><li>生成服务端证书请求文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> tls.csr <span class="token parameter variable">-key</span> tls.key <span class="token parameter variable">-config</span> tls.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="8"><li>用前一步生成的CA证书签发服务端证书</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> tls.csr <span class="token parameter variable">-out</span> tls.crt <span class="token parameter variable">-extensions</span> req_ext <span class="token parameter variable">-extfile</span> tls.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行完以后生成<code>tls.crt</code>和<code>tls.key</code>两个文件即服务端证书和私钥。</p><p>现在服务端证书和私钥都准备好了，开始编写webhook逻辑。</p><h2 id="Mutating-Admission-Webhook">Mutating Admission Webhook</h2><p>本节将实现一个注入逻辑，给提交上来的Pod自动添加反亲和性配置<code>podAntiAffinity</code></p><h3 id="编写代码逻辑">编写代码逻辑</h3><ol><li>新建一个工程目录podaffinity-webhook-server并初始化mod</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> podaffinity-webhook-server <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> podaffinity-webhook-server <span class="token operator">&amp;&amp;</span> go mod init podaffinity<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>按以下目录组织</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## tree -L 1 podaffinity-webhook-server</span>podaffinity-webhook-server├── bin├── certs├── Dockerfile├── go.mod├── go.sum├── main.go├── manifest└── types<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>certs目录里面放前面生成好的服务端证书和私钥。manifest目录放置一会要用到的yaml文件。因为逻辑比较简单，所有代码都写在main.go里。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> <span class="token punctuation">(</span>certFile         <span class="token operator">=</span> kingpin<span class="token punctuation">.</span><span class="token function">Flag</span><span class="token punctuation">(</span><span class="token string">"certFile"</span><span class="token punctuation">,</span> <span class="token string">"SSL certificate file."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'c'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>keyFile          <span class="token operator">=</span> kingpin<span class="token punctuation">.</span><span class="token function">Flag</span><span class="token punctuation">(</span><span class="token string">"keyFile"</span><span class="token punctuation">,</span> <span class="token string">"SSL certificate key file."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'k'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>listeningAddress <span class="token operator">=</span> kingpin<span class="token punctuation">.</span><span class="token function">Flag</span><span class="token punctuation">(</span><span class="token string">"listen.address"</span><span class="token punctuation">,</span> <span class="token string">"Address on which to expose metrics."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">":8443"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'l'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>gracefulStop     <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// Parse flags</span>kingpin<span class="token punctuation">.</span><span class="token function">Version</span><span class="token punctuation">(</span><span class="token string">"0.1"</span><span class="token punctuation">)</span>kingpin<span class="token punctuation">.</span>HelpFlag<span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'h'</span><span class="token punctuation">)</span>kingpin<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// listen to termination signals from the OS</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGTERM<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGHUP<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGQUIT<span class="token punctuation">)</span><span class="token comment">// listener for the termination signals from the OS</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Listening and wait for graceful stop"</span><span class="token punctuation">)</span>sig <span class="token operator">:=</span> <span class="token operator">&lt;-</span>gracefulStoplog<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Caught signal: %+v. Wait 1 seconds..."</span><span class="token punctuation">,</span> sig<span class="token punctuation">)</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Terminate program on port: %s"</span><span class="token punctuation">,</span> <span class="token operator">*</span>listeningAddress<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"data"</span><span class="token punctuation">:</span> <span class="token string">"hello podaffinity-webhook-server!"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/mutate"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token keyword">defer</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Received body: %+v"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"code"</span><span class="token punctuation">:</span>    http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>mutRes<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">mutate</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"code"</span><span class="token punctuation">:</span>    http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>mutRes<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>server <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> <span class="token operator">*</span>listeningAddress<span class="token punctuation">,</span> Handler<span class="token punctuation">:</span> router<span class="token punctuation">}</span>server<span class="token punctuation">.</span><span class="token function">ListenAndServeTLS</span><span class="token punctuation">(</span><span class="token operator">*</span>certFile<span class="token punctuation">,</span> <span class="token operator">*</span>keyFile<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用gin框架，注册了一个handler叫/mutate，收到的请求参数是一个json，将其作为参数传递给主要函数逻辑mutate。下来看一下这个mutate函数：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">mutate</span><span class="token punctuation">(</span>body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>admReview <span class="token operator">:=</span> admissionv1<span class="token punctuation">.</span>AdmissionReview<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token operator">&amp;</span>admReview<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"unmarshal request body failed: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> err <span class="token builtin">error</span><span class="token keyword">var</span> pod <span class="token operator">*</span>corev1<span class="token punctuation">.</span>PodresponseBody <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token punctuation">}</span>ar <span class="token operator">:=</span> admReview<span class="token punctuation">.</span>Requestresp <span class="token operator">:=</span> admissionv1<span class="token punctuation">.</span>AdmissionResponse<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span> ar <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>Object<span class="token punctuation">.</span>Raw<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pod<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"unable to unmarshal pod json object %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// set response options</span>resp<span class="token punctuation">.</span>Allowed <span class="token operator">=</span> <span class="token boolean">true</span>resp<span class="token punctuation">.</span>UID <span class="token operator">=</span> ar<span class="token punctuation">.</span>UIDpT <span class="token operator">:=</span> admissionv1<span class="token punctuation">.</span>PatchTypeJSONPatchresp<span class="token punctuation">.</span>PatchType <span class="token operator">=</span> <span class="token operator">&amp;</span>pT<span class="token comment">// add some audit annotations, helpful to know why a object was modified.</span>resp<span class="token punctuation">.</span>AuditAnnotations <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"mutateme"</span><span class="token punctuation">:</span> <span class="token string">"webhook add it"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment">// Get Pod labels</span>labels <span class="token operator">:=</span> pod<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">.</span><span class="token function">GetLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> appType<span class="token punctuation">,</span> ok <span class="token operator">:=</span> labels<span class="token punctuation">[</span><span class="token string">"app_type"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span> <span class="token comment">// if has app_type, then will add PodAntiAffinity</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Pod label app_type = %s"</span><span class="token punctuation">,</span> appType<span class="token punctuation">)</span><span class="token keyword">var</span> patches <span class="token punctuation">[</span><span class="token punctuation">]</span>types<span class="token punctuation">.</span>PatchOperationop <span class="token operator">:=</span> types<span class="token punctuation">.</span>PatchOperation<span class="token punctuation">{</span>Op<span class="token punctuation">:</span>   <span class="token string">"add"</span><span class="token punctuation">,</span>Path<span class="token punctuation">:</span> <span class="token string">"/spec/affinity"</span><span class="token punctuation">,</span>Value<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>Affinity<span class="token punctuation">{</span>PodAntiAffinity<span class="token punctuation">:</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>PodAntiAffinity<span class="token punctuation">{</span>RequiredDuringSchedulingIgnoredDuringExecution<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>PodAffinityTerm<span class="token punctuation">{</span><span class="token punctuation">{</span>LabelSelector<span class="token punctuation">:</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>LabelSelector<span class="token punctuation">{</span>MatchExpressions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>metav1<span class="token punctuation">.</span>LabelSelectorRequirement<span class="token punctuation">{</span><span class="token punctuation">{</span>Key<span class="token punctuation">:</span>      <span class="token string">"app_type"</span><span class="token punctuation">,</span>Operator<span class="token punctuation">:</span> <span class="token string">"In"</span><span class="token punctuation">,</span>Values<span class="token punctuation">:</span>   <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>appType<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>TopologyKey<span class="token punctuation">:</span> <span class="token string">"kubernetes.io/hostname"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span>patches <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>patches<span class="token punctuation">,</span> op<span class="token punctuation">)</span><span class="token comment">// parse the []map into JSON</span>resp<span class="token punctuation">.</span>Patch<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>patches<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// Success, of course ;)</span>resp<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>Status<span class="token punctuation">{</span>Status<span class="token punctuation">:</span> <span class="token string">"Success"</span><span class="token punctuation">,</span><span class="token punctuation">}</span>admReview<span class="token punctuation">.</span>Response <span class="token operator">=</span> <span class="token operator">&amp;</span>resp<span class="token comment">// back into JSON so we can return the finished AdmissionReview w/ Response directly</span><span class="token comment">// w/o needing to convert things in the http handler</span>responseBody<span class="token punctuation">,</span> err <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>admReview<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err <span class="token comment">// untested section</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> responseBody<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将请求参数body反序列化至<code>AdmissionReview</code>类型的变量，从中拿出Pod，通过patch为Pod增加反亲和性配置，注入的path为<code>/spec/affinity</code>。</p><p>patch的时候用到了一个struct叫<code>types.PatchOperation</code>，在types目录下新建types.go</p><pre class="line-numbers language-go" data-language="go"><div class="caption"><span>types/types.go</span></div><code class="language-go"><span class="token keyword">type</span> PatchOperation <span class="token keyword">struct</span> <span class="token punctuation">{</span>Op    <span class="token builtin">string</span>      <span class="token string">`json:"op"`</span>Path  <span class="token builtin">string</span>      <span class="token string">`json:"path"`</span>Value <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token string">`json:"value,omitempty"`</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本例就注入了一个反亲和性配置。当然我们可以在mutate逻辑里随意注入其它属性字段，比如注入sidecar等。</p><p>接口最终需要返回一个<code>AdmissionResponse</code>类型的返回值，该类型指定了几个必要的属性：<code>UID</code>、<code>Allowed</code>、<code>Result</code>，最终将<code>AdmissionResponse</code>封装到<code>admReview.Response</code>里返回给Apiserver。</p><h3 id="部署webhook">部署webhook</h3><p>podaffinity-webhook-server写好以后可以独立于集群之外运行（也可以deployment形式部署于集群内运行），编译及启动方式：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">go build <span class="token parameter variable">-o</span> bin/podaffinity-webhook-server./bin/podaffinity-webhook-server <span class="token parameter variable">-c</span> certs/tls.pem <span class="token parameter variable">-k</span> certs/tls-key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="注册Mutating-Webhook到集群">注册Mutating Webhook到集群</h3><p>在manifest目录下创建文件mutatingwebhookconfig.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>manifest/mutatingwebhookconfig.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> admissionregistration.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> MutatingWebhookConfiguration<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> podaffinity<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>server<span class="token key atrule">webhooks</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> podaffinity<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>server.kube<span class="token punctuation">-</span>system.svc    <span class="token key atrule">clientConfig</span><span class="token punctuation">:</span>      <span class="token key atrule">caBundle</span><span class="token punctuation">:</span> &lt;CA BASE64<span class="token punctuation">&gt;</span>      <span class="token comment">#service:</span>      <span class="token comment">##  name: podaffinity-webhook-server</span>      <span class="token comment">##  namespace: kube-system</span>      <span class="token comment">##  path: "/mutate"</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//192.168.126.100<span class="token punctuation">:</span>8443/mutate    <span class="token key atrule">rules</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">operations</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"CREATE"</span><span class="token punctuation">]</span>        <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>        <span class="token key atrule">apiVersions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v1"</span><span class="token punctuation">]</span>        <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods"</span><span class="token punctuation">]</span>    <span class="token key atrule">failurePolicy</span><span class="token punctuation">:</span> Fail    <span class="token key atrule">namespaceSelector</span><span class="token punctuation">:</span>      <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>        <span class="token key atrule">podaffinity-webhook-admission-injection</span><span class="token punctuation">:</span> enabled    <span class="token key atrule">sideEffects</span><span class="token punctuation">:</span> None    <span class="token key atrule">admissionReviewVersions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v1"</span><span class="token punctuation">,</span> <span class="token string">"v1beta1"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>几个注意点：</p><ul><li><code>webhooks.name</code>必须是FQDN格式，不能随便写。</li><li><code>webhooks.clientConfig.caBundle</code>是前面生成的CA证书base64加密后的内容，注意加密后内容可能是换行的格式，要把他们连成一行。</li><li><code>webhooks.clientConfig.url</code>和<code>webhooks.clientConfig.service</code>二者必须取其一，如果webhook部署于集群内，可以写service。</li><li><code>webhooks.rules</code>告诉K8S需要在CREATE POD的时候触发webhook。</li><li><code>webhooks.namespaceSelector</code>指定了只有具有<code>podaffinity-webhook-admission-injection: enabled</code>这个label的ns才需要触发webhook</li></ul><p>把这个文件提交到K8S，然后给某ns打上label</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> manifest/mutatingwebhookconfig.yamlkubectl label ns default podaffinity-webhook-admission-injection<span class="token operator">=</span>enabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="测试">测试</h3><p>在default下面随便提交一个deployment，看Pod是否自动补充了两个volumes。</p><h3 id="可能遇到的问题">可能遇到的问题</h3><p>如果Pod没建出来的话，一定要describe replicasets看看event：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl describe replicasets.apps nginx-5776d4fd9d -n default</span>……Events:  Type     Reason        Age                  From                   Message  ----     ------        ----                 ----                   -------  Warning  FailedCreate  45m <span class="token punctuation">(</span>x16 over 47m<span class="token punctuation">)</span>   replicaset-controller  Error creating: Internal error occurred: failed calling webhook <span class="token string">"podaffinity-webhook-server.kube-system.svc"</span><span class="token builtin class-name">:</span> failed to call webhook: Post <span class="token string">"https://podaffinity-webhook-server.kube-system.svc:443/mutate?timeout=10s"</span><span class="token builtin class-name">:</span> x509: certificate is valid <span class="token keyword">for</span> podaffinity.webhook-server.kube-system.svc, not podaffinity-webhook-server.kube-system.svc  Warning  FailedCreate  37m <span class="token punctuation">(</span>x2 over 42m<span class="token punctuation">)</span>    replicaset-controller  Error creating: Internal error occurred: failed calling webhook <span class="token string">"podaffinity-webhook-server.kube-system.svc"</span><span class="token builtin class-name">:</span> failed to call webhook: Post <span class="token string">"https://podaffinity-webhook-server.kube-system.svc:443/mutate?timeout=10s"</span><span class="token builtin class-name">:</span> <span class="token function">service</span> <span class="token string">"podaffinity-webhook-server"</span> not found  Warning  FailedCreate  9m28s <span class="token punctuation">(</span>x2 over 26m<span class="token punctuation">)</span>  replicaset-controller  Error creating: Internal error occurred: failed calling webhook <span class="token string">"podaffinity-webhook-server.kube-system.svc"</span><span class="token builtin class-name">:</span> failed to call webhook: Post <span class="token string">"https://podaffinity-webhook-server.kube-system.svc:443/mutate?timeout=10s"</span><span class="token builtin class-name">:</span> x509: certificate signed by unknown authority<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原因：</p><ul><li>在创建服务端证书请求文件的时候，hosts里没有加入对应的域名/IP，重新生成证书请求文件、证书即可。</li><li>没有找到service，创建service即可。</li><li>caBundle的内容和服务端证书不匹配，按照前面的步骤重新生成。</li></ul><div class="note success no-icon"><p>本例完整代码参见：<a href="https://gitee.com/hongyuxuan2138/podaffinity-webhook-server">https://gitee.com/hongyuxuan2138/podaffinity-webhook-server</a></p></div><h2 id="Validating-Admission-Webhook">Validating Admission Webhook</h2><p>本节将实现一个验证型准入控制器逻辑，判断提交上来的Pod的image是否含有nginx子串，如果有则拒绝这个资源请求。</p><h3 id="编写代码逻辑-2">编写代码逻辑</h3><p>main函数和mutating adminission webhook基本一样，只不过<code>/mutate</code>换成了<code>/validate</code></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> <span class="token punctuation">(</span>certFile         <span class="token operator">=</span> kingpin<span class="token punctuation">.</span><span class="token function">Flag</span><span class="token punctuation">(</span><span class="token string">"certFile"</span><span class="token punctuation">,</span> <span class="token string">"SSL certificate file."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'c'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>keyFile          <span class="token operator">=</span> kingpin<span class="token punctuation">.</span><span class="token function">Flag</span><span class="token punctuation">(</span><span class="token string">"keyFile"</span><span class="token punctuation">,</span> <span class="token string">"SSL certificate key file."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'k'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>listeningAddress <span class="token operator">=</span> kingpin<span class="token punctuation">.</span><span class="token function">Flag</span><span class="token punctuation">(</span><span class="token string">"listen.address"</span><span class="token punctuation">,</span> <span class="token string">"Address on which to expose metrics."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">":8443"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'l'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>gracefulStop     <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// Parse flags</span>kingpin<span class="token punctuation">.</span><span class="token function">Version</span><span class="token punctuation">(</span><span class="token string">"0.1"</span><span class="token punctuation">)</span>kingpin<span class="token punctuation">.</span>HelpFlag<span class="token punctuation">.</span><span class="token function">Short</span><span class="token punctuation">(</span><span class="token char">'h'</span><span class="token punctuation">)</span>kingpin<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// listen to termination signals from the OS</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGTERM<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGHUP<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>gracefulStop<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGQUIT<span class="token punctuation">)</span><span class="token comment">// listener for the termination signals from the OS</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Listening and wait for graceful stop"</span><span class="token punctuation">)</span>sig <span class="token operator">:=</span> <span class="token operator">&lt;-</span>gracefulStoplog<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Caught signal: %+v. Wait 1 seconds..."</span><span class="token punctuation">,</span> sig<span class="token punctuation">)</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Terminate program on port: %s"</span><span class="token punctuation">,</span> <span class="token operator">*</span>listeningAddress<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"data"</span><span class="token punctuation">:</span> <span class="token string">"hello image-webhook-server!"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/validate"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token keyword">defer</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"Received body: %+v"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"code"</span><span class="token punctuation">:</span>    http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>validRes<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">validate</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"code"</span><span class="token punctuation">:</span>    http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>validRes<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>server <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> <span class="token operator">*</span>listeningAddress<span class="token punctuation">,</span> Handler<span class="token punctuation">:</span> router<span class="token punctuation">}</span>server<span class="token punctuation">.</span><span class="token function">ListenAndServeTLS</span><span class="token punctuation">(</span><span class="token operator">*</span>certFile<span class="token punctuation">,</span> <span class="token operator">*</span>keyFile<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>validate函数如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">validate</span><span class="token punctuation">(</span>body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>admReview <span class="token operator">:=</span> admissionv1<span class="token punctuation">.</span>AdmissionReview<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token operator">&amp;</span>admReview<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"unmarshal request body failed: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> err <span class="token builtin">error</span><span class="token keyword">var</span> pod <span class="token operator">*</span>corev1<span class="token punctuation">.</span>PodresponseBody <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token punctuation">}</span>ar <span class="token operator">:=</span> admReview<span class="token punctuation">.</span>Requestresp <span class="token operator">:=</span> admissionv1<span class="token punctuation">.</span>AdmissionResponse<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span> ar <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>Object<span class="token punctuation">.</span>Raw<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pod<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"unable to unmarshal pod json object %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// set response options</span>resp<span class="token punctuation">.</span>UID <span class="token operator">=</span> ar<span class="token punctuation">.</span>UIDcontainers <span class="token operator">:=</span> pod<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Containers<span class="token comment">// Modify the Pod spec to include the volumes, then op the original pod.</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> containers <span class="token punctuation">{</span><span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Image<span class="token punctuation">,</span> <span class="token string">"nginx"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// nginx image will be denied</span>msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Image[%s] which has 'nginx' str is not allowed"</span><span class="token punctuation">,</span> containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Image<span class="token punctuation">)</span>resp<span class="token punctuation">.</span>Allowed <span class="token operator">=</span> <span class="token boolean">false</span>resp<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>Status<span class="token punctuation">{</span>Status<span class="token punctuation">:</span>  <span class="token string">"Failure"</span><span class="token punctuation">,</span>Code<span class="token punctuation">:</span>    <span class="token function">int32</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span><span class="token punctuation">,</span>Reason<span class="token punctuation">:</span>  metav1<span class="token punctuation">.</span><span class="token function">StatusReason</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">,</span>Message<span class="token punctuation">:</span> msg<span class="token punctuation">,</span><span class="token punctuation">}</span>log<span class="token punctuation">.</span><span class="token function">Errorln</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>resp<span class="token punctuation">.</span>Allowed <span class="token operator">=</span> <span class="token boolean">true</span>resp<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>Status<span class="token punctuation">{</span>Status<span class="token punctuation">:</span> <span class="token string">"Success"</span><span class="token punctuation">,</span>Code<span class="token punctuation">:</span>   <span class="token function">int32</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>admReview<span class="token punctuation">.</span>Response <span class="token operator">=</span> <span class="token operator">&amp;</span>resp<span class="token comment">// back into JSON so we can return the finished AdmissionReview w/ Response directly</span><span class="token comment">// w/o needing to convert things in the http handler</span>responseBody<span class="token punctuation">,</span> err <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>admReview<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err <span class="token comment">// untested section</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> responseBody<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="部署webhook-2">部署webhook</h3><p>略</p><h3 id="注册Validate-Webhook到集群">注册Validate Webhook到集群</h3><p>在manifest目录下创建文件validatingwebhookconfig.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>manifest/validatingwebhookconfig.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> admissionregistration.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ValidatingWebhookConfiguration<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> image<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>server<span class="token key atrule">webhooks</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> image<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>server.kube<span class="token punctuation">-</span>system.svc  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>   <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">apiVersions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v1"</span><span class="token punctuation">]</span>    <span class="token key atrule">operations</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">"CREATE"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>   <span class="token punctuation">[</span><span class="token string">"pods"</span><span class="token punctuation">]</span>  <span class="token key atrule">clientConfig</span><span class="token punctuation">:</span>    <span class="token key atrule">caBundle</span><span class="token punctuation">:</span> LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lVS2FYYkRMd0pNcGxIZEtVaFNqRUZkWGpqVkRRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1d6RUxNQWtHQTFVRUJoTUNRMDR4Q3pBSkJnTlZCQWdUQWtKS01Rc3dDUVlEVlFRSEV3SkNTakVNTUFvRwpBMVVFQ2hNRGF6aHpNUTh3RFFZRFZRUUxFd1pUZVhOMFpXMHhFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13CklCY05Nak14TWpFek1EY3hOREF3V2hnUE1qRXlNekV4TVRrd056RTBNREJhTUZzeEN6QUpCZ05WQkFZVEFrTk8KTVFzd0NRWURWUVFJRXdKQ1NqRUxNQWtHQTFVRUJ4TUNRa294RERBS0JnTlZCQW9UQTJzNGN6RVBNQTBHQTFVRQpDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBdTJid2NtS0RweXk2NDZlRGtDRzdxbitIeEsyZFJqN2tuVk4vbGZwWldtRjkKMmg4ZENNN2xzRm1Ed3VhSHRmQnc0UUtFYnNGUklvMGVLV0szLzAvdUoyRlluLzI1aldNWGRmdjYyMVAvOE1CVgp6UG5vQkU0OENyck95b2dIRmU5NlBOVE9DaGI1K3JUeU9UV3pqbEFXb1ptNlBpVVF1M2pkTmh6Wk1ZRzJSKzRvCk9oekRranZYbjdzQWpnNmZHOWd2R2wrSStuY2tQdTg2OEJLWWNwclIwSGx1MjR4M015cjBHMUxYd1RIU0g0cDgKSUlOWitqZGxvamQvNTlkb2tuVTcyYWoxS1R0RjZaSXdzbk51cHc4TUhyVHNoZFVqTGZWZ2xDYVZ4WG1nR2F6SQp3NVExWGNnQ2hqUFVEMWxuNXJ6bjgwMktiTXpOdGRyd0hUR04vTTY2cHdJREFRQUJvMEl3UURBT0JnTlZIUThCCkFmOEVCQU1DQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUN6YkRaTGRVSlMyTVQvVW4KeHRUL3lIOVBLRXd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUliRFlNdFg4SGN0NTlDTFNKRXRvbkF4OUxlQgpsc1RlSFN6OEUvZVJsMHRBaGFxZ1Mxd29lTXZBbnE2ZFBZVklSbmhveERDRGcybElJdTR4QWpPNWFUN3cwOUFtCkkxTlpFeGtmVGVGbW56VU92VkFxV0U3YTc2WEJLcHFkeWVhVlloYmw5ekVwWXZ1T1Y4YStvRWR4Ky83QmxJQnoKaU4xNlRCK2U2QWY5dWRYZEN5bFRYaGh1TE1panlRbUhYVnpxYUtvczdaTXNWeENSR0pjdWYyeS9lbmswZlpmSwpkbGxqUDdKWmUwa05NRkJ2QTgxUE80NlgyL3N4Snk0QUZKcEpGTnU2clJ5amZ0bDBHUDBLS29iSG9UUWdzRmQ5Cmx1a29odDExZEk0WUFQMnVySVA3dHVrSlNoZ241Q1VITzYvWDNvNGdDY2gzMkhsd2RWb3lTZ25TNzRNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==    <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//192.168.126.100<span class="token punctuation">:</span>8443/validate  <span class="token key atrule">admissionReviewVersions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v1"</span><span class="token punctuation">]</span>  <span class="token key atrule">sideEffects</span><span class="token punctuation">:</span> None  <span class="token key atrule">failurePolicy</span><span class="token punctuation">:</span> Fail  <span class="token key atrule">namespaceSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">podaffinity-webhook-admission-injection</span><span class="token punctuation">:</span> enabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提交这个yaml文件到集群，即完成注册。</p><h3 id="测试-2">测试</h3><p>在default下面提交一个deployment，image设置成nginx:1.21.4，看该请求是否被拒绝。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl describe replicasets.apps nginx-5776d4fd9d -n default</span>Events:  Type     Reason        Age                From                   Message  ----     ------        ----               ----                   -------  Warning  FailedCreate  2s <span class="token punctuation">(</span>x14 over 43s<span class="token punctuation">)</span>  replicaset-controller  Error creating: admission webhook <span class="token string">"image-webhook-server.kube-system.svc"</span> denied the request: Image<span class="token punctuation">[</span>nginx:1.21.4<span class="token punctuation">]</span> <span class="token function">which</span> has <span class="token string">'nginx'</span> str is not allowed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note success no-icon"><p>本例完整代码参见：<a href="https://gitee.com/hongyuxuan2138/image-webhook-server">https://gitee.com/hongyuxuan2138/image-webhook-server</a></p></div>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S二次开发系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>山海关追忆童年</title>
      <link href="/blog/posts/5595753519/"/>
      <url>/blog/posts/5595753519/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=876514179&amp;bvid=BV18N4y127op&amp;cid=1348296865&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大二班毕业季 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio系列文章之（四）流量管理</title>
      <link href="/blog/posts/3312330574/"/>
      <url>/blog/posts/3312330574/</url>
      
        <content type="html"><![CDATA[<p>上一节已经讲过使用基本的虚拟服务（VirtualService）和目标规则（DestinationRule）进行流量管理的示例，本节将继续讲解几个高级用法。</p><h2 id="创建目标规则">创建目标规则</h2><p>执行以下命令创建默认目标规则</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/destination-rule-all.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基于用户身份的路由">基于用户身份的路由</h2><h3 id="创建路由规则">创建路由规则</h3><p>本示例将修改路由配置，将来自特定用户的所有流量路由到特定服务版本。在这种情况下， 来自名为Jason的用户的所有流量将被路由到服务reviews:v2。</p><p>productpage服务在所有到reviews服务的HTTP请求中都增加了一个自定义的end-user请求头，从而达到了本例子的效果。</p><p>注意：reviews:v2是包含星级评分功能的版本。</p><ol><li>运行以下命令以启用基于用户的路由</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token punctuation">...</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> reviews  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">end-user</span><span class="token punctuation">:</span>          <span class="token key atrule">exact</span><span class="token punctuation">:</span> jason    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>在Bookinfo的页面上，以用户jason登录（密码也是jason），这将会在从productpage发往reviews的HTTP请求上增加header：end-user=jason，从而触发第一步设置的路由规则。刷新页面，星级评分将显示在每个评论旁边。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F7.png" alt=""></p></li><li><p>登出jason用户（或以其他用户名登录），再刷新页面，星级评分没有了。这是因为除了Jason之外，所有用户的流量都被路由到reviews:v1。</p></li></ol><h3 id="清除环境">清除环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl delete <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-all-v1.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基于权重的路由">基于权重的路由</h2><h3 id="创建路由规则-2">创建路由规则</h3><ol><li>首先，运行此命令将所有流量路由到各个微服务的 v1 版本。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-all-v1.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li><p>在浏览器中打开Bookinfo页面，不管刷新多少次，页面的评论部分都不会显示评价星级的内容。 这是因为Istio被配置为将星级评价的服务的所有流量都路由到了reviews:v1版本，而该版本的服务不访问带评价星级的服务。</p></li><li><p>使用下面的命令把50%的流量从reviews:v1转移到reviews:v3：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-reviews-50-v3.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>samples/bookinfo/networking/virtual-service-reviews-50-v3.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> reviews  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">50</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v3      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><p>刷新浏览器，大约有50%的几率会看到页面中带红色星级的评价内容。这是因为reviews的v3版本可以访问带星级评价，但v1版本不能。</p></li><li><p>如果认为reviews:v3微服务已经稳定，我们可以通过应用Virtual Service规则将100%的流量路由reviews:v3：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-reviews-v3.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li>现在新页面时，将始终看到带有红色星级评分的书评。</li></ol><h3 id="清除环境-2">清除环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl delete <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-all-v1.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="故障注入">故障注入</h2><h3 id="创建路由规则-3">创建路由规则</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-all-v1.yamlkubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>经过上面的流程，下面是请求的流程：</p><ul><li>productpage → reviews:v2 → ratings (针对 jason 用户)</li><li>productpage → reviews:v1 (其他用户)</li></ul><h3 id="注入HTTP延迟故障">注入HTTP延迟故障</h3><p>为了测试微服务应用程序Bookinfo的弹性，我们将为用户jason在reviews:v2和ratings服务之间注入一个2秒的延迟。这个测试将会发现一个故意引入Bookinfo应用程序中的bug。</p><p>注意reviews:v2服务对ratings服务的调用具有10秒的硬编码连接超时。而在productpage和reviews服务之间也有一个3秒的硬编码的超时，再加1次重试，一共6秒。因此，reviews和rating之间延迟不能超过3s，否则productpage就会直接超时重试了。尽管引入了2秒的延迟，我们仍然期望端到端的流程是没有任何错误的。</p><ol><li>创建故障注入规则以延迟来自测试用户jason的流量：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-ratings-test-delay.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>samples/bookinfo/networking/virtual-service-ratings-test-delay.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">end-user</span><span class="token punctuation">:</span>          <span class="token key atrule">exact</span><span class="token punctuation">:</span> jason    <span class="token key atrule">fault</span><span class="token punctuation">:</span>      <span class="token key atrule">delay</span><span class="token punctuation">:</span>        <span class="token key atrule">percentage</span><span class="token punctuation">:</span>          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">100.0</span>        <span class="token key atrule">fixedDelay</span><span class="token punctuation">:</span> 2s    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>测试故障，刷新页面，用jason登录，发现页面需要2s才能响应。打开F12，看到productpage的响应时间为2s左右<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F8.png" alt=""></li></ol><h3 id="注入HTTP-abort故障（模拟500）">注入HTTP abort故障（模拟500）</h3><p>测试微服务弹性的另一种方法是引入HTTP abort故障。 在这个任务中，针对测试用户jason，将给ratings微服务引入一个HTTP abort。</p><p>在这种情况下，我们希望页面能够立即加载，同时显示 Ratings service is currently unavailable 这样的消息。</p><ol><li>为用户 jason 创建一个发送 HTTP abort 的故障注入规则：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-ratings-test-abort.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>samples/bookinfo/networking/virtual-service-ratings-test-abort.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">end-user</span><span class="token punctuation">:</span>          <span class="token key atrule">exact</span><span class="token punctuation">:</span> jason    <span class="token key atrule">fault</span><span class="token punctuation">:</span>      <span class="token key atrule">abort</span><span class="token punctuation">:</span>        <span class="token key atrule">percentage</span><span class="token punctuation">:</span>          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">100.0</span>        <span class="token key atrule">httpStatus</span><span class="token punctuation">:</span> <span class="token number">500</span>    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>浏览器打开Bookinfo应用，以jason用户登录，刷新页面将会立刻返回<code>Ratings service is currently unavailable</code>消息。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F9.png" alt=""></p></li><li><p>此时打开kiali，也可以看到链路调用图中有一条红色的线标识返回500的请求。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F10.png" alt=""></p></li><li><p>如果注销用户jason或用其他用户打开Bookinfo页面，将看到/productpage为除jason以外的其他用户调用了reviews:v1（完全不调用ratings）。因此，页面不会看到任何错误消息。</p></li></ol><h3 id="清除环境-3">清除环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl delete <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-all-v1.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置请求超时">设置请求超时</h2><p>HTTP请求的超时可以通过路由规则中的timeout字段来指定 默认情况下，超时是禁用的，本任务中，会把reviews服务的超时设置为半秒。为了观察效果，还需要在对ratings服务的调用上人为引入2秒的延迟。</p><h3 id="创建路由规则-4">创建路由规则</h3><ol><li>将请求路由到reviews服务的v2版本，它会发起对ratings服务的调用：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> - <span class="token operator">&lt;&lt;</span><span class="token string">EOFapiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata:  name: reviewsspec:  hosts:    - reviews  http:  - route:    - destination:        host: reviews        subset: v2EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>给对ratings服务的调用添加2秒的延迟：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> - <span class="token operator">&lt;&lt;</span><span class="token string">EOFapiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata:  name: ratingsspec:  hosts:  - ratings  http:  - fault:      delay:        percent: 100        fixedDelay: 2s    route:    - destination:        host: ratings        subset: v1EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>在浏览器中打开Bookinfo，刷新页面每次会有2s延迟。</p></li><li><p>现在给对reviews服务的调用增加一个半秒的请求超时：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> - <span class="token operator">&lt;&lt;</span><span class="token string">EOFapiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata:  name: reviewsspec:  hosts:  - reviews  http:  - route:    - destination:        host: reviews        subset: v2    timeout: 0.5sEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>这时候应该看到1秒钟就会返回，而不是之前的2秒钟，但reviews是不可用的。</li></ol><div class="note success no-icon"><p>即使超时配置为半秒，响应仍需要1秒，是因为productpage服务中存在硬编码重试，因此它在返回之前调用reviews服务超时两次。</p></div><p>可以观察到，Bookinfo的页面（调用reviews服务来生成页面）没显示评论，而是显示了消息：<code>Sorry, product reviews are currently unavailable for this book.</code>这就是它收到了来自 reviews 服务的超时错误信息。</p><h3 id="清除环境-4">清除环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl delete <span class="token parameter variable">-f</span> samples/bookinfo/networking/virtual-service-all-v1.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="熔断">熔断</h2><p>本任务展示如何为连接、请求以及异常检测配置熔断。</p><p>熔断，是创建弹性微服务应用程序的重要模式。熔断能够使应用程序具备应对来自故障、潜在峰值和其他未知网络因素影响的能力。</p><p>这个任务中，本文将配置熔断规则，然后通过有意的使熔断器“跳闸”来测试配置。</p><h3 id="部署httpbin服务">部署httpbin服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/httpbin/httpbin.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置熔断器">配置熔断器</h3><p>创建一个目标规则，在调用httpbin服务时应用熔断设置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> - <span class="token operator">&lt;&lt;</span><span class="token string">EOFapiVersion: networking.istio.io/v1alpha3kind: DestinationRulemetadata:  name: httpbinspec:  host: httpbin  trafficPolicy:    connectionPool:      tcp:        maxConnections: 1      http:        http1MaxPendingRequests: 1        maxRequestsPerConnection: 1    outlierDetection:      consecutive5xxErrors: 1      interval: 1s      baseEjectionTime: 3m      maxEjectionPercent: 100EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="部署客户端">部署客户端</h3><p>创建客户端程序以发送流量到 httpbin 服务。这是一个名为 Fortio 的负载测试客户端， 它可以控制连接数、并发数及发送 HTTP 请求的延迟。 通过 Fortio 能够有效的触发前面在 DestinationRule 中设置的熔断策略。</p><ol><li>部署fortio应用</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> samples/httpbin/sample-client/fortio-deploy.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>登入客户端 Pod 并使用 Fortio 工具调用 httpbin 服务。-curl 参数表明发送一次调用：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## export FORTIO_POD=$(kubectl get pods -l app=fortio -o 'jsonpath={.items[0].metadata.name}')</span><span class="token comment">## kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio curl -quiet http://httpbin:8000/get</span>HTTP/1.1 <span class="token number">200</span> OKserver: envoydate: Wed, <span class="token number">29</span> Nov <span class="token number">2023</span> 02:29:55 GMTcontent-type: application/jsoncontent-length: <span class="token number">604</span>access-control-allow-origin: *access-control-allow-credentials: <span class="token boolean">true</span>x-envoy-upstream-service-time: <span class="token number">37</span><span class="token punctuation">{</span>  <span class="token string">"args"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>,  <span class="token string">"headers"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>    <span class="token string">"Host"</span><span class="token builtin class-name">:</span> <span class="token string">"httpbin:8000"</span>,    <span class="token string">"User-Agent"</span><span class="token builtin class-name">:</span> <span class="token string">"fortio.org/fortio-1.17.1"</span>,    <span class="token string">"X-B3-Parentspanid"</span><span class="token builtin class-name">:</span> <span class="token string">"4fe31703ae3e116c"</span>,    <span class="token string">"X-B3-Sampled"</span><span class="token builtin class-name">:</span> <span class="token string">"1"</span>,    <span class="token string">"X-B3-Spanid"</span><span class="token builtin class-name">:</span> <span class="token string">"309260e8f043215f"</span>,    <span class="token string">"X-B3-Traceid"</span><span class="token builtin class-name">:</span> <span class="token string">"eb54b298e3a056414fe31703ae3e116c"</span>,    <span class="token string">"X-Envoy-Attempt-Count"</span><span class="token builtin class-name">:</span> <span class="token string">"1"</span>,    <span class="token string">"X-Forwarded-Client-Cert"</span><span class="token builtin class-name">:</span> <span class="token string">"By=spiffe://cluster.local/ns/ficc-ofa-dev/sa/httpbin;Hash=c76311278aaa076b14ab1497090ed974a9d79a70e6c9b4e8373d4a9570a5b044;Subject=<span class="token entity" title="\&quot;">\"</span><span class="token entity" title="\&quot;">\"</span>;URI=spiffe://cluster.local/ns/ficc-ofa-dev/sa/default"</span>  <span class="token punctuation">}</span>,  <span class="token string">"origin"</span><span class="token builtin class-name">:</span> <span class="token string">"127.0.0.6"</span>,  <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"http://httpbin:8000/get"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到调用后端服务的请求已经成功！接下来，可以测试熔断。</p><h3 id="触发熔断器">触发熔断器</h3><p>在DestinationRule配置中定义 maxConnections: 1和http1MaxPendingRequests: 1。这些规则意味着，如果并发的连接和请求数超过一个，在istio-proxy进行进一步的请求和连接时，后续请求或连接将被阻止。</p><ol><li>发送并发数为2的连接（-c 2），请求20次（-n 20）：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio load -c 2 -qps 0 -n 20 -loglevel Warning http://httpbin:8000/get</span>level warning http://httpbin:8000/get02:36:45 I logger.go:12<span class="token operator"><span class="token file-descriptor important">7</span>&gt;</span> Log level is now <span class="token number">3</span> Warning <span class="token punctuation">(</span>was <span class="token number">2</span> Info<span class="token punctuation">)</span>Fortio <span class="token number">1.17</span>.1 running at <span class="token number">0</span> queries per second, <span class="token number">2</span>-<span class="token operator">&gt;</span><span class="token number">2</span> procs, <span class="token keyword">for</span> <span class="token number">20</span> calls: http://httpbin:8000/getStarting at max qps with <span class="token number">2</span> thread<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">[</span>gomax <span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> exactly <span class="token number">20</span> calls <span class="token punctuation">(</span><span class="token number">10</span> per thread + <span class="token number">0</span><span class="token punctuation">)</span>02:36:45 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:36:45 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:36:45 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:36:45 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:36:45 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:36:45 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>Ended after <span class="token number">225</span>.072865ms <span class="token builtin class-name">:</span> <span class="token number">20</span> calls. <span class="token assign-left variable">qps</span><span class="token operator">=</span><span class="token number">88.86</span>Aggregated Function Time <span class="token builtin class-name">:</span> count <span class="token number">20</span> avg <span class="token number">0.022105607</span> +/- <span class="token number">0.01845</span> min <span class="token number">0.001268616</span> max <span class="token number">0.074273631</span> <span class="token function">sum</span> <span class="token number">0.442112137</span><span class="token comment">## range, mid point, percentile, count</span><span class="token operator">&gt;=</span> <span class="token number">0.00126862</span> <span class="token operator">&lt;=</span> <span class="token number">0.002</span> , <span class="token number">0.00163431</span> , <span class="token number">10.00</span>, <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token number">0.003</span> <span class="token operator">&lt;=</span> <span class="token number">0.004</span> , <span class="token number">0.0035</span> , <span class="token number">15.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.007</span> <span class="token operator">&lt;=</span> <span class="token number">0.008</span> , <span class="token number">0.0075</span> , <span class="token number">20.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.011</span> <span class="token operator">&lt;=</span> <span class="token number">0.012</span> , <span class="token number">0.0115</span> , <span class="token number">25.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.012</span> <span class="token operator">&lt;=</span> <span class="token number">0.014</span> , <span class="token number">0.013</span> , <span class="token number">35.00</span>, <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token number">0.014</span> <span class="token operator">&lt;=</span> <span class="token number">0.016</span> , <span class="token number">0.015</span> , <span class="token number">55.00</span>, <span class="token number">4</span><span class="token operator">&gt;</span> <span class="token number">0.016</span> <span class="token operator">&lt;=</span> <span class="token number">0.018</span> , <span class="token number">0.017</span> , <span class="token number">60.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.018</span> <span class="token operator">&lt;=</span> <span class="token number">0.02</span> , <span class="token number">0.019</span> , <span class="token number">70.00</span>, <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token number">0.03</span> <span class="token operator">&lt;=</span> <span class="token number">0.035</span> , <span class="token number">0.0325</span> , <span class="token number">80.00</span>, <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token number">0.035</span> <span class="token operator">&lt;=</span> <span class="token number">0.04</span> , <span class="token number">0.0375</span> , <span class="token number">85.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.045</span> <span class="token operator">&lt;=</span> <span class="token number">0.05</span> , <span class="token number">0.0475</span> , <span class="token number">90.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.05</span> <span class="token operator">&lt;=</span> <span class="token number">0.06</span> , <span class="token number">0.055</span> , <span class="token number">95.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.07</span> <span class="token operator">&lt;=</span> <span class="token number">0.0742736</span> , <span class="token number">0.0721368</span> , <span class="token number">100.00</span>, <span class="token number">1</span><span class="token comment">## target 50% 0.0155</span><span class="token comment">## target 75% 0.0325</span><span class="token comment">## target 90% 0.05</span><span class="token comment">## target 99% 0.0734189</span><span class="token comment">## target 99.9% 0.0741882</span>Sockets used: <span class="token number">8</span> <span class="token punctuation">(</span>for perfect keepalive, would be <span class="token number">2</span><span class="token punctuation">)</span>Jitter: <span class="token boolean">false</span>Code <span class="token number">200</span> <span class="token builtin class-name">:</span> <span class="token number">14</span> <span class="token punctuation">(</span><span class="token number">70.0</span> %<span class="token punctuation">)</span>Code <span class="token number">503</span> <span class="token builtin class-name">:</span> <span class="token number">6</span> <span class="token punctuation">(</span><span class="token number">30.0</span> %<span class="token punctuation">)</span>Response Header Sizes <span class="token builtin class-name">:</span> count <span class="token number">20</span> avg <span class="token number">161.6</span> +/- <span class="token number">105.8</span> min <span class="token number">0</span> max <span class="token number">231</span> <span class="token function">sum</span> <span class="token number">3232</span>Response Body/Total Sizes <span class="token builtin class-name">:</span> count <span class="token number">20</span> avg <span class="token number">656.7</span> +/- <span class="token number">272.1</span> min <span class="token number">241</span> max <span class="token number">835</span> <span class="token function">sum</span> <span class="token number">13134</span>All <span class="token keyword">done</span> <span class="token number">20</span> calls <span class="token punctuation">(</span>plus <span class="token number">0</span> warmup<span class="token punctuation">)</span> <span class="token number">22.106</span> ms avg, <span class="token number">88.9</span> qps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有14个请求成功了，6个失败了</p><pre class="line-numbers language-none"><code class="language-none">Code 200 : 14 (70.0 %)Code 503 : 6 (30.0 %)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>将并发连接数提高到 3 个：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio load -c 3 -qps 0 -n 30 -loglevel Warning http://httpbin:8000/get</span>02:55:56 I logger.go:12<span class="token operator"><span class="token file-descriptor important">7</span>&gt;</span> Log level is now <span class="token number">3</span> Warning <span class="token punctuation">(</span>was <span class="token number">2</span> Info<span class="token punctuation">)</span>Fortio <span class="token number">1.17</span>.1 running at <span class="token number">0</span> queries per second, <span class="token number">2</span>-<span class="token operator">&gt;</span><span class="token number">2</span> procs, <span class="token keyword">for</span> <span class="token number">30</span> calls: http://httpbin:8000/getStarting at max qps with <span class="token number">3</span> thread<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">[</span>gomax <span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> exactly <span class="token number">30</span> calls <span class="token punctuation">(</span><span class="token number">10</span> per thread + <span class="token number">0</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:56 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:57 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:57 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:57 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>02:55:57 W http_client.go:80<span class="token operator"><span class="token file-descriptor important">6</span>&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> Non ok http code <span class="token number">503</span> <span class="token punctuation">(</span>HTTP/1.1 <span class="token number">503</span><span class="token punctuation">)</span>Ended after <span class="token number">1</span>.10855232s <span class="token builtin class-name">:</span> <span class="token number">30</span> calls. <span class="token assign-left variable">qps</span><span class="token operator">=</span><span class="token number">27.062</span>Aggregated Function Time <span class="token builtin class-name">:</span> count <span class="token number">30</span> avg <span class="token number">0.091949974</span> +/- <span class="token number">0.1241</span> min <span class="token number">0.002178128</span> max <span class="token number">0.468933898</span> <span class="token function">sum</span> <span class="token number">2.75849922</span><span class="token comment">## range, mid point, percentile, count</span><span class="token operator">&gt;=</span> <span class="token number">0.00217813</span> <span class="token operator">&lt;=</span> <span class="token number">0.003</span> , <span class="token number">0.00258906</span> , <span class="token number">3.33</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.004</span> <span class="token operator">&lt;=</span> <span class="token number">0.005</span> , <span class="token number">0.0045</span> , <span class="token number">6.67</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.007</span> <span class="token operator">&lt;=</span> <span class="token number">0.008</span> , <span class="token number">0.0075</span> , <span class="token number">10.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.008</span> <span class="token operator">&lt;=</span> <span class="token number">0.009</span> , <span class="token number">0.0085</span> , <span class="token number">13.33</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.009</span> <span class="token operator">&lt;=</span> <span class="token number">0.01</span> , <span class="token number">0.0095</span> , <span class="token number">16.67</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.012</span> <span class="token operator">&lt;=</span> <span class="token number">0.014</span> , <span class="token number">0.013</span> , <span class="token number">33.33</span>, <span class="token number">5</span><span class="token operator">&gt;</span> <span class="token number">0.014</span> <span class="token operator">&lt;=</span> <span class="token number">0.016</span> , <span class="token number">0.015</span> , <span class="token number">36.67</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.018</span> <span class="token operator">&lt;=</span> <span class="token number">0.02</span> , <span class="token number">0.019</span> , <span class="token number">40.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.02</span> <span class="token operator">&lt;=</span> <span class="token number">0.025</span> , <span class="token number">0.0225</span> , <span class="token number">50.00</span>, <span class="token number">3</span><span class="token operator">&gt;</span> <span class="token number">0.035</span> <span class="token operator">&lt;=</span> <span class="token number">0.04</span> , <span class="token number">0.0375</span> , <span class="token number">53.33</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.04</span> <span class="token operator">&lt;=</span> <span class="token number">0.045</span> , <span class="token number">0.0425</span> , <span class="token number">56.67</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.045</span> <span class="token operator">&lt;=</span> <span class="token number">0.05</span> , <span class="token number">0.0475</span> , <span class="token number">60.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.05</span> <span class="token operator">&lt;=</span> <span class="token number">0.06</span> , <span class="token number">0.055</span> , <span class="token number">66.67</span>, <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token number">0.06</span> <span class="token operator">&lt;=</span> <span class="token number">0.07</span> , <span class="token number">0.065</span> , <span class="token number">70.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.07</span> <span class="token operator">&lt;=</span> <span class="token number">0.08</span> , <span class="token number">0.075</span> , <span class="token number">73.33</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.1</span> <span class="token operator">&lt;=</span> <span class="token number">0.12</span> , <span class="token number">0.11</span> , <span class="token number">76.67</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.2</span> <span class="token operator">&lt;=</span> <span class="token number">0.25</span> , <span class="token number">0.225</span> , <span class="token number">86.67</span>, <span class="token number">3</span><span class="token operator">&gt;</span> <span class="token number">0.25</span> <span class="token operator">&lt;=</span> <span class="token number">0.3</span> , <span class="token number">0.275</span> , <span class="token number">90.00</span>, <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token number">0.35</span> <span class="token operator">&lt;=</span> <span class="token number">0.4</span> , <span class="token number">0.375</span> , <span class="token number">96.67</span>, <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token number">0.45</span> <span class="token operator">&lt;=</span> <span class="token number">0.468934</span> , <span class="token number">0.459467</span> , <span class="token number">100.00</span>, <span class="token number">1</span><span class="token comment">## target 50% 0.025</span><span class="token comment">## target 75% 0.11</span><span class="token comment">## target 90% 0.3</span><span class="token comment">## target 99% 0.463254</span><span class="token comment">## target 99.9% 0.468366</span>Sockets used: <span class="token number">20</span> <span class="token punctuation">(</span>for perfect keepalive, would be <span class="token number">3</span><span class="token punctuation">)</span>Jitter: <span class="token boolean">false</span>Code <span class="token number">200</span> <span class="token builtin class-name">:</span> <span class="token number">11</span> <span class="token punctuation">(</span><span class="token number">36.7</span> %<span class="token punctuation">)</span>Code <span class="token number">503</span> <span class="token builtin class-name">:</span> <span class="token number">19</span> <span class="token punctuation">(</span><span class="token number">63.3</span> %<span class="token punctuation">)</span>Response Header Sizes <span class="token builtin class-name">:</span> count <span class="token number">30</span> avg <span class="token number">84.866667</span> +/- <span class="token number">111.5</span> min <span class="token number">0</span> max <span class="token number">232</span> <span class="token function">sum</span> <span class="token number">2546</span>Response Body/Total Sizes <span class="token builtin class-name">:</span> count <span class="token number">30</span> avg <span class="token number">458.96667</span> +/- <span class="token number">286.5</span> min <span class="token number">241</span> max <span class="token number">836</span> <span class="token function">sum</span> <span class="token number">13769</span>All <span class="token keyword">done</span> <span class="token number">30</span> calls <span class="token punctuation">(</span>plus <span class="token number">0</span> warmup<span class="token punctuation">)</span> <span class="token number">91.950</span> ms avg, <span class="token number">27.1</span> qps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在能看到预期的熔断行为，只有36.7%的请求成功，其余的均被熔断器拦截：</p><pre class="line-numbers language-none"><code class="language-none">Code 200 : 11 (36.7 %)Code 503 : 19 (63.3 %)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>查询istio-proxy状态以了解更多熔断详情:</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl exec "$FORTIO_POD" -c istio-proxy -- pilot-agent request GET stats | grep httpbin | grep pending</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.circuit_breakers.default.remaining_pending: <span class="token number">1</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.circuit_breakers.default.rq_pending_open: <span class="token number">0</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.circuit_breakers.high.rq_pending_open: <span class="token number">0</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.upstream_rq_pending_active: <span class="token number">0</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.upstream_rq_pending_failure_eject: <span class="token number">0</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.upstream_rq_pending_overflow: <span class="token number">31</span>cluster.outbound<span class="token operator">|</span><span class="token number">8000</span><span class="token operator">||</span>httpbin.ficc-ofa-dev.svc.cluster.local.upstream_rq_pending_total: <span class="token number">40</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到upstream_rq_pending_overflow值31，这意味着，目前为止已有31个调用被标记为熔断。</p><h3 id="清除环境-5">清除环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl delete destinationrule httpbinkubectl delete <span class="token parameter variable">-f</span> samples/httpbin/sample-client/fortio-deploy.yamlkubectl delete <span class="token parameter variable">-f</span> samples/httpbin/httpbin.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="流量镜像">流量镜像</h2><p>流量镜像，也称为影子流量，是一个以尽可能低的风险为生产带来变化的强大的功能。镜像会将实时流量的副本发送到镜像服务。镜像流量发生在主服务的关键请求路径之外。</p><p>本节中，首先把流量全部路由到测试服务的v1版本。然后，执行规则将一部分流量镜像到v2版本。</p><p>首先部署httpbin的v1和v2两个deployment，过程略。再部署httpbin的service，过程略。此时请求httpbin将会在httpbin服务的两个版本之间进行负载均衡。接下来把所有流量都路由到v1版本。</p><ol><li>创建一个默认路由规则，将所有流量路由到服务的v1版本：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl apply -f - &lt;&lt;EOF</span>apiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata:  name: httpbinspec:  hosts:    - httpbin  http:  - route:    - destination:        host: httpbin        subset: v1      weight: <span class="token number">100</span>---apiVersion: networking.istio.io/v1alpha3kind: DestinationRulemetadata:  name: httpbinspec:  host: httpbin  subsets:  - name: v1    labels:      version: v1  - name: v2    labels:      version: v2EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>现在所有流量都转到httpbin:v 服务，并向此服务发送请求：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">SLEEP_POD</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get pod <span class="token parameter variable">-l</span> <span class="token assign-left variable">app</span><span class="token operator">=</span>sleep <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token punctuation">{</span>.items<span class="token punctuation">..</span>metadata.name<span class="token punctuation">}</span><span class="token variable">)</span></span>kubectl <span class="token builtin class-name">exec</span> <span class="token string">"<span class="token variable">${SLEEP_POD}</span>"</span> <span class="token parameter variable">-c</span> <span class="token function">sleep</span> -- <span class="token function">curl</span> <span class="token parameter variable">-sS</span> http://httpbin:8000/headers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>分别查看httpbin Pod的v1和v2两个版本的日志。您可以看到v1版本的访问日志条目，而v2版本没有日志</li></ol><h3 id="镜像流量到v2">镜像流量到v2</h3><ol><li>改变流量规则将流量镜像到v2：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl apply -f - &lt;&lt;EOF</span>apiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata:  name: httpbinspec:  hosts:    - httpbin  http:  - route:    - destination:        host: httpbin        subset: v1      weight: <span class="token number">100</span>    mirror:      host: httpbin      subset: v2    mirrorPercentage:      value: <span class="token number">100.0</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个路由规则发送100%流量到v1版本。<code>mirrorPercentage</code>表示将100%的相同流量镜像（即发送）到httpbin:v2服务。当流量被镜像时，请求将发送到镜像服务中，并在headers中的Host/Authority属性值上追加<code>-shadow</code>。 例如<code>cluster-1</code>变为<code>cluster-1-shadow</code>。<br>此外，重点注意这些被镜像的流量是『即发即弃』的，就是说镜像请求的响应会被丢弃。<br>可以使用<code>mirrorPercentage</code>属性下的<code>value</code>字段来设置镜像流量的百分比，而不是镜像所有请求。如果没有这个属性，将镜像所有流量。</p><ol start="2"><li>发送流量：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token string">"<span class="token variable">${SLEEP_POD}</span>"</span> <span class="token parameter variable">-c</span> <span class="token function">sleep</span> -- <span class="token function">curl</span> <span class="token parameter variable">-sS</span> http://httpbin:8000/headers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>现在就可以看到v1和v2版本中都有了访问日志。v2版本中的访问日志就是由镜像流量产生的，这些请求的实际目标是v1版本。</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 微服务 </tag>
            
            <tag> ServiceMesh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S入门系列之六：集群证书过期续签</title>
      <link href="/blog/posts/3232336614/"/>
      <url>/blog/posts/3232336614/</url>
      
        <content type="html"><![CDATA[<h2 id="证书期限">证书期限</h2><p>使用kubeadm安装的集群，一般根证书CA的期限是十年，其余组件，包括etcd、apiserver、controller-manager的期限需要一年一续签。</p><p>查看证书是否到期的方法：</p><ol><li>使用kubectl访问集群，报错kube-apiserver不可达</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubectl get nodes</span>The connection to the server <span class="token number">192.168</span>.126.100:6443 was refused - did you specify the right <span class="token function">host</span> or port?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>下一步，在master节点发现kubelet无法启动，报错证书过期</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## systemctl restart kubelet.service</span><span class="token comment">## journalctl -xefu kubelet</span><span class="token punctuation">..</span>. <span class="token punctuation">..</span>.-- The start-up result is RESULT.Apr <span class="token number">17</span> <span class="token number">14</span>:56:15 k8s-master.lab.example.com kubelet<span class="token punctuation">[</span><span class="token number">7434</span><span class="token punctuation">]</span>: I0417 <span class="token number">14</span>:56:15.109672    <span class="token number">7434</span> server.go:446<span class="token punctuation">]</span> <span class="token string">"Kubelet version"</span> <span class="token assign-left variable">kubeletVersion</span><span class="token operator">=</span><span class="token string">"v1.23.0"</span>Apr <span class="token number">17</span> <span class="token number">14</span>:56:15 k8s-master.lab.example.com kubelet<span class="token punctuation">[</span><span class="token number">7434</span><span class="token punctuation">]</span>: I0417 <span class="token number">14</span>:56:15.110553    <span class="token number">7434</span> server.go:874<span class="token punctuation">]</span> <span class="token string">"Client rotation is on, will bootstrap in background"</span>Apr <span class="token number">17</span> <span class="token number">14</span>:56:15 k8s-master.lab.example.com kubelet<span class="token punctuation">[</span><span class="token number">7434</span><span class="token punctuation">]</span>: E0417 <span class="token number">14</span>:56:15.120625    <span class="token number">7434</span> bootstrap.go:265<span class="token punctuation">]</span> part of the existing bootstrap client certificate <span class="token keyword">in</span> /etc/kubernetes/kubelet.conf is expired: <span class="token number">2023</span>-02-12 <span class="token number">18</span>:37:21 +0000 UTCApr <span class="token number">17</span> <span class="token number">14</span>:56:15 k8s-master.lab.example.com kubelet<span class="token punctuation">[</span><span class="token number">7434</span><span class="token punctuation">]</span>: E0417 <span class="token number">14</span>:56:15.120730    <span class="token number">7434</span> server.go:302<span class="token punctuation">]</span> <span class="token string">"Failed to run kubelet"</span> <span class="token assign-left variable">err</span><span class="token operator">=</span><span class="token string">"failed to run Kubelet: unable to load bootstrap kubeconfig: stat /etc/kubernetes/bootstrap-kubelet.conf: no such file or directory"</span>Apr <span class="token number">17</span> <span class="token number">14</span>:56:15 k8s-master.lab.example.com systemd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: kubelet.service: Main process exited, <span class="token assign-left variable">code</span><span class="token operator">=</span>exited, <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token number">1</span>/FAILUREApr <span class="token number">17</span> <span class="token number">14</span>:56:15 k8s-master.lab.example.com systemd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: kubelet.service: Failed with result <span class="token string">'exit-code'</span><span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上由于kubelet 在2023-02-12后，证书过期，无法启动。</p><ol start="3"><li>在master节点使用kubeadm查看管理的证书到期期限</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubeadm certs check-expiration </span><span class="token punctuation">[</span>check-expiration<span class="token punctuation">]</span> Reading configuration from the cluster<span class="token punctuation">..</span>.<span class="token punctuation">[</span>check-expiration<span class="token punctuation">]</span> FYI: You can <span class="token function">look</span> at this config <span class="token function">file</span> with <span class="token string">'kubectl -n kube-system get cm kubeadm-config -o yaml'</span><span class="token punctuation">[</span>check-expiration<span class="token punctuation">]</span> Error reading configuration from the Cluster. Falling back to default configurationCERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGEDadmin.conf                 Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>                               no      apiserver                  Apr 09, <span class="token number">2023</span> 06:53 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       ca                      no      apiserver-etcd-client      Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       etcd-ca                 no      apiserver-kubelet-client   Apr 09, <span class="token number">2023</span> 06:53 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       ca                      no      controller-manager.conf    Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>                               no      etcd-healthcheck-client    Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       etcd-ca                 no      etcd-peer                  Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       etcd-ca                 no      etcd-server                Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       etcd-ca                 no      front-proxy-client         Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>       front-proxy-ca          no      scheduler.conf             Apr 09, <span class="token number">2023</span> 06:54 UTC   <span class="token operator">&lt;</span>invalid<span class="token operator">&gt;</span>                               no      CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGEDca                      Apr 06, <span class="token number">2032</span> 06:53 UTC   8y              no      etcd-ca                 Apr 06, <span class="token number">2032</span> 06:54 UTC   8y              no      front-proxy-ca          Apr 06, <span class="token number">2032</span> 06:54 UTC   8y              no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="续签证书">续签证书</h2><ol><li>master节点续签由kubeadm管理的证书</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## kubeadm certs renew all    //续签组件证书，但不包含kubelet</span><span class="token punctuation">[</span>renew<span class="token punctuation">]</span> Reading configuration from the cluster<span class="token punctuation">..</span>.<span class="token punctuation">[</span>renew<span class="token punctuation">]</span> FYI: You can <span class="token function">look</span> at this config <span class="token function">file</span> with <span class="token string">'kubectl -n kube-system get cm kubeadm-config -o yaml'</span><span class="token punctuation">[</span>renew<span class="token punctuation">]</span> Error reading configuration from the Cluster. Falling back to default configurationcertificate embedded <span class="token keyword">in</span> the kubeconfig <span class="token function">file</span> <span class="token keyword">for</span> the admin to use and <span class="token keyword">for</span> kubeadm itself renewedcertificate <span class="token keyword">for</span> serving the Kubernetes API renewedcertificate the apiserver uses to access etcd renewedcertificate <span class="token keyword">for</span> the API server to connect to kubelet renewedcertificate embedded <span class="token keyword">in</span> the kubeconfig <span class="token function">file</span> <span class="token keyword">for</span> the controller manager to use renewedcertificate <span class="token keyword">for</span> liveness probes to healthcheck etcd renewedcertificate <span class="token keyword">for</span> etcd nodes to communicate with each other renewedcertificate <span class="token keyword">for</span> serving etcd renewedcertificate <span class="token keyword">for</span> the front proxy client renewedcertificate embedded <span class="token keyword">in</span> the kubeconfig <span class="token function">file</span> <span class="token keyword">for</span> the scheduler manager to use renewedDone renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>再次启动kubelet</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## systemctl restart kubelet</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时发现kubelet仍然无法启动</p><ol start="3"><li>在master节点，把新签发的管理员凭证/etc/kubernetes/admin.conf重新分发给客户端节。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## scp /etc/kubernetes/admin.conf student@client:~/.kube/config</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>检查各成员节点kubelet是否开启证书轮换，正常kubelet证书自动轮换在Kubernetes v1.19成为stable。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## NODES='k8s-master k8s-node1 k8s-node2'</span><span class="token comment">## for x in $NODES;do ssh $x 'hostname &amp;&amp; sudo grep rotateCertificates /var/lib/kubelet/config.yaml';done</span>k8s-master.lab.example.comrotateCertificates: <span class="token boolean">true</span>k8s-node1.lab.example.comrotateCertificates: <span class="token boolean">true</span>k8s-node2.lab.example.comrotateCertificates: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>关闭节点ntp时间同步，把节点本地时钟调整为过期之前，让kubelet能够启动后自动轮换证书。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## NODES='k8s-master k8s-node1 k8s-node2'</span><span class="token comment">## for x in $NODES;do ssh $x sudo timedatectl set-ntp false;done</span><span class="token comment">## for x in $NODES;do ssh $x sudo timedatectl set-time 2023-01-01;done   </span><span class="token comment">## for x in $NODES;do ssh $x sudo systemctl restart kubelet.service;done </span><span class="token comment">## kubectl get nodes// 重启各节点kubelet后，发现集群启动</span>NAME STATUSROLESAGE  VERSIONk8s-master.lab.example.com Readycontrol-plane,master322d  v1.23.0k8s-node1.lab.example.com Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>322d  v1.23.0k8s-node2.lab.example.com Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>322d  v1.23.0// 校验各节点kubelet证书过期时间<span class="token comment">## for x in $NODES;do ssh $x "hostname &amp;&amp; sudo openssl x509 -in /var/lib/kubelet/pki/kubelet-client-current.pem -text -noout | grep -A 2 Validity";done</span>k8s-master.lab.example.com        Validity            Not Before: Dec <span class="token number">31</span> <span class="token number">23</span>:55:51 <span class="token number">2022</span> GMT            Not After <span class="token builtin class-name">:</span> Dec <span class="token number">31</span> <span class="token number">23</span>:55:51 <span class="token number">2023</span> GMTk8s-node1.lab.example.com        Validity            Not Before: Dec <span class="token number">31</span> <span class="token number">23</span>:55:51 <span class="token number">2022</span> GMT            Not After <span class="token builtin class-name">:</span> Dec <span class="token number">31</span> <span class="token number">23</span>:55:51 <span class="token number">2023</span> GMTk8s-node2.lab.example.com        Validity            Not Before: Dec <span class="token number">31</span> <span class="token number">23</span>:55:51 <span class="token number">2022</span> GMT            Not After <span class="token builtin class-name">:</span> Dec <span class="token number">31</span> <span class="token number">23</span>:55:51 <span class="token number">2023</span> GMT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>开启各节点时间服务器自动同步</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## for x in $NODES;do ssh $x sudo timedatectl set-ntp true;done</span><span class="token comment">## for x in $NODES;do ssh $x sudo timedatectl;done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国庆甘南小环线四天三晚包车游</title>
      <link href="/blog/posts/263713905/"/>
      <url>/blog/posts/263713905/</url>
      
        <content type="html"><![CDATA[<p>这个中秋国庆8天假，提前一个月计划了甘南小环线，飞猪购买了四天三晚的套餐，包车（带司机）+住宿。</p><h1>行程如下</h1><p>D1 兰州市区-拉卜楞寺-甘加秘境-八角城-白石崖溶洞-夏河县，当晚入住夏河县城<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F1.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F2.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F3.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F4.jpg" alt=""></p><p>D2 桑科草原-郭莽湿地-郎木寺-纳摩大峡谷-黄河九曲第一湾-唐克镇，当晚入住若尔盖县城<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F5.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F6.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F7.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F8.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F9.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2Fgannan_banner.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F10.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F11.jpg" alt=""></p><p>D3 若尔盖草原-花湖-扎尕那，当晚入住扎尕那景区<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F12.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F13.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F14.jpg" alt=""></p><p>D4 扎尕那-米拉日巴佛阁-兰州<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F15.jpg" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fganna%2F16.jpg" alt=""></p><h1>游玩指南</h1><ol><li>小环线可以玩四天或者五天，有体力的可以自己驾车自由行，像我们为了省事的就购买一个包车套餐，旅行社出车出司机，并且负责给订酒店。</li><li>一般都是从兰州出发，最后回到兰州。兰州墙裂推荐兰州老街的凡里而美酒店。</li><li>按行程如果要看黄河日落一定要在日落时间提前至少半小时到景区，因为到观景台去晚了扶梯就关了，自己走上去要4公里。</li><li>行程中走的各种国道随时会有牦牛番羊横穿公路，从左边的草原转场到右边的草原，注意避让。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 国庆小长假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业旅行新加坡4天+马来西亚5日游攻略</title>
      <link href="/blog/posts/3595743519/"/>
      <url>/blog/posts/3595743519/</url>
      
        <content type="html"><![CDATA[<h1>准备篇</h1><ol><li>签证：淘宝办理，最好提前一个月以上办</li><li>机票：先在携程看航班，再去航司APP比价</li><li>酒店：先看携程，再比价飞猪、马蜂窝</li><li>上网卡：淘宝买上网卡，我们买的是每天2GB的4G流量，超过2GB降为3G，买了10天的。国内的号码开通国际漫游，用上网卡上网、用国内号接打国际漫游电话。儿童手表也开通漫游，关闭数据，只打电话不上网了</li><li>景点：携程、飞猪上面比价</li><li>兑换外币：500新元+1000马币</li><li>出行：新加坡地铁大人可直接刷VISA/MASTERCARD，小孩可办理免费卡。新加坡和马来西亚都可以用grab叫车（东南亚的滴滴），建议提前装好grab并绑定信用卡支付。地图只用google，绝不用百度高德。</li><li>信用卡：VISA/MASTERCARD/JCB，一定要是芯片卡+NFC功能的！磁条卡不好使！</li><li>装备：防晒、浮潜装备(也可以到那租)、拖鞋、儿童手表、药品、现金、护照、所有订单电子版或截图、折叠衣架、插座转换器、google地图、google翻译、grab、新加坡环球影城app、上网卡、美颜手机</li></ol><h1>行程篇</h1><p>新加坡4天+马来西亚5天</p><h2 id="新加坡">新加坡</h2><table><thead><tr><th>航程</th><th>航班</th><th>时间</th></tr></thead><tbody><tr><td>北京首都机场T3 - 新加坡樟宜T1</td><td>国航CA975</td><td>00:25 - 06:30</td></tr></tbody></table><p>落地时间比较早，可以先逛一逛世界排名第一的新加坡机场，坐个小火车、看看室内瀑布、和钢铁侠拍个照、中午12:30有大滑梯。</p><p>在新加坡住3晚，第四天中午飞机前往马来西亚。</p><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F2.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F5.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F6.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F7.png" alt=""></p><h2 id="马来西亚">马来西亚</h2><p>马来西亚主要是玩网红度假村卡帕莱水屋，但来回水屋交通不便，为避免赶时间，我们在水屋前后都在亚庇中转一个晚上。</p><table><thead><tr><th>航程</th><th>航班</th><th>时间</th></tr></thead><tbody><tr><td>新加坡樟宜T4 - 哥打京那巴鲁T1（亚庇机场）</td><td>马来西亚亚航AK1794</td><td>12:10 - 14:45</td></tr></tbody></table><p>在亚庇住一晚，可以逛逛丹绒亚路海滩，海滩边有夜市。第二天一早赶07:00飞机前往仙本那的斗湖机场。</p><table><thead><tr><th>航程</th><th>航班</th><th>时间</th></tr></thead><tbody><tr><td>哥打京那巴鲁T1 - 斗湖</td><td>马来西亚飞萤航空FY2520</td><td>07:00 - 07:50</td></tr></tbody></table><p>落地后乘坐水屋提供的大巴，坐大约1小时到仙本那码头，再换乘快艇坐40min到卡帕莱水屋（每天只有上午10:00和下午13:30两趟快艇）。</p><p>在水屋住4天3晚，吃喝玩乐都在水屋（每天11:00和下午13:30快艇离开酒店），水屋的第四天中午退房，坐快艇返回到码头，再坐大巴到机场。</p><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F3.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F4.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F8.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Ftravel%2Fgraduation_trip%2F9.png" alt=""></p><table><thead><tr><th>航程</th><th>航班</th><th>时间</th></tr></thead><tbody><tr><td>斗湖 - 哥打京那巴鲁T1</td><td>马来西亚亚航AK6263</td><td>17:50 - 18:40</td></tr></tbody></table><p>在亚庇再住一晚，第二天从亚庇直接回北京。</p><table><thead><tr><th>航程</th><th>航班</th><th>时间</th></tr></thead><tbody><tr><td>哥打京那巴鲁T1 - 北京大兴</td><td>马来西亚亚航AK1560</td><td>18:00 - 23:15</td></tr></tbody></table><h1>酒店篇</h1><h2 id="新加坡-2">新加坡</h2><p><strong>新加坡圣淘沙安曼纳圣殿度假酒店(Amara Sanctuary Resort Sentosa)</strong></p><p>圣淘沙岛是新加坡南端的一个旅游岛，我们就直接住在岛上的安曼纳酒店，一个老牌的酒店，占地面积很大，交通便捷，门口就是免费的环岛bus，酒店自己也有摆渡车可以到捷运站。酒店花园里有孔雀、鹦鹉。酒店除了自助餐，周五六日晚上还可以点BBQ。酒店的mini泳池也很不错。</p><h2 id="马来西亚-2">马来西亚</h2><p>亚庇中转我们住的酒店是<br><strong>哥打京那巴鲁婆罗洲酒店&amp;机场酒店(Pan Borneo Hotel Kota Kinabalu)</strong><br>和<br><strong>亚庇凯城酒店(Promenade Hotel Kota Kinabalu)</strong><br>分别住了一晚。</p><p><strong>卡帕莱水屋</strong>就不用说了，这次来马来西亚主要就是为了它，一个完全建在大海中央珊瑚礁上的酒店，房间都是高脚屋，脚下的大海里各种鱼、大海龟、海星来回游动。可以浮潜、深浅，有天然沙滩、人造沙滩、玻璃船，可以看日出、日落。一日三餐都是自助。每个房间都有独立的阳台、躺椅、有晾衣绳可以洗衣服。整个四天吃喝玩乐都在水屋。</p><h1>景点篇</h1><p>本次行程在新加坡玩了海洋馆、时光之翼、滨海湾花园云雾森林+阿凡达体验、摩天轮、鱼尾狮（同行的另外两家去了）、环球影城，门票基本都在携程+飞猪提前买好。</p><p>亚庇玩了丹绒亚路海滩、清真寺（可以租穆斯林衣服拍照）、加雅街礼拜天市场（同伴买了很多小饰品小玩意儿）。</p><p>最后一晚在大众点评搜了一家双天海鲜楼，众人万分满意，老板是当地人但会说中国话，我们吃了最满意的一顿海鲜大餐。</p><h1>总结篇</h1><p>因为是7家同学相约毕业旅行，同行的有老有小，去了新马两个国家，行程总体来说不算很赶，属于休闲游类型。如果是奔着卡帕莱水屋去的话，可以从北京直飞亚庇，估算好时间再去仙本那码头坐快艇到水屋。</p><p>新加坡当地人主要都说英语，有些人会说中文。服务员印度人比较多，操着一口咖喱味的英语很难听懂。马来西亚说中文的人更多一点，沟通连比划带猜够用了~</p><p>总体来说是一次非常难忘而美好的旅行~</p>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 出境游 </tag>
            
            <tag> 大二班毕业季 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S二次开发系列之二：自定义开发CRD+Operator</title>
      <link href="/blog/posts/1440977903/"/>
      <url>/blog/posts/1440977903/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p>本文篇幅较长，将手把手教你如何自定义开发一个自己的Operator。本文适合于已经对各种云原生软件Operator安装非常熟悉（例如prometheus-operator等），一时技痒想自己手撸一个Operator；或者是在实际工作中因业务需要自己定制一个Operator。本文不适合新手，如果你还不知道Operator是干啥的，建议先补补课再来。</p></div><h2 id="前言">前言</h2><p>当前很多云原生软件都会提供一种叫做Operator的安装方式，比如prometheus-operator、istio-operator、awx-operator、rook-operator等等。为什么会出现Operator？什么又是Operator？随着我们越发深入的使用Kubernetes，就会发现K8S中内置的对象，比如<code>Deployment</code>、<code>StatefulSet</code>已经不能满足我们的需求。我们希望在K8S定义一些自己的对象，一是可以通过<code>kube-apiserver</code>提供统一的访问入口，二是可以像其他内置对象一样，通过<code>kubectl</code>命令管理这些自定义的对象。</p><p>Kubernetes 中提供了这种自定义对象的方式，其中之一就是 CRD。</p><h2 id="CRD">CRD</h2><p>CRD（CustomResourceDefinitions）是Operator的基础，讲Operator之前必先讲CRD。</p><p>CustomResourceDefinition API资源允许我们定义定制资源。 定义CRD对象的操作会使用你所设定的名字和模式定义（Schema）创建一个新的定制资源，Kubernetes API负责为我们的定制资源提供存储和访问服务。K8S官网给出了下面的一个例子：</p><div class="note success no-icon"><p><a href="https://kubernetes.io/zh-cn/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">https://kubernetes.io/zh-cn/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/</a></p></div><pre class="line-numbers language-yaml" data-language="yaml"><div class="caption"><span>crontabs.crd.yaml</span></div><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token comment">## 名字必需与下面的 spec 字段匹配，并且格式为 '&lt;名称的复数形式&gt;.&lt;组名&gt;'</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> crontabs.stable.example.com<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">## 组名称，用于 REST API: /apis/&lt;组&gt;/&lt;版本&gt;</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> stable.example.com  <span class="token comment">## 列举此 CustomResourceDefinition 所支持的版本</span>  <span class="token key atrule">versions</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1      <span class="token comment">## 每个版本都可以通过 served 标志来独立启用或禁止</span>      <span class="token key atrule">served</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token comment">## 其中一个且只有一个版本必需被标记为存储版本</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">schema</span><span class="token punctuation">:</span>        <span class="token key atrule">openAPIV3Schema</span><span class="token punctuation">:</span>          <span class="token key atrule">type</span><span class="token punctuation">:</span> object          <span class="token key atrule">properties</span><span class="token punctuation">:</span>            <span class="token key atrule">spec</span><span class="token punctuation">:</span>              <span class="token key atrule">type</span><span class="token punctuation">:</span> object              <span class="token key atrule">properties</span><span class="token punctuation">:</span>                <span class="token key atrule">cronSpec</span><span class="token punctuation">:</span>                  <span class="token key atrule">type</span><span class="token punctuation">:</span> string                <span class="token key atrule">image</span><span class="token punctuation">:</span>                  <span class="token key atrule">type</span><span class="token punctuation">:</span> string                <span class="token key atrule">replicas</span><span class="token punctuation">:</span>                  <span class="token key atrule">type</span><span class="token punctuation">:</span> integer  <span class="token comment">## 可以是 Namespaced 或 Cluster</span>  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token comment">## 名称的复数形式，用于 URL：/apis/&lt;组&gt;/&lt;版本&gt;/&lt;名称的复数形式&gt;</span>    <span class="token key atrule">plural</span><span class="token punctuation">:</span> crontabs    <span class="token comment">## 名称的单数形式，作为命令行使用时和显示时的别名</span>    <span class="token key atrule">singular</span><span class="token punctuation">:</span> crontab    <span class="token comment">## kind 通常是单数形式的驼峰命名（CamelCased）形式。你的资源清单会使用这一形式。</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> CronTab    <span class="token comment">## shortNames 允许你在命令行使用较短的字符串来匹配资源</span>    <span class="token key atrule">shortNames</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ct<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们使用<code>kubectl apply -f crontabs.crd.yaml</code>把CRD提交到K8S，一个类型为<code>CronTab</code>的对象就在kube-apiserver中注册好了，我们可以通过如下的REST接口访问它：<code>/apis/stable.example.com/v1/namespaces/ns1/crontabs/</code>，这种接口跟Kubernetes内置的其他对象的接口风格是一模一样的。</p><p>在创建了CustomResourceDefinition对象之后，我们可以接着创建CronTab对象实例：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> stable.example.com/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CronTab<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>new<span class="token punctuation">-</span>cron<span class="token punctuation">-</span>object<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">cronSpec</span><span class="token punctuation">:</span> <span class="token string">"* * * * */5"</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>awesome<span class="token punctuation">-</span>cron<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以使用kubectl来管理CronTab对象了。例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get <span class="token function">crontab</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的资源名是大小写不敏感的，我们可以使用复数形式<code>kubectl get crontabs</code>，也可以使用缩写<code>kubectl get ct</code>。和原生内置的API对象一样，这些CRD不仅可以通过kubectl来创建、查看、修改、删除，还可以给其配置RBAC权限。</p><h2 id="什么是Kubernetes-Operator">什么是Kubernetes Operator</h2><p>了解了CRD以后，再来看看什么是Kubernetes Operator。Kubernetes通过声明式API来定义对象，其描述的是对象期望的状态（比如replicas:2表示期望POD的副本数是2），而K8S的<code>控制器</code>负责实时查看对应对象的状态，确保对象最终达到定义的期望状态。这也叫做K8S的控制器模式。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fcustom%2F2.png" alt=""><br><code>kube-controller-manager</code>就是由这样一组控制器组成的。</p><p>当我们创建好CRD以后，这只是自定义对象的期望状态，还没有任何控制器来控制它的创建、删除、修改、查看等等行为，所以我们还需要编写一个控制器，即<code>Operator</code>，来完成控制逻辑。</p><h2 id="Kubernetes-Operator是如何工作的">Kubernetes Operator是如何工作的</h2><p><code>Operator</code>工作的时候采用上述控制器模式，会持续的观察Kubernetes中自定义的对象，即<code>CR（Custom Resource）</code>。</p><div class="mermaid">  graph LRA[[user]] --modifications--&gt; B{Custom Resource}B --tracking--&gt; C(Operator)C --change events--&gt; BB --in case of error--&gt;BC ---&gt; D{Current State}</div><p>Operator会持续跟踪这些CR的变化事件，比如ADD、UPDATE、DELETE，然后采取一系列操作，使其达到期望的状态。</p><h2 id="构建自己的Kubernetes-Operator">构建自己的Kubernetes Operator</h2><p>社区目前有些成熟的脚手架工具用于构建自己的Operator，常见的有三种：</p><ul><li><a href="https://github.com/kubernetes-sigs/kubebuilder">Kubebuilder</a></li><li><a href="https://github.com/operator-framework/operator-sdk">Operator-SDK</a></li><li><a href="https://github.com/kudobuilder/kudo">KUDO</a></li></ul><p>本文将使用Operator-SDK来构建自己的Operator。</p><h3 id="安装Operator-SDK">安装Operator-SDK</h3><p>在下面的地址选择合适的二进制包下载：<br><a href="https://github.com/operator-framework/operator-sdk/releases">https://github.com/operator-framework/operator-sdk/releases</a></p><p>把二进制文件operator-sdk放到PATH里，使其全局可用。</p><h3 id="使用Go创建Operator">使用Go创建Operator</h3><p>Operator SDK 提供以下工作流来开发一个新的 Operator：</p><div class="mermaid">  graph TDA(使用operator-sdk工具创建一个新的Operator项目) --&gt; B(使用operator-sdk工具创建一个新的api)B --&gt; C(编辑工具自动生成的CRD, 添加自己需要的字段)C --&gt; D(在controller部分编辑协调Reconcile逻辑)D --&gt; E(使用operator-sdk工具构建并生成部署清单文件)E --&gt; F{选择部署方式}F --&gt; G(容器外部署)F --&gt; H(容器集群内部署)H --&gt; I(打包成Docker Image并上传镜像仓库, 在集群内以deployment方式部署)</div><h3 id="具体步骤">具体步骤</h3><p>接下来我们将自定义开发一个具有如下功能的Operator：</p><ul><li>定义一个CRD叫DemoApplication</li><li>当我提交一个DemoApplication的CR(metadata.name=demo)时<ul><li>如果名为demo的deployment不存在，则创建它</li><li>如果CR的字段里包含Service，则检查名为demo的service是否存在，如果不存在则创建它，并且关联上一步的deployment</li><li>如果CR的字段里包含PersistentVolumeClaims，则检查CR指定的PVC是否已存在，如果不存在则创建它</li><li>如果CR的字段里包含Ingress，则检查CR指定的Ingress是否存在<ul><li>如果Ingress不存在则创建它</li><li>如果Ingress已存在则把CR里指定的Rule添加到已有的Ingress的rules后面</li></ul></li></ul></li><li>当我删除一个DemoApplication的CR时<ul><li>如果名为demo的deployment已存在，则删除它</li><li>如果名为demo的service已存在，则删除它</li></ul></li></ul><p>下面正式开撸</p><h4 id="创建工程">创建工程</h4><p>用operator-sdk命令行工具创建一个工程叫<code>demo-operator</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> demo-operator <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> demo-operatoroperator-sdk init <span class="token parameter variable">--domain</span> example.com <span class="token parameter variable">--repo</span> demo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>–domain指定了自定义的CRD的api-versions里的域名后缀，例如一个istio的<code>networking.istio.io/v1alpha3</code>，其中<code>istio.io</code>即domain，<code>networking</code>是下文要创建的api的一个参数group，<code>v1alpha3</code>是api的version。–repo指定了go工程的mod名，和go mod init xxx是一个意思。</p><p>执行完以后查看工程目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tree<span class="token builtin class-name">.</span>├── Dockerfile├── Makefile├── PROJECT├── README.md├── config│   ├── default│   │   ├── kustomization.yaml│   │   ├── manager_auth_proxy_patch.yaml│   │   └── manager_config_patch.yaml│   ├── manager│   │   ├── kustomization.yaml│   │   └── manager.yaml│   ├── manifests│   │   └── kustomization.yaml│   ├── prometheus│   │   ├── kustomization.yaml│   │   └── monitor.yaml│   ├── rbac│   │   ├── auth_proxy_client_clusterrole.yaml│   │   ├── auth_proxy_role.yaml│   │   ├── auth_proxy_role_binding.yaml│   │   ├── auth_proxy_service.yaml│   │   ├── kustomization.yaml│   │   ├── leader_election_role.yaml│   │   ├── leader_election_role_binding.yaml│   │   ├── role_binding.yaml│   │   └── service_account.yaml│   └── scorecard│       ├── bases│       │   └── config.yaml│       ├── kustomization.yaml│       └── patches│           ├── basic.config.yaml│           └── olm.config.yaml├── go.mod├── go.sum├── hack│   └── boilerplate.go.txt└── main.go<span class="token number">10</span> directories, <span class="token number">29</span> files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看自动创建好的main.go</p><pre class="line-numbers language-GO" data-language="GO"><code class="language-GO">func main() {var metricsAddr stringvar enableLeaderElection boolvar probeAddr stringflag.StringVar(&amp;metricsAddr, "metrics-bind-address", ":8080", "The address the metric endpoint binds to.")flag.StringVar(&amp;probeAddr, "health-probe-bind-address", ":8081", "The address the probe endpoint binds to.")flag.BoolVar(&amp;enableLeaderElection, "leader-elect", false,"Enable leader election for controller manager. "+"Enabling this will ensure there is only one active controller manager.")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main函数里定义了程序监听的端口（默认8080）、metrics和健康检查的端口（默认8081）。并初始化创建了一个Manager：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">mgr<span class="token punctuation">,</span> err <span class="token operator">:=</span> ctrl<span class="token punctuation">.</span><span class="token function">NewManager</span><span class="token punctuation">(</span>ctrl<span class="token punctuation">.</span><span class="token function">GetConfigOrDie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ctrl<span class="token punctuation">.</span>Options<span class="token punctuation">{</span>  Scheme<span class="token punctuation">:</span>                 scheme<span class="token punctuation">,</span>  MetricsBindAddress<span class="token punctuation">:</span>     metricsAddr<span class="token punctuation">,</span>  Port<span class="token punctuation">:</span>                   <span class="token number">9443</span><span class="token punctuation">,</span>  HealthProbeBindAddress<span class="token punctuation">:</span> probeAddr<span class="token punctuation">,</span>  LeaderElection<span class="token punctuation">:</span>         enableLeaderElection<span class="token punctuation">,</span>  LeaderElectionID<span class="token punctuation">:</span>       <span class="token string">"aefd3536.example.com"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这时候还没有创建任何api，可以试着运行一下程序：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ go run main.go<span class="token number">2023</span>-12-07T17:12:55+08:00       INFO    controller-runtime.metrics      Metrics server is starting to listen    <span class="token punctuation">{</span><span class="token string">"addr"</span><span class="token builtin class-name">:</span> <span class="token string">":8080"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-07T17:12:55+08:00       INFO    setup   starting manager<span class="token number">2023</span>-12-07T17:12:55+08:00       INFO    Starting server <span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span> <span class="token string">"/metrics"</span>, <span class="token string">"kind"</span><span class="token builtin class-name">:</span> <span class="token string">"metrics"</span>, <span class="token string">"addr"</span><span class="token builtin class-name">:</span> <span class="token string">"[::]:8080"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-07T17:12:55+08:00       INFO    Starting server <span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span> <span class="token string">"health probe"</span>, <span class="token string">"addr"</span><span class="token builtin class-name">:</span> <span class="token string">"[::]:8081"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问一下healthz：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> localhost:8081/healthz<span class="token punctuation">;</span><span class="token builtin class-name">echo</span>ok<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>访问一下readyz</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> localhost:8081/readyz<span class="token punctuation">;</span><span class="token builtin class-name">echo</span>ok<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="创建API及Controller">创建API及Controller</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ operator-sdk create api <span class="token parameter variable">--group</span> application <span class="token parameter variable">--version</span> v1 <span class="token parameter variable">--kind</span> DemoApplication <span class="token parameter variable">--resource</span> <span class="token parameter variable">--controller</span>Writing kustomize manifests <span class="token keyword">for</span> you to edit<span class="token punctuation">..</span>.Writing scaffold <span class="token keyword">for</span> you to edit<span class="token punctuation">..</span>.api/v1/demoapplication_types.gocontrollers/demoapplication_controller.goUpdate dependencies:$ go mod tidyRunning make:$ <span class="token function">make</span> generate<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/student/operator/demo-operator/bin<span class="token builtin class-name">test</span> <span class="token parameter variable">-s</span> /home/student/operator/demo-operator/bin/controller-gen <span class="token operator">&amp;&amp;</span> /home/student/operator/demo-operator/bin/controller-gen <span class="token parameter variable">--version</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-q</span> v0.11.1 <span class="token operator">||</span> <span class="token punctuation">\</span><span class="token assign-left variable">GOBIN</span><span class="token operator">=</span>/home/student/operator/demo-operator/bin go <span class="token function">install</span> sigs.k8s.io/controller-tools/cmd/controller-gen@v0.11.1/home/student/operator/demo-operator/bin/controller-gen object:headerFile<span class="token operator">=</span><span class="token string">"hack/boilerplate.go.txt"</span> <span class="token assign-left variable">paths</span><span class="token operator">=</span><span class="token string">"./..."</span>Next: implement your new API and generate the manifests <span class="token punctuation">(</span>e.g. CRDs,CRs<span class="token punctuation">)</span> with:$ <span class="token function">make</span> manifests<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>–group指定了组为<code>application</code>，–version指定了版本为<code>v1</code>，于是和上一步的–domain组合起来以后，我们在api-versions里看到的自定义的CRD就是<code>application.example.com/v1</code></p><p>上述的操作将会生成DemoApplication resource API文件，其文件位于api/v1/demoapplication_types.go及控制器文件位于controllers/demoapplication_controller.go。</p><p>这时候再查看工程目录，发现多了api/v1目录，config下面多了crd目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ tree <span class="token parameter variable">-L</span> <span class="token number">2</span><span class="token builtin class-name">.</span>├── Dockerfile├── Makefile├── PROJECT├── README.md├── api│   └── v1├── bin│   └── controller-gen├── config│   ├── crd│   ├── default│   ├── manager│   ├── manifests│   ├── prometheus│   ├── rbac│   ├── samples│   └── scorecard├── controllers│   ├── demoapplication_controller.go│   └── suite_test.go├── go.mod├── go.sum├── hack│   └── boilerplate.go.txt└── main.go<span class="token number">14</span> directories, <span class="token number">11</span> files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note success no-icon"><p>注意这里只介绍了单组API的使用，如果我们想支持多组 API，请参考<a href="https://book.kubebuilder.io/migration/multi-group.html">Single Group to Multi-Group</a>文档。</p></div><div class="note success no-icon"><p>有关Kubernetes API和group-version-kind模型的深入解读，我们可以查看这些<a href="https://book.kubebuilder.io/cronjob-tutorial/gvks.html">kubebuilder docs</a>。<br>一般来说，建议让一个控制器负责管理工程的每个API，以遵循<a href="https://github.com/kubernetes-sigs/controller-runtime">controller-runtime</a>设定的设计目标。</p></div><h4 id="编辑API类型定义">编辑API类型定义</h4><p>接下来修改 <code>api/v1/demoapplication_types.go</code>中的Go类型定义，为DemoApplication自定义资源（CR）定义API，使其具有以下属性字段和状态：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// DemoApplicationSpec defines the desired state of DemoApplication</span><span class="token keyword">type</span> DemoApplicationSpec <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token comment">// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster</span><span class="token comment">// Important: Run "make" to regenerate code after modifying this file</span><span class="token comment">// replicas of the application deployment</span><span class="token comment">//+kubebuilder:validation:Minimum=0</span>Replica <span class="token builtin">int32</span> <span class="token string">`json:"replica"`</span><span class="token comment">// containers of the application deployment</span>InitContainers <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container <span class="token string">`json:"initContainers,omitempty"`</span>Containers     <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container <span class="token string">`json:"containers"`</span><span class="token comment">// volumes of the application deployment</span>Volumes <span class="token punctuation">[</span><span class="token punctuation">]</span>Volume <span class="token string">`json:"volumes,omitempty"`</span><span class="token comment">// service of the application</span>Service <span class="token operator">*</span>Service <span class="token string">`json:"service,omitempty"`</span><span class="token comment">// PersistentVolumeClaim of the application</span>PersistentVolumeClaims <span class="token punctuation">[</span><span class="token punctuation">]</span>PersistentVolumeClaim <span class="token string">`json:"persistentVolumeClaims,omitempty"`</span><span class="token comment">// Ingress of the application, will add rules to an exist's ingress</span>Ingress <span class="token operator">*</span>Ingress <span class="token string">`json:"ingress,omitempty"`</span><span class="token comment">// ServiceAccount of the application</span>ServiceAccountName <span class="token builtin">string</span>                     <span class="token string">`json:"serviceAccountName,omitempty"`</span>SecurityContext    <span class="token operator">*</span>corev1<span class="token punctuation">.</span>PodSecurityContext <span class="token string">`json:"securityContext,omitempty"`</span><span class="token punctuation">}</span><span class="token comment">// DemoApplicationStatus defines the observed state of DemoApplication</span><span class="token keyword">type</span> DemoApplicationStatus <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token comment">// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster</span><span class="token comment">// Important: Run "make" to regenerate code after modifying this file</span>Nodes <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"nodes"`</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中DemoApplicationStatus描述了CRD的状态信息，里面定义了一个字段Nodes用于存放DemoApplication对应POD的IP。</p><p>上述DemoApplicationSpec结构里用到了的<code>Volume</code>、<code>Service</code>、<code>PersistentVolumeClaim</code>、<code>Ingress</code>，原本client-go里都是有的，我这里自己又重新定义了一遍，是为了减少很多用不上的字段，详见下方：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Volume <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token comment">// Volume name</span>Name <span class="token builtin">string</span> <span class="token string">`json:"name"`</span><span class="token comment">// PersistentVolumeClaim type of volume</span>PersistentVolumeClaim <span class="token operator">*</span>corev1<span class="token punctuation">.</span>PersistentVolumeClaimVolumeSource <span class="token string">`json:"persistentVolumeClaim,omitempty"`</span><span class="token comment">// HostPath type of volume</span>HostPath <span class="token operator">*</span>corev1<span class="token punctuation">.</span>HostPathVolumeSource <span class="token string">`json:"hostPath,omitempty"`</span><span class="token comment">// ConfigMap type of volume</span>ConfigMap <span class="token operator">*</span>corev1<span class="token punctuation">.</span>ConfigMapVolumeSource <span class="token string">`json:"configMap,omitempty"`</span><span class="token punctuation">}</span><span class="token keyword">type</span> Service <span class="token keyword">struct</span> <span class="token punctuation">{</span>Type <span class="token operator">*</span>corev1<span class="token punctuation">.</span>ServiceType <span class="token string">`json:"type,omitempty"`</span><span class="token punctuation">}</span><span class="token keyword">type</span> PersistentVolumeClaim <span class="token keyword">struct</span> <span class="token punctuation">{</span>AccessModes      <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>PersistentVolumeAccessMode <span class="token string">`json:"accessModes"`</span>StorageClassName <span class="token operator">*</span><span class="token builtin">string</span>                             <span class="token string">`json:"storageClassName"`</span>Resources        corev1<span class="token punctuation">.</span>ResourceRequirements         <span class="token string">`json:"resources"`</span>Name             <span class="token builtin">string</span>                              <span class="token string">`json:"name"`</span><span class="token punctuation">}</span><span class="token keyword">type</span> Ingress <span class="token keyword">struct</span> <span class="token punctuation">{</span>IngressName <span class="token builtin">string</span>              <span class="token string">`json:"ingressName"`</span>Rules       <span class="token punctuation">[</span><span class="token punctuation">]</span>netv1<span class="token punctuation">.</span>IngressRule <span class="token string">`json:"rules"`</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为了控制器可以在不更改CR对象其余部分的情况下更新CR状态，添加marker <code>+kubebuilder:subresource:status</code> 到CR：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// DemoApplication is the Schema for the demoapplications API</span><span class="token comment">// +kubebuilder:subresource:status  // 添加此行</span><span class="token keyword">type</span> DemoApplication <span class="token keyword">struct</span> <span class="token punctuation">{</span>metav1<span class="token punctuation">.</span>TypeMeta   <span class="token string">`json:",inline"`</span>metav1<span class="token punctuation">.</span>ObjectMeta <span class="token string">`json:"metadata,omitempty"`</span>Spec   DemoApplicationSpec   <span class="token string">`json:"spec,omitempty"`</span>Status DemoApplicationStatus <span class="token string">`json:"status,omitempty"`</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完<code>*_types.go</code>文件后，运行以下命令为该资源类型生成代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的makefile的generate子命令将调用controller-gen来更新<code>zz_generated.deepcopy.go</code>以确保我们API的Go类型定义实现所有Kind类型必须实现的runtime.Object接口。</p><h4 id="生成CRD清单">生成CRD清单</h4><p>定义完并修改完API以后，使用下面的命令生成和更新CRD清单：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> manifests<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个makefile的manifests子命令将调用controller-gen在<code>config/crd/bases/application.example.com_demoapplications.yaml</code>文件中生成CRD清单。</p><h4 id="修改Controller">修改Controller</h4><p>接下来将修改最主要的Operator的Reconcile逻辑了。编辑controllers/demoapplication_controller.go文件，修改Reconcile函数</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">Reconcile</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req ctrl<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">(</span>ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>log <span class="token operator">:=</span> ctrllog<span class="token punctuation">.</span><span class="token function">FromContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Entering operator reconciling..."</span><span class="token punctuation">)</span>  <span class="token comment">// ……</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将要实现的主要逻辑为：</p><ol><li>如果CR不存在（比如使用kubectl delete -f删除了CR），则对应将deployment和service删了。</li></ol><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Check if CR exist</span>demo <span class="token operator">:=</span> <span class="token operator">&amp;</span>demov1<span class="token punctuation">.</span>DemoApplication<span class="token punctuation">{</span><span class="token punctuation">}</span>err <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">,</span> demo<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> errors<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"DemoApplication resource not found. will delete related resources if they exit"</span><span class="token punctuation">)</span>    <span class="token comment">// if deployment exists then delete it</span>    deploy <span class="token operator">:=</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">{</span><span class="token punctuation">}</span>    r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">,</span> deploy<span class="token punctuation">)</span>    <span class="token keyword">if</span> deploy<span class="token punctuation">.</span>Name <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>      err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> deploy<span class="token punctuation">)</span>      <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Delete deployment"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">"failed"</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Delete deployment"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// if service exists then delete it</span>    service <span class="token operator">:=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">{</span><span class="token punctuation">}</span>    r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">,</span> service<span class="token punctuation">)</span>    <span class="token keyword">if</span> service<span class="token punctuation">.</span>Name <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>      err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> service<span class="token punctuation">)</span>      <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Delete service"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">"failed"</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Delete service"</span><span class="token punctuation">,</span> service<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// Return and don't requeue</span>    <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>  <span class="token punctuation">}</span>  <span class="token comment">// Error reading the object - requeue the request.</span>  log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to get DemoApplication"</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>如果CR中传递了PersistentVolumeClaims，且CR指定的PVC不存在，则创建之（注意创建PVC需要在创建Deployment之前进行，否则Deployment会起不来）</li></ol><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Check if the pvc already exists, if not create a new one</span><span class="token keyword">if</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>PersistentVolumeClaims <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> x <span class="token operator">:=</span> <span class="token keyword">range</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>PersistentVolumeClaims <span class="token punctuation">{</span>    pvc <span class="token operator">:=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>PersistentVolumeClaim<span class="token punctuation">{</span><span class="token punctuation">}</span>    err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> types<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> x<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Namespace<span class="token punctuation">}</span><span class="token punctuation">,</span> pvc<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> errors<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>      newPvc <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">pvcForDemoApplication</span><span class="token punctuation">(</span>demo<span class="token punctuation">,</span> x<span class="token punctuation">)</span>      log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Creating a new PersistentVolumeClaim"</span><span class="token punctuation">,</span> <span class="token string">"PVC.Namespace"</span><span class="token punctuation">,</span> newPvc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"PVC.Name"</span><span class="token punctuation">,</span> newPvc<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>      err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> newPvc<span class="token punctuation">)</span>      <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to create new PersistentVolumeClaim"</span><span class="token punctuation">,</span> <span class="token string">"PersistentVolumeClaim.Namespace"</span><span class="token punctuation">,</span> newPvc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"PersistentVolumeClaim.Name"</span><span class="token punctuation">,</span> newPvc<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>        <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err      <span class="token punctuation">}</span>      <span class="token comment">// Deployment created successfully - return and requeue</span>      <span class="token comment">// return ctrl.Result{RequeueAfter: time.Minute}, nil</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to get PersistentVolumeClaim"</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"PersistentVolumeClaim already exist, ignore creating"</span><span class="token punctuation">,</span> <span class="token string">"PVC.Namespace"</span><span class="token punctuation">,</span> pvc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"PVC.Name"</span><span class="token punctuation">,</span> pvc<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pvcForDemoApplication</code>函数返回了将要创建的PVC对象。其代码为：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">pvcForDemoApplication</span><span class="token punctuation">(</span>f <span class="token operator">*</span>demov1<span class="token punctuation">.</span>DemoApplication<span class="token punctuation">,</span> x demov1<span class="token punctuation">.</span>PersistentVolumeClaim<span class="token punctuation">)</span> <span class="token operator">*</span>corev1<span class="token punctuation">.</span>PersistentVolumeClaim <span class="token punctuation">{</span>pvc <span class="token operator">:=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>PersistentVolumeClaim<span class="token punctuation">{</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">{</span>Name<span class="token punctuation">:</span>      x<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>Namespace<span class="token punctuation">:</span> f<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PersistentVolumeClaimSpec<span class="token punctuation">{</span>AccessModes<span class="token punctuation">:</span>      x<span class="token punctuation">.</span>AccessModes<span class="token punctuation">,</span>Resources<span class="token punctuation">:</span>        x<span class="token punctuation">.</span>Resources<span class="token punctuation">,</span>StorageClassName<span class="token punctuation">:</span> x<span class="token punctuation">.</span>StorageClassName<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">return</span> pvc<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>如果Deployment不存在，则创建之</li></ol><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Check if the deployment already exists, if not create a new one</span>deploy <span class="token operator">:=</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">{</span><span class="token punctuation">}</span>err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> types<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Namespace<span class="token punctuation">}</span><span class="token punctuation">,</span> deploy<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> errors<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// Define a new deployment</span>  newDeploy <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">deploymentForDemoApplication</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>  log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Creating a new Deployment"</span><span class="token punctuation">,</span> <span class="token string">"Deployment.Namespace"</span><span class="token punctuation">,</span> newDeploy<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Deployment.Name"</span><span class="token punctuation">,</span> newDeploy<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>  err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> newDeploy<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to create new Deployment"</span><span class="token punctuation">,</span> <span class="token string">"Deployment.Namespace"</span><span class="token punctuation">,</span> newDeploy<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Deployment.Name"</span><span class="token punctuation">,</span> newDeploy<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err  <span class="token punctuation">}</span>  <span class="token comment">// Deployment created successfully - return and requeue</span>  <span class="token comment">// return ctrl.Result{Requeue: true}, nil</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>  log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to get Deployment"</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment">// update deployment</span>  deploy <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">deploymentForDemoApplication</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> deploy<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to update Deployment"</span><span class="token punctuation">,</span> <span class="token string">"Deployment.Namespace"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Deployment.Name"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Update Deployment success"</span><span class="token punctuation">,</span> <span class="token string">"Deployment.Namespace"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Deployment.Name"</span><span class="token punctuation">,</span> deploy<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>deploymentForDemoApplication</code>函数返回了将要创建的Deployment对象，其代码为：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">deploymentForDemoApplication</span><span class="token punctuation">(</span>f <span class="token operator">*</span>demov1<span class="token punctuation">.</span>DemoApplication<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment <span class="token punctuation">{</span>labels <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"app"</span><span class="token punctuation">:</span> f<span class="token punctuation">.</span>Name<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment">// if not set resource, give the default value</span><span class="token keyword">var</span> containers <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Containers <span class="token punctuation">{</span>limitsCpu<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"500m"</span><span class="token punctuation">)</span>limitsMem<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"500Mi"</span><span class="token punctuation">)</span>requestsCpu<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"250m"</span><span class="token punctuation">)</span>requestsMem<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"250Mi"</span><span class="token punctuation">)</span>resources <span class="token operator">:=</span> corev1<span class="token punctuation">.</span>ResourceRequirements<span class="token punctuation">{</span>Limits<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">{</span>corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span>    limitsCpu<span class="token punctuation">,</span>corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> limitsMem<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Requests<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">{</span>corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span>    requestsCpu<span class="token punctuation">,</span>corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> requestsMem<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">if</span> c<span class="token punctuation">.</span>Resources<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span>Resources <span class="token operator">=</span> resources<span class="token punctuation">}</span>containers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>containers<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> initContainers <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>InitContainers <span class="token punctuation">{</span>limitsCpu<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"100m"</span><span class="token punctuation">)</span>limitsMem<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"100Mi"</span><span class="token punctuation">)</span>requestsCpu<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"50m"</span><span class="token punctuation">)</span>requestsMem<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> resource<span class="token punctuation">.</span><span class="token function">ParseQuantity</span><span class="token punctuation">(</span><span class="token string">"50Mi"</span><span class="token punctuation">)</span>resources <span class="token operator">:=</span> corev1<span class="token punctuation">.</span>ResourceRequirements<span class="token punctuation">{</span>Limits<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">{</span>corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span>    limitsCpu<span class="token punctuation">,</span>corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> limitsMem<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Requests<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">{</span>corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span>    requestsCpu<span class="token punctuation">,</span>corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> requestsMem<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">if</span> c<span class="token punctuation">.</span>Resources<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span>Resources <span class="token operator">=</span> resources<span class="token punctuation">}</span>initContainers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>initContainers<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">}</span>deploy <span class="token operator">:=</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">{</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">{</span>Name<span class="token punctuation">:</span>      f<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>Namespace<span class="token punctuation">:</span> f<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>Labels<span class="token punctuation">:</span>    labels<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Spec<span class="token punctuation">:</span> appsv1<span class="token punctuation">.</span>DeploymentSpec<span class="token punctuation">{</span>Replicas<span class="token punctuation">:</span> <span class="token operator">&amp;</span>f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Replica<span class="token punctuation">,</span>Selector<span class="token punctuation">:</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>LabelSelector<span class="token punctuation">{</span>MatchLabels<span class="token punctuation">:</span> labels<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Template<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodTemplateSpec<span class="token punctuation">{</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">{</span>Labels<span class="token punctuation">:</span> labels<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodSpec<span class="token punctuation">{</span>Volumes<span class="token punctuation">:</span> lo<span class="token punctuation">.</span>Map<span class="token punctuation">[</span>demov1<span class="token punctuation">.</span>Volume<span class="token punctuation">,</span> corev1<span class="token punctuation">.</span>Volume<span class="token punctuation">]</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Volumes<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x demov1<span class="token punctuation">.</span>Volume<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token builtin">int</span><span class="token punctuation">)</span> corev1<span class="token punctuation">.</span>Volume <span class="token punctuation">{</span><span class="token keyword">var</span> volumeSource corev1<span class="token punctuation">.</span>VolumeSource<span class="token keyword">if</span> x<span class="token punctuation">.</span>HostPath <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>volumeSource <span class="token operator">=</span> corev1<span class="token punctuation">.</span>VolumeSource<span class="token punctuation">{</span>HostPath<span class="token punctuation">:</span> x<span class="token punctuation">.</span>HostPath<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> x<span class="token punctuation">.</span>PersistentVolumeClaim <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>volumeSource <span class="token operator">=</span> corev1<span class="token punctuation">.</span>VolumeSource<span class="token punctuation">{</span>PersistentVolumeClaim<span class="token punctuation">:</span> x<span class="token punctuation">.</span>PersistentVolumeClaim<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> x<span class="token punctuation">.</span>ConfigMap <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>volumeSource <span class="token operator">=</span> corev1<span class="token punctuation">.</span>VolumeSource<span class="token punctuation">{</span>ConfigMap<span class="token punctuation">:</span> x<span class="token punctuation">.</span>ConfigMap<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> corev1<span class="token punctuation">.</span>Volume<span class="token punctuation">{</span>Name<span class="token punctuation">:</span>         x<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>VolumeSource<span class="token punctuation">:</span> volumeSource<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>InitContainers<span class="token punctuation">:</span>           initContainers<span class="token punctuation">,</span>Containers<span class="token punctuation">:</span>               containers<span class="token punctuation">,</span>ServiceAccountName<span class="token punctuation">:</span>       f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ServiceAccountName<span class="token punctuation">,</span>DeprecatedServiceAccount<span class="token punctuation">:</span> f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ServiceAccountName<span class="token punctuation">,</span>SecurityContext<span class="token punctuation">:</span>          f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>SecurityContext<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">return</span> deploy<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这其中还为没有指定<code>resources</code>的container和initContainer设置了默认的<code>resources</code></p><ol start="4"><li>如果和Deployment同名的Service不存在，则创建之：</li></ol><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// If DemoApplication Service is not nil, check if the service exists, if not create a new one</span><span class="token keyword">if</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Service <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>  service <span class="token operator">:=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">{</span><span class="token punctuation">}</span>  err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> types<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Namespace<span class="token punctuation">}</span><span class="token punctuation">,</span> service<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> errors<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Define a new service</span>    newService <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">serviceForDemoApplication</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Creating a new Service"</span><span class="token punctuation">,</span> <span class="token string">"Serivce.Namespace"</span><span class="token punctuation">,</span> newService<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Serivce.Name"</span><span class="token punctuation">,</span> newService<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> newService<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to create new Serivce"</span><span class="token punctuation">,</span> <span class="token string">"Serivce.Namespace"</span><span class="token punctuation">,</span> newService<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Serivce.Name"</span><span class="token punctuation">,</span> newService<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>      <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err    <span class="token punctuation">}</span>    <span class="token comment">// Service created successfully - return and requeue</span>    <span class="token comment">// return ctrl.Result{Requeue: true}, nil</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to get Serivce"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment">// update service</span>    service <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">serviceForDemoApplication</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> service<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to update Service"</span><span class="token punctuation">,</span> <span class="token string">"Service.Namespace"</span><span class="token punctuation">,</span> service<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Service.Name"</span><span class="token punctuation">,</span> service<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Update Service success"</span><span class="token punctuation">,</span> <span class="token string">"Service.Namespace"</span><span class="token punctuation">,</span> service<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Service.Name"</span><span class="token punctuation">,</span> service<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>serviceForDemoApplication</code>函数返回了将要创建的Service对象，其代码为：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">serviceForDemoApplication</span><span class="token punctuation">(</span>f <span class="token operator">*</span>demov1<span class="token punctuation">.</span>DemoApplication<span class="token punctuation">)</span> <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service <span class="token punctuation">{</span><span class="token keyword">var</span> serviceType corev1<span class="token punctuation">.</span>ServiceType <span class="token operator">=</span> <span class="token string">"ClusterIP"</span><span class="token keyword">if</span> f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Service<span class="token punctuation">.</span>Type <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>serviceType <span class="token operator">=</span> <span class="token operator">*</span>f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Service<span class="token punctuation">.</span>Type<span class="token punctuation">}</span>service <span class="token operator">:=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">{</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">{</span>Name<span class="token punctuation">:</span>      f<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>Namespace<span class="token punctuation">:</span> f<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ServiceSpec<span class="token punctuation">{</span>Ports<span class="token punctuation">:</span> lo<span class="token punctuation">.</span>Map<span class="token punctuation">[</span>corev1<span class="token punctuation">.</span>ContainerPort<span class="token punctuation">,</span> corev1<span class="token punctuation">.</span>ServicePort<span class="token punctuation">]</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Containers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Ports<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x corev1<span class="token punctuation">.</span>ContainerPort<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token builtin">int</span><span class="token punctuation">)</span> corev1<span class="token punctuation">.</span>ServicePort <span class="token punctuation">{</span><span class="token keyword">return</span> corev1<span class="token punctuation">.</span>ServicePort<span class="token punctuation">{</span>Name<span class="token punctuation">:</span>       fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"port-%d"</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>ContainerPort<span class="token punctuation">)</span><span class="token punctuation">,</span>Protocol<span class="token punctuation">:</span>   x<span class="token punctuation">.</span>Protocol<span class="token punctuation">,</span>Port<span class="token punctuation">:</span>       x<span class="token punctuation">.</span>ContainerPort<span class="token punctuation">,</span>TargetPort<span class="token punctuation">:</span> intstr<span class="token punctuation">.</span><span class="token function">FromInt</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>ContainerPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Selector<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"app"</span><span class="token punctuation">:</span> f<span class="token punctuation">.</span>Name<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Type<span class="token punctuation">:</span> serviceType<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">return</span> service<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>如果Ingress不存在，则创建之；如果Ingress已存在，将CR中指定的Ingress rule补到已有的Ingress的rules后面</li></ol><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// If DemoApplication Ingress is not nil, add rules to Ingress</span><span class="token keyword">if</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>  ingress <span class="token operator">:=</span> <span class="token operator">&amp;</span>netv1<span class="token punctuation">.</span>Ingress<span class="token punctuation">{</span><span class="token punctuation">}</span>  err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> types<span class="token punctuation">.</span>NamespacedName<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress<span class="token punctuation">.</span>IngressName<span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> demo<span class="token punctuation">.</span>Namespace<span class="token punctuation">}</span><span class="token punctuation">,</span> ingress<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> errors<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Define a new ingress</span>    newIngress <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">ingressForDemoApplication</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Creating a new Ingress"</span><span class="token punctuation">,</span> <span class="token string">"Ingress.Namespace"</span><span class="token punctuation">,</span> newIngress<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Ingress.Name"</span><span class="token punctuation">,</span> newIngress<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> newIngress<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Failed to create new Ingress"</span><span class="token punctuation">,</span> <span class="token string">"Ingress.Namespace"</span><span class="token punctuation">,</span> newIngress<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Ingress.Name"</span><span class="token punctuation">,</span> newIngress<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>      <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err    <span class="token punctuation">}</span>    <span class="token comment">// Service created successfully - return and requeue</span>    <span class="token comment">// return ctrl.Result{Requeue: true}, nil</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    ingress<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Rules <span class="token operator">=</span> lo<span class="token punctuation">.</span>UniqBy<span class="token punctuation">[</span>netv1<span class="token punctuation">.</span>IngressRule<span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token function">append</span><span class="token punctuation">(</span>ingress<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Rules<span class="token punctuation">,</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress<span class="token punctuation">.</span>Rules<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x netv1<span class="token punctuation">.</span>IngressRule<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> x<span class="token punctuation">.</span>Host <span class="token operator">+</span> x<span class="token punctuation">.</span>HTTP<span class="token punctuation">.</span>Paths<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Path    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> ingress<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"Cannot update Ingress"</span><span class="token punctuation">,</span> <span class="token string">"Ingress.Namespace"</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Ingress.Name"</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress<span class="token punctuation">.</span>IngressName<span class="token punctuation">)</span>      <span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Update Ingress success"</span><span class="token punctuation">,</span> <span class="token string">"Ingress.Namespace"</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token string">"Ingress.Name"</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress<span class="token punctuation">.</span>IngressName<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ingressForDemoApplication</code>函数返回了将要创建的Ingress对象，其代码为：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">ingressForDemoApplication</span><span class="token punctuation">(</span>f <span class="token operator">*</span>demov1<span class="token punctuation">.</span>DemoApplication<span class="token punctuation">)</span> <span class="token operator">*</span>netv1<span class="token punctuation">.</span>Ingress <span class="token punctuation">{</span>ingressClassName <span class="token operator">:=</span> <span class="token string">"nginx"</span> <span class="token comment">// default ingressClassName</span>ing <span class="token operator">:=</span> <span class="token operator">&amp;</span>netv1<span class="token punctuation">.</span>Ingress<span class="token punctuation">{</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">{</span>Name<span class="token punctuation">:</span>      f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress<span class="token punctuation">.</span>IngressName<span class="token punctuation">,</span>Namespace<span class="token punctuation">:</span> f<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Spec<span class="token punctuation">:</span> netv1<span class="token punctuation">.</span>IngressSpec<span class="token punctuation">{</span>IngressClassName<span class="token punctuation">:</span> <span class="token operator">&amp;</span>ingressClassName<span class="token punctuation">,</span>Rules<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ingress<span class="token punctuation">.</span>Rules<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">return</span> ing<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Controller-watch的资源">Controller watch的资源</h4><p>现在主要逻辑已经写完了，下来需要指定controller应该监视(watch)哪些资源。<code>SetupWithManager()</code>函数指定了如何构建控制器以监视CR和该控制器拥有和管理的其他资源。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// SetupWithManager sets up the controller with the Manager.</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">SetupWithManager</span><span class="token punctuation">(</span>mgr ctrl<span class="token punctuation">.</span>Manager<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span><span class="token keyword">return</span> ctrl<span class="token punctuation">.</span><span class="token function">NewControllerManagedBy</span><span class="token punctuation">(</span>mgr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">For</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>demov1<span class="token punctuation">.</span>DemoApplication<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithEventFilter</span><span class="token punctuation">(</span><span class="token function">filterPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Complete</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>NewControllerManagedBy()</code>提供了一个控制器构建器，允许各种控制器的配置。</p><p><code>For(&amp;demov1.DemoApplication{})</code>将DemoApplication类型指定为要监视的主要资源。对于每个DemoApplication类型的Add/Update/Delete事件，Reconcile Loop将为该DemoApplication对象发送一个Reconcile Request（参数为命名空间和key名称）。</p><p><code>WithEventFilter(filterPredicate())</code>是事件过滤器，如果不设定这个过滤器，当CR的状态从Creating变为Pending、从Pending变为Running的过程中还会额外两次触发Reconcile，这是没有必要的。<code>filterPredicate</code>函数代码如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">filterPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> predicate<span class="token punctuation">.</span>Predicate <span class="token punctuation">{</span><span class="token keyword">return</span> predicate<span class="token punctuation">.</span>Funcs<span class="token punctuation">{</span>UpdateFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>e event<span class="token punctuation">.</span>UpdateEvent<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span><span class="token comment">// Ignore updates to CR status in which case metadata.Generation does not change</span><span class="token keyword">return</span> e<span class="token punctuation">.</span>ObjectOld<span class="token punctuation">.</span><span class="token function">GetGeneration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span>ObjectNew<span class="token punctuation">.</span><span class="token function">GetGeneration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>DeleteFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>e event<span class="token punctuation">.</span>DeleteEvent<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span><span class="token comment">// Evaluates to false if the object has been confirmed deleted.</span><span class="token keyword">return</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>DeleteStateUnknown<span class="token punctuation">}</span><span class="token punctuation">,</span>CreateFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>e event<span class="token punctuation">.</span>CreateEvent<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="更多Controller配置">更多Controller配置</h4><p>在初始化控制器时可以进行许多其他有用的配置。有关这些配置的更多详细信息，可以查看上游builder和controller的帮助文档。</p><ul><li>通过<code>MaxConcurrentReconciles</code>选项设置控制器的最大并 Reconciles数。默认为 1。</li><li>使用<a href="https://sdk.operatorframework.io/docs/building-operators/golang/references/event-filtering/">predicates</a>过滤监视事件。</li><li>使用<a href="https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/handler#hdr-EventHandlers">EventHandler</a>将一个Reconcile请求重新放入队列(enqueue)以进行Reconcile循环。</li><li>对于比主次资源更复杂的operator关系，可以使用<a href="https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/handler#EnqueueRequestsFromMapFunc">EnqueueRequestsFromMapFunc</a>处理程序以将监视事件转换为任意一组Reconcile请求。</li></ul><h4 id="Reconcile-Loop">Reconcile Loop</h4><p>每个Controller都有一个Reconciler对象，该对象带有一个Reconcile()方法，用于实现Reconcile循环。每次在监视的CR或资源上发生事件时，它都会运行，并将根据这些状态是否匹配并返回一些值。</p><p>Reconcile循环传递了<a href="https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/reconcile#Request">Request</a>参数，该参数是用于查找缓存中定义的CRD资源对象DemoApplication。</p><p>有关Reconcilers、客户端以及与资源事件交互的指南，可以参考<a href="https://sdk.operatorframework.io/docs/building-operators/golang/references/client/">客户端API</a>文档。</p><p>以下是Reconciler的一些可能的返回选项：</p><ul><li>发生错误时：</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>没有错误时：</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span>Requeue<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>否则, 需要停止Reconcile，如下：</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在X时间之后，再次Reconcile：</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">return</span> ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">{</span>RequeueAfter<span class="token punctuation">:</span> nextRun<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="指定权限及生成RBAC清单">指定权限及生成RBAC清单</h4><p>controller需要一定的RBAC权限与其管理的资源进行交互，这些是通过<a href="https://book.kubebuilder.io/reference/markers/rbac.html">RBAC标记</a>指定的，如下代码所示：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">//+kubebuilder:rbac:groups=application.example.com,resources=demoapplications,verbs=get;list;watch;create;update;patch;delete</span><span class="token comment">//+kubebuilder:rbac:groups=application.example.com,resources=demoapplications/status,verbs=get;update;patch</span><span class="token comment">//+kubebuilder:rbac:groups=application.example.com,resources=demoapplications/finalizers,verbs=update</span><span class="token comment">// controller需要对deployments/services/persistentvolumeclaims/pods等资源进行增删改查</span><span class="token comment">//+kubebuilder:rbac:groups=apps,resources=deployments,verbs=get;list;watch;create;update;patch;delete</span><span class="token comment">//+kubebuilder:rbac:groups=core,resources=services,verbs=get;list;create;update;patch;delete</span><span class="token comment">//+kubebuilder:rbac:groups=core,resources=persistentvolumeclaims,verbs=get;list;create;update;patch</span><span class="token comment">//+kubebuilder:rbac:groups=core,resources=pods,verbs=get;list</span><span class="token comment">//+kubebuilder:rbac:groups=networking.k8s.io,resources=ingresses,verbs=get;list;create;update;patch</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>DemoApplicationReconciler<span class="token punctuation">)</span> <span class="token function">Reconcile</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req ctrl<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">(</span>ctrl<span class="token punctuation">.</span>Result<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过以上markers可以在config/rbac/目录下面生成对应的rbac文件。执行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> manifests<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="运行Operator">运行Operator</h3><h4 id="在本地（集群之外）运行">在本地（集群之外）运行</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">make</span> <span class="token function">install</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-s</span> /home/student/operator/demo-operator/bin/controller-gen <span class="token operator">&amp;&amp;</span> /home/student/operator/demo-operator/bin/controller-gen <span class="token parameter variable">--version</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-q</span> v0.11.1 <span class="token operator">||</span> <span class="token punctuation">\</span><span class="token assign-left variable">GOBIN</span><span class="token operator">=</span>/home/student/operator/demo-operator/bin go <span class="token function">install</span> sigs.k8s.io/controller-tools/cmd/controller-gen@v0.11.1/home/student/operator/demo-operator/bin/controller-gen rbac:roleName<span class="token operator">=</span>manager-role crd webhook <span class="token assign-left variable">paths</span><span class="token operator">=</span><span class="token string">"./..."</span> output:crd:artifacts:config<span class="token operator">=</span>config/crd/bases/home/student/operator/demo-operator/bin/kustomize build config/crd <span class="token operator">|</span> kubectl apply <span class="token parameter variable">-f</span> -The CustomResourceDefinition <span class="token string">"demoapplications.application.example.com"</span> is invalid: * spec.validation.openAPIV3Schema.properties<span class="token punctuation">[</span>spec<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>initContainers<span class="token punctuation">]</span>.items.properties<span class="token punctuation">[</span>resources<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>claims<span class="token punctuation">]</span>.items.x-kubernetes-map-type: Invalid value: <span class="token string">"null"</span><span class="token builtin class-name">:</span> must be atomic as item of a list with x-kubernetes-list-type<span class="token operator">=</span>set* spec.validation.openAPIV3Schema.properties<span class="token punctuation">[</span>spec<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>persistentVolumeClaims<span class="token punctuation">]</span>.items.properties<span class="token punctuation">[</span>resources<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>claims<span class="token punctuation">]</span>.items.x-kubernetes-map-type: Invalid value: <span class="token string">"null"</span><span class="token builtin class-name">:</span> must be atomic as item of a list with x-kubernetes-list-type<span class="token operator">=</span>set* spec.validation.openAPIV3Schema.properties<span class="token punctuation">[</span>spec<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>containers<span class="token punctuation">]</span>.items.properties<span class="token punctuation">[</span>resources<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>claims<span class="token punctuation">]</span>.items.x-kubernetes-map-type: Invalid value: <span class="token string">"null"</span><span class="token builtin class-name">:</span> must be atomic as item of a list with x-kubernetes-list-type<span class="token operator">=</span>setmake: *** <span class="token punctuation">[</span>Makefile:154: install<span class="token punctuation">]</span> Error <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>make install</code>命令会下载<code>kustomize</code>到工程根目录的bin/下面，如果没网无法下载，可以手动去下载后放到bin。</p><p>接着会报出<code>must be atomic as item of a list with x-kubernetes-list-type=set</code>这个莫名其妙的错误，可能是个bug或者版本问题。根据提示修改<code>config/crd/bases/application.example.com_demoapplications.yaml</code>文件，搜索关键词<code>claims</code>，把所有claims块下面的<code>x-kubernetes-list-type: set</code>这一行删了</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">properties</span><span class="token punctuation">:</span>  <span class="token key atrule">claims</span><span class="token punctuation">:</span>    <span class="token key atrule">summary</span><span class="token punctuation">:</span> "Claims lists the names of resources<span class="token punctuation">,</span> defined      in spec.resourceClaims<span class="token punctuation">,</span> that are used by this container.      \n This is an alpha field and requires enabling the DynamicResourceAllocation      feature gate. \n This field is immutable."    <span class="token key atrule">items</span><span class="token punctuation">:</span>      <span class="token key atrule">summary</span><span class="token punctuation">:</span> ResourceClaim references one entry in PodSpec.ResourceClaims.      <span class="token key atrule">properties</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span>          <span class="token key atrule">summary</span><span class="token punctuation">:</span> Name must match the name of one entry            in pod.spec.resourceClaims of the Pod where this            field is used. It makes that resource available            inside a container.          <span class="token key atrule">type</span><span class="token punctuation">:</span> string      <span class="token key atrule">required</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> name      <span class="token key atrule">type</span><span class="token punctuation">:</span> object    <span class="token key atrule">type</span><span class="token punctuation">:</span> array    <span class="token key atrule">x-kubernetes-list-type</span><span class="token punctuation">:</span> set  // &lt;<span class="token punctuation">-</span><span class="token punctuation">-</span>这一行删掉<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删掉以后不能再次运行make install，否则controller-gen又会自动生成出claims这块内容。直接手动提交这个yaml：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> config/crd/bases/application.example.com_demoapplications.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>CRD创建好以后，直接运行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ go run main.go<span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    controller-runtime.metrics      Metrics server is starting to listen    <span class="token punctuation">{</span><span class="token string">"addr"</span><span class="token builtin class-name">:</span> <span class="token string">":8080"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    setup   starting manager<span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    Starting server <span class="token punctuation">{</span><span class="token string">"path"</span><span class="token builtin class-name">:</span> <span class="token string">"/metrics"</span>, <span class="token string">"kind"</span><span class="token builtin class-name">:</span> <span class="token string">"metrics"</span>, <span class="token string">"addr"</span><span class="token builtin class-name">:</span> <span class="token string">"[::]:8080"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    Starting server <span class="token punctuation">{</span><span class="token string">"kind"</span><span class="token builtin class-name">:</span> <span class="token string">"health probe"</span>, <span class="token string">"addr"</span><span class="token builtin class-name">:</span> <span class="token string">"[::]:8081"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    Starting EventSource    <span class="token punctuation">{</span><span class="token string">"controller"</span><span class="token builtin class-name">:</span> <span class="token string">"demoapplication"</span>, <span class="token string">"controllerGroup"</span><span class="token builtin class-name">:</span> <span class="token string">"application.example.com"</span>, <span class="token string">"controllerKind"</span><span class="token builtin class-name">:</span> <span class="token string">"DemoApplication"</span>, <span class="token string">"source"</span><span class="token builtin class-name">:</span> <span class="token string">"kind source: *v1.DemoApplication"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    Starting Controller     <span class="token punctuation">{</span><span class="token string">"controller"</span><span class="token builtin class-name">:</span> <span class="token string">"demoapplication"</span>, <span class="token string">"controllerGroup"</span><span class="token builtin class-name">:</span> <span class="token string">"application.example.com"</span>, <span class="token string">"controllerKind"</span><span class="token builtin class-name">:</span> <span class="token string">"DemoApplication"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:27:50+08:00       INFO    Starting workers        <span class="token punctuation">{</span><span class="token string">"controller"</span><span class="token builtin class-name">:</span> <span class="token string">"demoapplication"</span>, <span class="token string">"controllerGroup"</span><span class="token builtin class-name">:</span> <span class="token string">"application.example.com"</span>, <span class="token string">"controllerKind"</span><span class="token builtin class-name">:</span> <span class="token string">"DemoApplication"</span>, <span class="token string">"worker count"</span><span class="token builtin class-name">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在提交一个CR到集群:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> application.example.com/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DemoApplication<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> demo  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.21.4    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always    <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>container    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP  <span class="token key atrule">replica</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">service</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将会看到controller打印下面的日志：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2023</span>-12-13T10:32:07+08:00       INFO    Entering operator reconciling<span class="token punctuation">..</span>.        <span class="token punctuation">{</span><span class="token string">"controller"</span><span class="token builtin class-name">:</span> <span class="token string">"demoapplication"</span>, <span class="token string">"controllerGroup"</span><span class="token builtin class-name">:</span> <span class="token string">"application.example.com"</span>, <span class="token string">"controllerKind"</span><span class="token builtin class-name">:</span> <span class="token string">"DemoApplication"</span>, <span class="token string">"DemoApplication"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"demo"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span><span class="token punctuation">}</span>, <span class="token string">"namespace"</span><span class="token builtin class-name">:</span> <span class="token string">"default"</span>, <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"demo"</span>, <span class="token string">"reconcileID"</span><span class="token builtin class-name">:</span> <span class="token string">"a94b5cc2-c9d6-467a-83cc-fb8be5ade3a8"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:32:07+08:00       INFO    Creating a new Deployment       <span class="token punctuation">{</span><span class="token string">"controller"</span><span class="token builtin class-name">:</span> <span class="token string">"demoapplication"</span>, <span class="token string">"controllerGroup"</span><span class="token builtin class-name">:</span> <span class="token string">"application.example.com"</span>, <span class="token string">"controllerKind"</span><span class="token builtin class-name">:</span> <span class="token string">"DemoApplication"</span>, <span class="token string">"DemoApplication"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"demo"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span><span class="token punctuation">}</span>, <span class="token string">"namespace"</span><span class="token builtin class-name">:</span> <span class="token string">"default"</span>, <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"demo"</span>, <span class="token string">"reconcileID"</span><span class="token builtin class-name">:</span> <span class="token string">"a94b5cc2-c9d6-467a-83cc-fb8be5ade3a8"</span>, <span class="token string">"Deployment.Namespace"</span><span class="token builtin class-name">:</span> <span class="token string">"default"</span>, <span class="token string">"Deployment.Name"</span><span class="token builtin class-name">:</span> <span class="token string">"demo"</span><span class="token punctuation">}</span><span class="token number">2023</span>-12-13T10:32:07+08:00       INFO    Creating a new Service  <span class="token punctuation">{</span><span class="token string">"controller"</span><span class="token builtin class-name">:</span> <span class="token string">"demoapplication"</span>, <span class="token string">"controllerGroup"</span><span class="token builtin class-name">:</span> <span class="token string">"application.example.com"</span>, <span class="token string">"controllerKind"</span><span class="token builtin class-name">:</span> <span class="token string">"DemoApplication"</span>, <span class="token string">"DemoApplication"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"demo"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span><span class="token punctuation">}</span>, <span class="token string">"namespace"</span><span class="token builtin class-name">:</span> <span class="token string">"default"</span>, <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"demo"</span>, <span class="token string">"reconcileID"</span><span class="token builtin class-name">:</span> <span class="token string">"a94b5cc2-c9d6-467a-83cc-fb8be5ade3a8"</span>, <span class="token string">"Serivce.Namespace"</span><span class="token builtin class-name">:</span> <span class="token string">"default"</span>, <span class="token string">"Serivce.Name"</span><span class="token builtin class-name">:</span> <span class="token string">"demo"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改CR里面的各个字段，会发现controller对应的更新了deployment、service、ingress等资源。最后删除这个CR，deployment和service也随之会被删除。</p><h4 id="在集群中以Deployment运行">在集群中以Deployment运行</h4><p>首先编译出可执行文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">go build <span class="token parameter variable">-o</span> bin/manager main.go<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改Dockerfile，改为如下内容：</p><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><code class="language-Dockerfile">FROM alpine:3.15.4WORKDIR /COPY bin/manager /manager## USER 65532:65532ENTRYPOINT ["/manager"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后build出镜像并上传到镜像仓库。假设镜像为：demo-operator:1.0.0，修改Makefile：</p><pre class="line-numbers language-Makefile" data-language="Makefile"><code class="language-Makefile">VERSION ?= 1.0.0……IMAGE_TAG_BASE ?= demo-operator……IMG ?= $(IMAGE_TAG_BASE):$(VERSION)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行以下命令部署：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">make</span> deploynamespace/demo-operator-system createdserviceaccount/demo-operator-controller-manager createdrole.rbac.authorization.k8s.io/demo-operator-leader-election-role createdclusterrole.rbac.authorization.k8s.io/demo-operator-manager-role createdclusterrole.rbac.authorization.k8s.io/demo-operator-metrics-reader createdclusterrole.rbac.authorization.k8s.io/demo-operator-proxy-role createdrolebinding.rbac.authorization.k8s.io/demo-operator-leader-election-rolebinding createdclusterrolebinding.rbac.authorization.k8s.io/demo-operator-manager-rolebinding createdclusterrolebinding.rbac.authorization.k8s.io/demo-operator-proxy-rolebinding createdservice/demo-operator-controller-manager-metrics-service createddeployment.apps/demo-operator-controller-manager createdThe CustomResourceDefinition <span class="token string">"demoapplications.application.example.com"</span> is invalid: * spec.validation.openAPIV3Schema.properties<span class="token punctuation">[</span>spec<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>persistentVolumeClaims<span class="token punctuation">]</span>.items.properties<span class="token punctuation">[</span>resources<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>claims<span class="token punctuation">]</span>.items.x-kubernetes-map-type: Invalid value: <span class="token string">"null"</span><span class="token builtin class-name">:</span> must be atomic as item of a list with x-kubernetes-list-type<span class="token operator">=</span>set* spec.validation.openAPIV3Schema.properties<span class="token punctuation">[</span>spec<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>initContainers<span class="token punctuation">]</span>.items.properties<span class="token punctuation">[</span>resources<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>claims<span class="token punctuation">]</span>.items.x-kubernetes-map-type: Invalid value: <span class="token string">"null"</span><span class="token builtin class-name">:</span> must be atomic as item of a list with x-kubernetes-list-type<span class="token operator">=</span>set* spec.validation.openAPIV3Schema.properties<span class="token punctuation">[</span>spec<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>containers<span class="token punctuation">]</span>.items.properties<span class="token punctuation">[</span>resources<span class="token punctuation">]</span>.properties<span class="token punctuation">[</span>claims<span class="token punctuation">]</span>.items.x-kubernetes-map-type: Invalid value: <span class="token string">"null"</span><span class="token builtin class-name">:</span> must be atomic as item of a list with x-kubernetes-list-type<span class="token operator">=</span>setmake: *** <span class="token punctuation">[</span>Makefile:163: deploy<span class="token punctuation">]</span> Error <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样是最后报<code>must be atomic as item of a list with x-kubernetes-list-type=set</code>错误，前面已经单独提交过CRD了，这个报错可以忽略。</p><p>可以看到创建了ns，创建了一堆rbac，最后部署了deployment，如果deployment起不来，再去手动检查什么问题。</p><p>最后可执行以下命令清理环境：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> undeploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note success no-icon"><p>本例完整代码参见：<a href="https://gitee.com/hongyuxuan2138/demo-operator">https://gitee.com/hongyuxuan2138/demo-operator</a></p></div><h2 id="后记">后记</h2><p>就在几年前没有Operator的时候，大部分软件都是用一个yaml文件来安装，或者复杂点的用Helm Charts。现在我们随便去安装部署一个云原生的软件，基本上都是Operator方式安装，为什么要用Operator，它到底有啥好的？</p><p>实际上，如果软件架构简单、安装过程不需要任何逻辑，用一个yaml完全可以应付；如果架构复杂，安装过程带一些判断逻辑，有一些前后依赖关系，这种情况就需要Helm Charts了；而如果要对软件做一些自动化控制，或者是对某些资源类型做高级抽象，就必须依赖CRD+Operator了。</p><p>举个例子，Prometheus-Operator里有一个CRD叫<code>ServiceMonitor</code>，翻译过来叫服务监控导出器，它可以通过<code>LabelSelector</code>选中<code>Service</code>，并暴露服务的/metrics端点。而另外一个叫做<code>Prometheus</code>的CRD再通过<code>LabelSelector</code>选中<code>ServiceMonitor</code>，这样就能实现当我需要配置Prometheus去scrape一个服务的时候，只需要为这个服务创建一个<code>ServiceMonitor</code>这个CR就行了，Prometheus就能通过这个<code>ServiceMonitor</code>自动地抓取它对应的<code>Service</code>的/metrics，而这个自动的过程就由Prometheus-Operator来完成。像这种逻辑复杂、高度抽象的东西，就必须由CRD+Operator来完成了。</p><p>设想一下如果Prometheus不是云原生安装，而是虚机部署的，为了scrape一个endpoint的/metrics，我要么写一个static_config，要么写一个file_sd_config，把endpoint写入文件，再重启Prometheus；要么高级点的用一个consul_sd_config，那我还得装个Consul，把endpoint注册到Consul里，这复杂度成几何倍数增长。</p><p>再举一个例子，用过Prometheus的rules的人都知道，为了新增一个rule，我需要改<code>rules.yml</code>，这种手工改文件的操作，没法集成做平台化。如果每个人都需要自定义自己的rule，<code>rules.yml</code>可能有上千行。如果我要修改一个现有的rule，我得打开<code>rules.yml</code>文件，可能是从几千行里找到我要的rule并且修改它，再保存文件，这工作根本没法做了。曾经我在某国有大行工作的时候负责Prometheus，就一直没解决这个rules的问题。</p><p>云原生部署Prometheus的时候是如何解决rules的问题的？很简单，Prometheus-Operator提供了一个CRD叫<code>PrometheusRules</code>，一个<code>PrometheusRules</code>即是一个rule规则，它有自己的名字。我要新增一个rule，我就提交一个<code>PrometheusRules</code>的CR到K8S就行了。我要修改一个rule，我只需要找到这个名字的<code>PrometheusRules</code>，修改它再保存就行了。完美解决了之前的rules问题。</p><p>好了，说了半天，我又为什么要自己写一个Operator？目前我在一中字头券商部门负责DevOps和云原生的相关工作。当我为一个项目去往K8S部署应用的时候，它不仅仅是部署一个<code>Deployment</code>就完了，还要对应的配置<code>Service</code>、<code>PVC</code>、<code>ConfigMap</code>、<code>Ingress</code>，这是一个应用的全套资源。部署下一个应用的时候还是这套资源。于是我就把这一套资源抽象成一个CRD叫<code>Application</code>，用Operator来完成部署，当我提交一个<code>Application</code>就相当于提交了一整套应用，这大大加快了应用的部署速度（卸载应用的时候也是全套卸载）。</p><p>一旦你用过了Operator，你会发现其它方式瞬间就弱爆了，Operator真香~</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S二次开发系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S二次开发系列之一：进阶玩家该如何扩展自己的K8S</title>
      <link href="/blog/posts/2417358707/"/>
      <url>/blog/posts/2417358707/</url>
      
        <content type="html"><![CDATA[<p>今天给大家介绍几种K8S的扩展点，以满足进阶玩家自定义扩展、二次开发自己的K8S集群。</p><h2 id="常见K8S扩展点">常见K8S扩展点</h2><p>下面是一些常见的Kubernetes扩展点：</p><ol><li>自定义资源定义（CRD）：CRD允许用户定义自己的Kubernetes资源类型，以便于在Kubernetes集群中管理它们。</li><li>自定义控制器（Controller）：和CRD搭配扩展，自定义控制器允许用户编写自己的控制器（Operator）来管理自定义资源类型。这样可以根据特定需求进行定制化开发。还可以基于K8S的watch/informer机制监听K8S资源发生的事件，并做相应的资源变更。</li><li>准入控制器（admission webhook）：Kubernetes的三大门神之一（认证、授权、准入），为了集群安全性而引入的一个HTTP回调函数，用来控制一个客户端请求被发送到apiserver前后对其进行处理，以决定是否通过这次请求（验证准入控制器）/或对提交的资源进行变更（变更准入控制器）。</li><li>自定义调度器：Kubernetes的调度器负责将工作负载POD调度到可用的节点上。你可以扩展或替换默认的调度器，以实现特定的调度策略、调度算法或调度规则。</li><li>容器运行时接口（Container Runtime Interface，CRI）：CRI是Kubernetes与容器运行时之间的接口。用户可以通过CRI扩展Kubernetes对容器运行时的支持，例如自定义容器运行时、容器存储等。</li><li>自定义存储插件：Kubernetes支持各种存储插件，如CSI（Container Storage Interface）插件。你可以编写自己的存储插件，以与特定的存储后端集成，或者实现自定义的存储功能。</li><li>自定义网络插件：Kubernetes的网络插件，如CNI（Container Network Interface）负责为容器提供网络功能，如跨节点通信和服务发现。你可以开发自己的网络插件，以满足特定的网络需求，或者与特定的网络解决方案集成。现有的网络插件如flannel和calico。</li><li>Kubectl插件：K8S允许用户自定义编写kubectl插件，以扩展kubectl的命令。</li></ol><p>Kubernetes的扩展点为用户提供了很多定制化的机会，以适应不同的需求和场景。我们可以根据实际需求来选择适合自己的扩展点，并进行相应的定制化开发。</p><p>本系列文章将首先从CRD+Operator、Controller、Admission Webhook三个扩展点教你如何二次开发以扩展你的K8S。请关注如下文章：</p><ul><li><p><a href="/blog/posts/1440977903/">K8S二次开发系列之二：自定义开发CRD+Operator</a></p></li><li><p><a href="/blog/posts/1902483454/">K8S二次开发系列之三：自定义开发Admission Webhook</a></p></li><li><p><a href="/blog/posts/65360882/">K8S二次开发系列之四：自定义开发Controller</a></p></li></ul><p>后续会陆续分享如何开发自定义调度器、kubectl插件（CSI和CNI需要更多的网络和存储知识，以及更多的配套资源，本系列暂不做此研究）</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S二次开发系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-zero+opentelemetry+jaeger云原生链路跟踪实践</title>
      <link href="/blog/posts/2938485576/"/>
      <url>/blog/posts/2938485576/</url>
      
        <content type="html"><![CDATA[<p>本文示例程序用到的组件和框架如下：</p><ul><li>jaeger：云原生可观测链路跟踪工具。关于jaeger部署详见链路跟踪工具Jaeger+OpenTelemetry Collector部署详解</li><li>go-zero：一个go语言版的集成了各种工程实践的api和rpc微服务框架，本文将使用go-zero的api框架</li><li>imroc/req：一个开源的go语言轻量级HTTP客户端库</li><li>opentelemetry：提供了一组API和SDK来标准化遥测数据的采集和传输，相对于skywalking等字节码实现的非侵入式链路跟踪工具来说，opentelemetry是一组可观测领域的标准和规范，基于这个标准提供的各种语言的SDK，通过在代码中打埋点的方式（侵入式），可实现市面上绝大多数语言的链路跟踪功能（比如skywalking、听云等对ktor都不支持，但opentelemetry支持）</li></ul><h2 id="go-zero示例程序">go-zero示例程序</h2><p>以一个封装了蓝鲸CMDB接口的示例工程为例（api工程），工程名叫bkcmdb，目录结构如下：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F1.png" alt=""></p><p>蓝鲸CMDB提供了HTTP接口，示例工程通过imroc/req库封装了蓝鲸CMDB接口，通过在调用蓝鲸接口的前后打入埋点，实现一次调用的链路跟踪功能。</p><p>如下的一次调用，将会在一个链路（即trace）上产生两个节点（即span）：<br>postman --&gt; bkcmdb(go-zero) --&gt; 蓝鲸接口</p><p>该链路第一个节点是bkcmdb，第二个节点是蓝鲸接口。默认go-zero是没有开启链路跟踪功能的，下文将说明如何启用。</p><h2 id="go-zero启动链路跟踪功能">go-zero启动链路跟踪功能</h2><p>在正式介绍opentrace基本概念之前，先通过简单的配置启动go-zero的链路跟踪功能看一看效果。go-zero自带了基于opentelemetry的链路追踪功能，默认未开启，在工程的配置文件etc/bkcmdb.yaml中增加如下配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Telemetry</span><span class="token punctuation">:</span>  <span class="token key atrule">Name</span><span class="token punctuation">:</span> fiops<span class="token punctuation">-</span>bkcmdb  <span class="token key atrule">Endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//jaeger<span class="token punctuation">-</span>collector.xxx.io/api/traces  <span class="token key atrule">Sampler</span><span class="token punctuation">:</span> <span class="token number">1.0</span>  <span class="token key atrule">Batcher</span><span class="token punctuation">:</span> jaeger<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需在配置文件中增加<code>Telemetry</code>配置块即可，无需修改任何代码。其中<code>Name</code>是该链路上的ServiceName，将会在jaeger（或zipkin）上显示为Service。Endpoint是链路跟踪工具（jaeger或zipkin）的collector地址。<code>Batcher</code>这里指定链路跟踪工具为jaeger。</p><div class="note success no-icon"><p>注意：默认配置了Telemetry后，只能在链路中采集到客户端（比如postman）访问bkcmdb服务端这前半条链路，bkcmdb通过imroc/req访问蓝鲸CMDB的后半条链路现在还采集不到。</p></div><p>现在用postman访问bkcmdb</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">--location</span> <span class="token string">'http://&lt;bkcmdb-url&gt;/v1/project/search'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'Content-Type: application/json'</span> <span class="token punctuation">\</span><span class="token parameter variable">--data</span> <span class="token string">'{    "condition": {        "project": [ ]    },    "page": {        "limit": 100,        "sort": "-bk_inst_id",        "start": 0    }}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开jaeger前端页面，Service搜索fiops-bkcmdb，可以看到出现了一条链路，且链路中只有一个span，这个span就是客户端访问bkcmdb服务端的链路。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F2.png" alt=""></p><p>点击这条链路进入详情页，展开trace，地址栏url红框内是traceId，右下角红框是spanId<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F3.png" alt=""></p><p>到此示例工程就算成功开启了链路跟踪功能，但这样还不能满足我们的需求，我们还需要bkcmdb访问蓝鲸CMDB的链路。在继续修改代码之前，我们先来了解一下opentracing、opentelemetry的基本概念。</p><h2 id="OpenTracing">OpenTracing</h2><blockquote><p><a href="https://opentracing.io/">https://opentracing.io/</a></p></blockquote><p>分布式追踪为描述和分析跨进程事务、甚至是跨网络调用提供了一种解决方案。早在 2005 年，Google 就在内部部署了一套分布式追踪系统 Dapper，并发表了一篇论文《Dapper, a Large-Scale Distributed Systems Tracing Infrastructure》，阐述了该分布式追踪系统的设计和实现，可以视为分布式追踪领域的鼻祖。后来各家厂商公司受此启发，纷纷开源了自家的链路跟踪产品，如zipkin、Uber的jaeger等。但各家的分布式追踪方案互不兼容，于是就诞生了<strong>OpenTracing</strong>。OpenTracing 是一个 Library，定义了一套通用的数据上报接口，要求各个分布式追踪系统都来实现这套接口。</p><h3 id="数据模型">数据模型</h3><p>OpenTracing规范中定义了数据模型，可参考原始文档The OpenTracing Semantic Specification</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Causal relationships between Spans <span class="token keyword">in</span> a single Trace          <span class="token punctuation">[</span>Span A<span class="token punctuation">]</span>  ←←←<span class="token punctuation">(</span>the root span<span class="token punctuation">)</span>             <span class="token operator">|</span>      +------+------+      <span class="token operator">|</span>             <span class="token operator">|</span>  <span class="token punctuation">[</span>Span B<span class="token punctuation">]</span>      <span class="token punctuation">[</span>Span C<span class="token punctuation">]</span> ←←←<span class="token punctuation">(</span>Span C is a <span class="token variable"><span class="token variable">`</span>ChildOf<span class="token variable">`</span></span> Span A<span class="token punctuation">)</span>      <span class="token operator">|</span>             <span class="token operator">|</span>  <span class="token punctuation">[</span>Span D<span class="token punctuation">]</span>      +---+-------+               <span class="token operator">|</span>           <span class="token operator">|</span>           <span class="token punctuation">[</span>Span E<span class="token punctuation">]</span>    <span class="token punctuation">[</span>Span F<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>Span G<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>Span H<span class="token punctuation">]</span>                                       ↑                                       ↑                                       ↑                         <span class="token punctuation">(</span>Span G <span class="token variable"><span class="token variable">`</span>FollowsFrom<span class="token variable">`</span></span> Span F<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在OpenTracing模型中有三个基本概念：</p><ul><li>Trace：调用链，一次HTTP调用或者一次RPC调用（从起始到最后终止），一个调用链会分配一个全局唯一的TraceID</li><li>Span：每个调用链由多个Span组成。Span的含义是范围，可以理解为一个处理阶段（例如一次HTTP调用、一次数据库访问）。Span是一个分布式追踪的最小单位。Span和Span的关系称为Reference。下面是一个Span的结构。</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Span <span class="token keyword">struct</span> <span class="token punctuation">{</span>  ctx           spanContext  serviceName   <span class="token builtin">string</span>  operationName <span class="token builtin">string</span>  startTime     time<span class="token punctuation">.</span>Time  flag          <span class="token builtin">string</span>  children      <span class="token builtin">int</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Span会封装一组零个或多个key:value的Tags，用于标识一些想在链路中展示的数据</p><ul><li>SpanContext：保存链路的上下文信息[TraceID,SpanID,或者是其它想要传递的内容]实现了tracer接口</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> spanContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>  traceId <span class="token builtin">string</span>  spanId  <span class="token builtin">string</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Span之间的关系">Span之间的关系</h3><ul><li>ChildOf：两个Span可以组成父子关系</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>-Parent Span---------<span class="token punctuation">]</span>         <span class="token punctuation">[</span>-Child Span----<span class="token punctuation">]</span>    <span class="token punctuation">[</span>-Parent Span--------------<span class="token punctuation">]</span>         <span class="token punctuation">[</span>-Child Span A----<span class="token punctuation">]</span>          <span class="token punctuation">[</span>-Child Span B----<span class="token punctuation">]</span>        <span class="token punctuation">[</span>-Child Span C----<span class="token punctuation">]</span>         <span class="token punctuation">[</span>-Child Span D---------------<span class="token punctuation">]</span>         <span class="token punctuation">[</span>-Child Span E----<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>FollowsFrom：某些父Span在任何方面都不依赖子Span的结果</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>-Parent Span-<span class="token punctuation">]</span>  <span class="token punctuation">[</span>-Child Span-<span class="token punctuation">]</span>    <span class="token punctuation">[</span>-Parent Span--<span class="token punctuation">]</span>     <span class="token punctuation">[</span>-Child Span-<span class="token punctuation">]</span>    <span class="token punctuation">[</span>-Parent Span-<span class="token punctuation">]</span>                <span class="token punctuation">[</span>-Child Span-<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="OpenCensus">OpenCensus</h3><blockquote><p><a href="https://opencensus.io/">https://opencensus.io/</a></p></blockquote><p>OpenCensus是Google开源的，作为最早提出Tracing概念的公司，OpenCensus也是Google Dapper的社区版本。相对于OpenTracing只支持tracing，OpenCensus不仅支持tracing还支持metrics。OpenTracing只制定规范，OpenCensus不仅制定规范，还包含了Agent和Collector。</p><h2 id="OpenTelemetry">OpenTelemetry</h2><blockquote><p><a href="https://opentelemetry.io/">https://opentelemetry.io/</a></p></blockquote><p>为了更好的将Tracing、Metrics、Logging融合在一起，OpenTelemetry 诞生了。作为 CNCF 的孵化项目，OpenTelemetry 由 OpenTracing 和 OpenCensus 项目合并而成，是一组规范、API 接口、SDK、工具和集成。为众多开发人员带来 Metrics、Tracing、Loging 的统一标准，三者都有相同的元数据结构，可以轻松实现互相关联。</p><p>OpenTelemetry 与厂商、平台无关，不提供与可观测性相关的后端服务。可根据用户需求将可观测类数据导出到存储、查询、可视化等不同后端，如 Prometheus、Jaeger 、云厂商服务中。</p><p>有了基本概念以后，下来看看如何使用imroc/req在发送HTTP的时候加入tracing。</p><h3 id="自定义imroc-req中间件实现发送HTTP的trace跟踪">自定义imroc/req中间件实现发送HTTP的trace跟踪</h3><p>这里我们建一个HttpClient封装一下req。在svc目录下新建httpclient.go，并在里面新建一个结构体：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> HttpClient <span class="token keyword">struct</span> <span class="token punctuation">{</span>    <span class="token operator">*</span>req<span class="token punctuation">.</span>Client<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>定义NewHttpClient函数用于返回一个实例化的HttpClient，在OnBeforeRequest里定义请求发送前的动作，在OnAfterResponse里定义请求返回后的动作。到此为止都是常规操作，还没涉及到任何tracing动作。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 需要传入go-zero的Config对象</span><span class="token keyword">func</span> <span class="token function">NewHttpClient</span><span class="token punctuation">(</span>conf config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>HttpClient <span class="token punctuation">{</span>  headers <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>    <span class="token string">"BK_USER"</span><span class="token punctuation">:</span>                   <span class="token string">"admin"</span><span class="token punctuation">,</span>    <span class="token string">"HTTP_BLUEKING_SUPPLIER_ID"</span><span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span>  c <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>    <span class="token function">SetCommonHeaders</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetBaseURL</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"http://%s"</span><span class="token punctuation">,</span> conf<span class="token punctuation">.</span>BkcmdbUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>    <span class="token function">OnBeforeRequest</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>client <span class="token operator">*</span>req<span class="token punctuation">.</span>Client<span class="token punctuation">,</span> req <span class="token operator">*</span>req<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> req<span class="token punctuation">.</span>RetryAttempt <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span>      <span class="token punctuation">}</span>      req<span class="token punctuation">.</span><span class="token function">EnableDump</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>    <span class="token function">OnAfterResponse</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>client <span class="token operator">*</span>req<span class="token punctuation">.</span>Client<span class="token punctuation">,</span> res <span class="token operator">*</span>req<span class="token punctuation">.</span>Response<span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      responseCode <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>responseCode<span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>responseCode<span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> e <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            err <span class="token operator">=</span> errorx<span class="token punctuation">.</span><span class="token function">NewError</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span> res<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        ress <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span><span class="token function">UnmarshalJson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ress<span class="token punctuation">)</span>        err <span class="token operator">=</span> errorx<span class="token punctuation">.</span><span class="token function">NewError</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span> ress<span class="token punctuation">[</span><span class="token string">"message"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ress<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> res<span class="token punctuation">.</span>Err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        err <span class="token operator">=</span> errorx<span class="token punctuation">.</span><span class="token function">NewError</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> res<span class="token punctuation">.</span>Err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  logx<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"init req client %s success"</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>BaseURL<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token operator">&amp;</span>HttpClient<span class="token punctuation">{</span>    Client<span class="token punctuation">:</span> c<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来给结构体定义一个<code>SetTracer</code>方法用于设置tracing，这里用到了req的<code>WrapRoundTripFunc</code>用来给req自定义一个中间件，该中间件类似一个拦截器，可在请求发送前和响应后做一些集中处理的工作。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>HttpClient<span class="token punctuation">)</span> <span class="token function">SetTracer</span><span class="token punctuation">(</span>tracer trace<span class="token punctuation">.</span>Tracer<span class="token punctuation">)</span> <span class="token punctuation">{</span>  c<span class="token punctuation">.</span><span class="token function">WrapRoundTripFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>rt req<span class="token punctuation">.</span>RoundTripper<span class="token punctuation">)</span> req<span class="token punctuation">.</span>RoundTripFunc <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>req <span class="token operator">*</span>req<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token operator">*</span>req<span class="token punctuation">.</span>Response<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment">// Context().Value(key)可以从context中提取预先设定的值</span>      spanName<span class="token punctuation">,</span> ok <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span><span class="token string">"SpanName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>        spanName <span class="token operator">=</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token comment">// 如果没有预先设定SpanName，就以请求url作为SpanName</span>      <span class="token punctuation">}</span>      <span class="token comment">// 最关键的一步，启动span，并传入上下文context(来自于*req.Request)，会返回一个加入了span的context和一个span对象</span>      <span class="token boolean">_</span><span class="token punctuation">,</span> span <span class="token operator">:=</span> tracer<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spanName<span class="token punctuation">)</span>       <span class="token keyword">defer</span> span<span class="token punctuation">.</span><span class="token function">End</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 无论成功与否这里需要用End将span发射出去(发射到jaeger或zipkin)</span>      <span class="token comment">// 下面给span添加一些tags</span>      span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>        attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"http.url"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"http.method"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">,</span>        attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"http.request.header"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">HeaderToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Body<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>        span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>          attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"http.request.body"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token comment">// 下面这句话将流程交还给req去执行发送请求动作</span>      resp<span class="token punctuation">,</span> err <span class="token operator">=</span> rt<span class="token punctuation">.</span><span class="token function">RoundTrip</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>      <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span> <span class="token comment">// 失败了记录在span里</span>        span<span class="token punctuation">.</span><span class="token function">RecordError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        span<span class="token punctuation">.</span><span class="token function">SetStatus</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Error<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">}</span>      <span class="token comment">// 添加一些响应tags</span>      span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>        attribute<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">"http.status_code"</span><span class="token punctuation">,</span> resp<span class="token punctuation">.</span>StatusCode<span class="token punctuation">)</span><span class="token punctuation">,</span>        attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"http.response.header"</span><span class="token punctuation">,</span> resp<span class="token punctuation">.</span><span class="token function">HeaderToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"http.response.body"</span><span class="token punctuation">,</span> resp<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>封装好了HttpClient，接下来把它放入servicecontext方便被调用，并在servicecontext中实例化它</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>  Config        config<span class="token punctuation">.</span>Config  Client_bkcmdb <span class="token operator">*</span>HttpClient<span class="token punctuation">}</span> <span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>  client <span class="token operator">:=</span> <span class="token function">NewHttpClient</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// 实例化HttpClient</span>  client<span class="token punctuation">.</span><span class="token function">SetTracer</span><span class="token punctuation">(</span>otel<span class="token punctuation">.</span><span class="token function">Tracer</span><span class="token punctuation">(</span><span class="token string">"imroc/req"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 设置开启Trace，并用otel.Tracer("imroc/req")设置otel.library</span>  <span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>    Config<span class="token punctuation">:</span>        c<span class="token punctuation">,</span>    Client_bkcmdb<span class="token punctuation">:</span> client<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来封装一个蓝鲸CMDB接口的结构体</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> BkcmdbUtil <span class="token keyword">struct</span> <span class="token punctuation">{</span>  logx<span class="token punctuation">.</span>Logger  ctx    context<span class="token punctuation">.</span>Context  svcCtx <span class="token operator">*</span>ServiceContext<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">GetBkcmdbUtil</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>BkcmdbUtil <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&amp;</span>BkcmdbUtil<span class="token punctuation">{</span>    Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>    ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>    svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后以一个蓝鲸添加模型实例的接口为例</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>BkcmdbUtil<span class="token punctuation">)</span> <span class="token function">AddInstance</span><span class="token punctuation">(</span>tablename <span class="token builtin">string</span><span class="token punctuation">,</span> v <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token operator">*</span>types<span class="token punctuation">.</span>BkcmdbRes<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 下面这句话的核心是.Do(context.WithValue(b.ctx, "SpanName", "AddInstance"))</span>  <span class="token comment">// 通过调用context.WithValue给ctx设置SpanName，然后就可以在前文定义的中间件中用req.Context().Value("SpanName").(string)把SpanName取出来了</span>  err <span class="token operator">=</span> b<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Client_bkcmdb<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"/api/v3/create/instance/object/%s"</span><span class="token punctuation">,</span> tablename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetBody</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetResult</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>resp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">WithValue</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> <span class="token string">"SpanName"</span><span class="token punctuation">,</span> <span class="token string">"AddInstance"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Err  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    b<span class="token punctuation">.</span>Logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token keyword">return</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> resp<span class="token punctuation">.</span>Code <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>    b<span class="token punctuation">.</span>Logger<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"add %s instance failed: %v"</span><span class="token punctuation">,</span> tablename<span class="token punctuation">,</span> resp<span class="token punctuation">.</span>Message<span class="token punctuation">)</span>    <span class="token comment">// errorx是自定义的错误处理类</span>    err <span class="token operator">=</span> errorx<span class="token punctuation">.</span><span class="token function">NewDefaultError</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"add %s instance failed: %v"</span><span class="token punctuation">,</span> tablename<span class="token punctuation">,</span> resp<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token comment">// 返回值types.BkcmdbRes是自定义的返回结构体</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例代码写到这就可以了，接下来再用postman发起一次调用，打开jaeger页面，会发现一个链路里现在出现了两个span，其中一个是postman访问go-zero接口的span，第二个就是go-zero通过req访问蓝鲸CMDB的span。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F4.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F5.png" alt=""></p><h3 id="其它通用操作的trace跟踪">其它通用操作的trace跟踪</h3><p>有了如上示例，我们其实可以在任意操作前后打埋点（开启一个span），比如访问数据库、MongoDB、Redis、Elasticsearch、调用其它平台SDK（比如kubernetes client-go）等等，下来以Elasticsearch为例说明。</p><p>封装一个<code>EsUtil</code>用来操作elasticsearch</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> EsUtil <span class="token keyword">struct</span> <span class="token punctuation">{</span>  logx<span class="token punctuation">.</span>Logger  ctx    context<span class="token punctuation">.</span>Context  svcCtx <span class="token operator">*</span>ServiceContext  tracer trace<span class="token punctuation">.</span>Tracer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">GetEsUtil</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>EsUtil <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&amp;</span>EsUtil<span class="token punctuation">{</span>    Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>    ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>    svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>    tracer<span class="token punctuation">:</span> otel<span class="token punctuation">.</span><span class="token function">Tracer</span><span class="token punctuation">(</span><span class="token string">"go-elasticsearch"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在发起一个ES操作（例如插入一个文档）的前后打入埋点<code>startTracer</code>、<code>endTracer</code></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>es <span class="token operator">*</span>EsUtil<span class="token punctuation">)</span> <span class="token function">EsIndex</span><span class="token punctuation">(</span>index <span class="token builtin">string</span><span class="token punctuation">,</span> body <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> id <span class="token builtin">string</span><span class="token punctuation">,</span> ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>types<span class="token punctuation">.</span>EsAddResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  b<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>  es<span class="token punctuation">.</span>Logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">"es index request=%v"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>  span <span class="token operator">:=</span> es<span class="token punctuation">.</span><span class="token function">newSpan</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token comment">// 创建一个span</span>  <span class="token keyword">defer</span> span<span class="token punctuation">.</span><span class="token function">End</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 用End把span发射出去</span>  es<span class="token punctuation">.</span><span class="token function">startTracer</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> span<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span> <span class="token comment">// 请求前开启span</span>  res<span class="token punctuation">,</span> err <span class="token operator">:=</span> es<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Esclient<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>    index<span class="token punctuation">,</span>    bytes<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>    es<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Esclient<span class="token punctuation">.</span>Index<span class="token punctuation">.</span><span class="token function">WithDocumentID</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>    es<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Esclient<span class="token punctuation">.</span>Index<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>  <span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err  <span class="token punctuation">}</span>  <span class="token keyword">if</span> res<span class="token punctuation">.</span><span class="token function">IsError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    err <span class="token operator">=</span> errorx<span class="token punctuation">.</span><span class="token function">NewDefaultError</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"[%s] error indexing document ID=%v"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span>    es<span class="token punctuation">.</span><span class="token function">endTracer</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> span<span class="token punctuation">)</span> <span class="token comment">// 出错后结束span并写入错误信息</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> r types<span class="token punctuation">.</span>EsAddResponse <span class="token comment">// 自定义了es返回结构体</span>    json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>r<span class="token punctuation">)</span>    b<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    es<span class="token punctuation">.</span>Logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">"es index response=%v"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>    es<span class="token punctuation">.</span><span class="token function">endTracer</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span> b<span class="token punctuation">,</span> span<span class="token punctuation">)</span> <span class="token comment">// 正常返回结束span并写入返回值</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>r<span class="token punctuation">,</span> <span class="token boolean">nil</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>es <span class="token operator">*</span>EsUtil<span class="token punctuation">)</span> <span class="token function">newSpan</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>span trace<span class="token punctuation">.</span>Span<span class="token punctuation">)</span> <span class="token punctuation">{</span>  spanName<span class="token punctuation">,</span> ok <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span><span class="token string">"SpanName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>      spanName <span class="token operator">=</span> name  <span class="token punctuation">}</span>  <span class="token boolean">_</span><span class="token punctuation">,</span> span <span class="token operator">=</span> es<span class="token punctuation">.</span>tracer<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> spanName<span class="token punctuation">)</span>  <span class="token keyword">return</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>es <span class="token operator">*</span>EsUtil<span class="token punctuation">)</span> <span class="token function">startTracer</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> id<span class="token punctuation">,</span> action <span class="token builtin">string</span><span class="token punctuation">,</span> body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> span trace<span class="token punctuation">.</span>Span<span class="token punctuation">,</span> ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>  span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>    attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"elastic._index"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">,</span>    attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"elastic._id"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">,</span>    attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"elastic.action"</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">,</span>    attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"elastic.client.version"</span><span class="token punctuation">,</span> elasticsearch<span class="token punctuation">.</span>Version<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>    span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>        attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"elastic.request.body"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>es <span class="token operator">*</span>EsUtil<span class="token punctuation">)</span> <span class="token function">endTracer</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">,</span> status_code <span class="token builtin">int</span><span class="token punctuation">,</span> body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> span trace<span class="token punctuation">.</span>Span<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    span<span class="token punctuation">.</span><span class="token function">RecordError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    span<span class="token punctuation">.</span><span class="token function">SetStatus</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Error<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span>  <span class="token punctuation">}</span>  span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>    attribute<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">"elastic.status"</span><span class="token punctuation">,</span> status_code<span class="token punctuation">)</span><span class="token punctuation">,</span>    attribute<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"elastic.response.body"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，从go-zero的服务A接收到一个请求，到由当前服务A发送出去的第一跳操作（HTTP、Elasticsearch、数据库等）都可以在jaerger里看到trace了，大概长这样：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">microserviceA  <span class="token operator">|</span>  <span class="token operator">|</span>--<span class="token operator">&gt;</span> HTTP<span class="token punctuation">(</span>蓝鲸CMDB<span class="token punctuation">)</span>  <span class="token operator">|</span>--<span class="token operator">&gt;</span> Elasticsearch  <span class="token operator">|</span>--<span class="token operator">&gt;</span> PostgreSQL  <span class="token operator">|</span>--<span class="token operator">&gt;</span> HTTP<span class="token punctuation">(</span>蓝鲸CMDB<span class="token punctuation">)</span>  <span class="token operator">|</span>--<span class="token operator">&gt;</span> HTTP<span class="token punctuation">(</span>蓝鲸CMDB<span class="token punctuation">)</span>  <span class="token operator">|</span> ……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时我们发现，跨服务（A服务调用B服务）现在还是没有链路，单独看服务A的链路也有，服务B的链路也有，但AB没连起来。原因在于我们在链路传递参数的过程中，并没有把traceId、spanId传递到下一跳。自然下一跳和上一跳就没法连接起来了。</p><p>改造代码之前还是先看原理。</p><h3 id="Opentelemetry链路传递核心原理">Opentelemetry链路传递核心原理</h3><p>先看一张在HTTP通信下，trace如何进行链路传递参数<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F6.jpg" alt=""></p><p>链路传递数据时用到一个载体叫做propagators，什么是 Propagator？OpenTelemetry 是这样定义的</p><div class="note success no-icon"><p>Cross-cutting concerns send their state to the next process using Propagators, which are defined as objects used to read and write context data to and from messages exchanged by the applications.</p></div><p>大概意思就是：从系统的横向切入面看，通过定义一个可读可写的context对象，在应用间进行状态的传递。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2Fopentelemetry.png" alt=""></p><p>这里还有一个Baggage的概念，但是本文暂未涉及到，因此不再赘述，示例代码只需要propagator就可以满足需求了</p><h3 id="Propagator注入trace实现链路信息传递">Propagator注入trace实现链路信息传递</h3><p>服务A通过imroc/req调用服务B（HTTP调用），需要在服务A端HTTP发起之前给propagator注入载体(carrier)，并写入HTTP headers，如下代码</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>HttpClient<span class="token punctuation">)</span> <span class="token function">roundTripFunc</span><span class="token punctuation">(</span>rt req<span class="token punctuation">.</span>RoundTripper<span class="token punctuation">)</span> req<span class="token punctuation">.</span>RoundTripFunc <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>req <span class="token operator">*</span>req<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token operator">*</span>req<span class="token punctuation">.</span>Response<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 省略……</span>    spanCtx<span class="token punctuation">,</span> span <span class="token operator">:=</span> c<span class="token punctuation">.</span>Tracer<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spanName<span class="token punctuation">)</span> <span class="token comment">// 拿到关键的spanCtx</span>    <span class="token keyword">defer</span> span<span class="token punctuation">.</span><span class="token function">End</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 最关键的一句话，把spanCtx里的trace信息inject到载体propagation.HeaderCarrier里，并通过HTTP headers传输</span>    otel<span class="token punctuation">.</span><span class="token function">GetTextMapPropagator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Inject</span><span class="token punctuation">(</span>spanCtx<span class="token punctuation">,</span> propagation<span class="token punctuation">.</span><span class="token function">HeaderCarrier</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Headers<span class="token punctuation">)</span><span class="token punctuation">)</span>    span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>      <span class="token comment">// 省略……</span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在服务B端，从HTTP headers中提取trace信息到载体(<code>carrier</code>)，并放入<code>context</code>里，这样就完成了应用之间的链路传递。这部分功能go-zero已经默认实现了，当开启了<code>Telemetry</code>后，go-zero会通过内置的trace中间件从载体中提取trace信息，这部分源码如下（<a href="https://github.com/zeromicro/go-zero/blob/v1.5.2/rest/handler/tracehandler.go%EF%BC%89%EF%BC%9A">https://github.com/zeromicro/go-zero/blob/v1.5.2/rest/handler/tracehandler.go）：</a></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// TraceHandler return a middleware that process the opentelemetry.</span><span class="token keyword">func</span> <span class="token function">TraceHandler</span><span class="token punctuation">(</span>serviceName<span class="token punctuation">,</span> path <span class="token builtin">string</span><span class="token punctuation">,</span> opts <span class="token operator">...</span>TraceOption<span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Handler<span class="token punctuation">)</span> http<span class="token punctuation">.</span>Handler <span class="token punctuation">{</span>  <span class="token keyword">var</span> options traceOptions  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> opt <span class="token operator">:=</span> <span class="token keyword">range</span> opts <span class="token punctuation">{</span>    <span class="token function">opt</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>options<span class="token punctuation">)</span>  <span class="token punctuation">}</span>  ignorePaths <span class="token operator">:=</span> collection<span class="token punctuation">.</span><span class="token function">NewSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  ignorePaths<span class="token punctuation">.</span><span class="token function">AddStr</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>traceIgnorePaths<span class="token operator">...</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>next http<span class="token punctuation">.</span>Handler<span class="token punctuation">)</span> http<span class="token punctuation">.</span>Handler <span class="token punctuation">{</span>    tracer <span class="token operator">:=</span> otel<span class="token punctuation">.</span><span class="token function">Tracer</span><span class="token punctuation">(</span>trace<span class="token punctuation">.</span>TraceName<span class="token punctuation">)</span>    propagator <span class="token operator">:=</span> otel<span class="token punctuation">.</span><span class="token function">GetTextMapPropagator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">HandlerFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>      spanName <span class="token operator">:=</span> path      <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>spanName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        spanName <span class="token operator">=</span> r<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path      <span class="token punctuation">}</span>      <span class="token keyword">if</span> ignorePaths<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>spanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        next<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> r<span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">}</span>      ctx <span class="token operator">:=</span> propagator<span class="token punctuation">.</span><span class="token function">Extract</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> propagation<span class="token punctuation">.</span><span class="token function">HeaderCarrier</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>Header<span class="token punctuation">)</span><span class="token punctuation">)</span>      spanCtx<span class="token punctuation">,</span> span <span class="token operator">:=</span> tracer<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>        ctx<span class="token punctuation">,</span>        spanName<span class="token punctuation">,</span>        oteltrace<span class="token punctuation">.</span><span class="token function">WithSpanKind</span><span class="token punctuation">(</span>oteltrace<span class="token punctuation">.</span>SpanKindServer<span class="token punctuation">)</span><span class="token punctuation">,</span>        oteltrace<span class="token punctuation">.</span><span class="token function">WithAttributes</span><span class="token punctuation">(</span>semconv<span class="token punctuation">.</span><span class="token function">HTTPServerAttributesFromHTTPRequest</span><span class="token punctuation">(</span>            serviceName<span class="token punctuation">,</span> spanName<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span>      <span class="token keyword">defer</span> span<span class="token punctuation">.</span><span class="token function">End</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// convenient for tracking error messages</span>      propagator<span class="token punctuation">.</span><span class="token function">Inject</span><span class="token punctuation">(</span>spanCtx<span class="token punctuation">,</span> propagation<span class="token punctuation">.</span><span class="token function">HeaderCarrier</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      trw <span class="token operator">:=</span> <span class="token operator">&amp;</span>response<span class="token punctuation">.</span>WithCodeResponseWriter<span class="token punctuation">{</span>Writer<span class="token punctuation">:</span> w<span class="token punctuation">,</span> Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">}</span>      next<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>trw<span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>spanCtx<span class="token punctuation">)</span><span class="token punctuation">)</span>      span<span class="token punctuation">.</span><span class="token function">SetAttributes</span><span class="token punctuation">(</span>semconv<span class="token punctuation">.</span><span class="token function">HTTPAttributesFromHTTPStatusCode</span><span class="token punctuation">(</span>trw<span class="token punctuation">.</span>Code<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>      span<span class="token punctuation">.</span><span class="token function">SetStatus</span><span class="token punctuation">(</span>semconv<span class="token punctuation">.</span><span class="token function">SpanStatusFromHTTPStatusCodeAndSpanKind</span><span class="token punctuation">(</span>        trw<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> oteltrace<span class="token punctuation">.</span>SpanKindServer<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在打开jaeger页面，可以看到两个服务之间的链路已经连起来了<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F7.jpg" alt=""></p><p>展开GetProjects，可以看到注入的header长这样<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fgozerojaeger%2F8.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 可观测性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云原生链路跟踪工具Jaeger+OpenTelemetry Collector部署详解</title>
      <link href="/blog/posts/2128614243/"/>
      <url>/blog/posts/2128614243/</url>
      
        <content type="html"><![CDATA[<div class="note primary no-icon"><p>提到链路跟踪，或者叫全链路监控，或者叫APM(Application Performance Management)，具体含义和原理不赘述，开源方案有skywalking、zipkin、elasticapm等工具，商业产品有基调听云等等，但在云原生领域，也有一个CNCF已毕业项目jaeger同样发展迅速。</p></div><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2Fcncf_landscape.PNG" alt=""></p><p>本文将详细讲述如何在K8S环境部署一整套jaeger工具以实现链路跟踪。同时由于jaeger-ui里的monitor功能需要使用到OpenTelemetry Collector，因此本文将一并部署并讲解原理。</p><h2 id="Jaeger架构">Jaeger架构</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2Fjaeger_arch.png" alt=""></p><p>jaeger组件总共有四个：</p><ul><li>jaeger-agent</li><li>jaeger-collector</li><li>jaeger-query(ui)</li><li>jaeger-spark-dependencies</li></ul><p>其中jaeger-agent和应用部署在一个主机上或者一个容器pod里。在实际应用中，jaeger-agent通常已经集成到应用框架里了（如go-zero自带jaeger），或者由opentelemetry SDK（如kotlin或springboot）实现，因此无需额外再部署jaeger-agent。</p><p>jaeger-collector是收集trace的组件，它可提供多种收集方式，本文介绍两种：zipkin方式（监听在9411）和jaeger方式（监听在14268）。</p><p>jaeger将trace存储到数据库，可支持多种关系型和非关系型数据库，本文将使用elasticsearch-7.15做数据存储。</p><h2 id="Jaeger部署">Jaeger部署</h2><h3 id="部署jaeger-collector">部署jaeger-collector</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> collector    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> jaeger  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">deployment.kubernetes.io/revision</span><span class="token punctuation">:</span> <span class="token string">'15'</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger      <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> collector      <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> jaeger  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> collector        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> jaeger      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">kubesphere.io/restartedAt</span><span class="token punctuation">:</span> <span class="token string">'2023-04-04T07:05:11.313Z'</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration            <span class="token key atrule">items</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> collector                <span class="token key atrule">path</span><span class="token punctuation">:</span> collector.yaml            <span class="token key atrule">defaultMode</span><span class="token punctuation">:</span> <span class="token number">420</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector          <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span>            jaegertracing/jaeger<span class="token punctuation">-</span>collector<span class="token punctuation">:</span><span class="token number">1.43</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">'--config-file=/conf/collector.yaml'</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">14267</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">14268</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9411</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">14250</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPAN_STORAGE_TYPE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration                  <span class="token key atrule">key</span><span class="token punctuation">:</span> span<span class="token punctuation">-</span>storage<span class="token punctuation">-</span>type          <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration<span class="token punctuation">-</span>volume              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /conf          <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log          <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> default      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> default      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> 25%      <span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> 25%  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">progressDeadlineSeconds</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector  <span class="token key atrule">annotations</span><span class="token punctuation">:</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>tchannel      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">14267</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">14267</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">14268</span>  <span class="token comment">## jaeger agent通过http将trace送到此端口</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">14268</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>zipkin      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9411</span>  <span class="token comment">## opentelemetry通过http将trace送到此端口</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9411</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>grpc      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">14250</span>  <span class="token comment">## opentelemetry collector通过grpc将trace送到此端口</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">14250</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> collector    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> jaeger  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.96.73.35  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中用到的collector.yaml以configmap的方式挂载到容器的/conf/collector.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">## collector.yaml</span><span class="token key atrule">es</span><span class="token punctuation">:</span>  <span class="token key atrule">server-urls</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//es.xxx.io <span class="token comment">## 需要有一个es</span>  <span class="token key atrule">username</span><span class="token punctuation">:</span> elastic  <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">'***********'</span><span class="token key atrule">exporters</span><span class="token punctuation">:</span>  <span class="token key atrule">opentelemetry</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"otel-collector:55678"</span><span class="token key atrule">collector</span><span class="token punctuation">:</span>  <span class="token key atrule">zipkin</span><span class="token punctuation">:</span>    <span class="token key atrule">http-port</span><span class="token punctuation">:</span> <span class="token number">9411</span>  <span class="token comment">## zipkin方式收集trace</span>  <span class="token key atrule">jaeger</span><span class="token punctuation">:</span>    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">host-port</span><span class="token punctuation">:</span> 0.0.0.0<span class="token punctuation">:</span><span class="token number">14269</span>  <span class="token comment">## jaeger admin HTTP server（没用上）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="部署jaeger-query">部署jaeger-query</h3><p>jaeger-query是前端界面</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>query  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger    <span class="token key atrule">jaeger-infra</span><span class="token punctuation">:</span> query<span class="token punctuation">-</span>deployment  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">deployment.kubernetes.io/revision</span><span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger      <span class="token key atrule">jaeger-infra</span><span class="token punctuation">:</span> query<span class="token punctuation">-</span>pod  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger        <span class="token key atrule">jaeger-infra</span><span class="token punctuation">:</span> query<span class="token punctuation">-</span>pod      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">prometheus.io/port</span><span class="token punctuation">:</span> <span class="token string">'16686'</span>        <span class="token key atrule">prometheus.io/scrape</span><span class="token punctuation">:</span> <span class="token string">'true'</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration            <span class="token key atrule">items</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> query                <span class="token key atrule">path</span><span class="token punctuation">:</span> query.yaml            <span class="token key atrule">defaultMode</span><span class="token punctuation">:</span> <span class="token number">420</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>query          <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span>            jaegertracing/jaeger<span class="token punctuation">-</span>query<span class="token punctuation">:</span><span class="token number">1.43</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">'--config-file=/conf/query.yaml'</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">16686</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">16685</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">16687</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPAN_STORAGE_TYPE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration                  <span class="token key atrule">key</span><span class="token punctuation">:</span> span<span class="token punctuation">-</span>storage<span class="token punctuation">-</span>type            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> METRICS_STORAGE_TYPE              <span class="token key atrule">value</span><span class="token punctuation">:</span> prometheus            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> PROMETHEUS_SERVER_URL              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">'http://10.50.89.17:8080'</span>          <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration<span class="token punctuation">-</span>volume              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /conf          <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log          <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> 25%      <span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> 25%  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">progressDeadlineSeconds</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>query  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>query  <span class="token key atrule">annotations</span><span class="token punctuation">:</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>grpc      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">16685</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">16685</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>query      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">16686</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">16686</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>admin      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">16687</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">16687</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jaeger    <span class="token key atrule">jaeger-infra</span><span class="token punctuation">:</span> query<span class="token punctuation">-</span>pod  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.96.161.39  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中两个环境变量很重要：<br>METRICS_STORAGE_TYPE：设置此值为prometheus才能开启UI上的monitor页面<br>PROMETHEUS_SERVER_URL：设置prometheus地址，monitor数据将从该prometheus上获取<br>再设置一个ingress或者nodeport暴露query的16686端口即可<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F1.png" alt=""></p><p>此时还没有任何trace数据</p><h3 id="部署jaeger-spark-dependencies">部署jaeger-spark-dependencies</h3><p>这是一个计算链路图的组件，他周期性的从elasticsearch读取trace并计算依赖链路，然后再写回elasticsearch的jaeger-dependencies索引。</p><h2 id="应用接入">应用接入</h2><h3 id="go-zero应用接入">go-zero应用接入</h3><p>配置文件中增加jaeger相关模块：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Name</span><span class="token punctuation">:</span> Devops<span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0<span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">8888</span><span class="token key atrule">Timeout</span><span class="token punctuation">:</span> <span class="token number">60000</span><span class="token key atrule">Log</span><span class="token punctuation">:</span>  <span class="token key atrule">Encoding</span><span class="token punctuation">:</span> plain  <span class="token key atrule">Level</span><span class="token punctuation">:</span> debug <span class="token key atrule">Prometheus</span><span class="token punctuation">:</span>  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">10990</span>  <span class="token key atrule">Path</span><span class="token punctuation">:</span> /metrics<span class="token key atrule">Namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test<span class="token key atrule">Kubeconfig</span><span class="token punctuation">:</span> ./kubeconfig<span class="token key atrule">Environment</span><span class="token punctuation">:</span> local<span class="token key atrule">Telemetry</span><span class="token punctuation">:</span>  <span class="token key atrule">Name</span><span class="token punctuation">:</span> fiops<span class="token punctuation">-</span>devops  <span class="token key atrule">Endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//jaeger<span class="token punctuation">-</span>collector.jaeger<span class="token punctuation">-</span>test<span class="token punctuation">:</span>14268/api/traces  <span class="token key atrule">Sampler</span><span class="token punctuation">:</span> <span class="token number">1.0</span>  <span class="token key atrule">Batcher</span><span class="token punctuation">:</span> jaeger<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再在UI查看<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F2.png" alt=""></p><h3 id="opentelemetry接入">opentelemetry接入</h3><p>启动参数增加：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-Dotel.propagators</span><span class="token operator">=</span>b3-Dotel.instrumentation.common.default-enabled<span class="token operator">=</span>true-javaagent:/path/to/you/opentelemetry-javaagent.jar-Dotel.instrumentation.common.db-statement-sanitizer.enabled<span class="token operator">=</span>false<span class="token parameter variable">-Dotel.instrumentation.redisson.enabled</span><span class="token operator">=</span>false<span class="token parameter variable">-Dotel.metrics.exporter</span><span class="token operator">=</span>none <span class="token parameter variable">-Dotel.traces.exporter</span><span class="token operator">=</span>zipkin <span class="token parameter variable">-Dotel.exporter.zipkin.endpoint</span><span class="token operator">=</span>http://jaeger-collector.jaeger-test:9411/api/v2/spans<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意最后的zipkin.endpoint指向了jaeger-collector的9411端口</p><p>UI查看<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F3.png" alt=""></p><h2 id="elasticsearch配置">elasticsearch配置</h2><p>jaeger会在elasticsearch里创建三个索引模板：</p><ul><li>jaeger-service：存放所有已收集的serviceName</li><li>jaeger-span：存放trace数据，每个doc是一个span</li><li>Jaeger-dependencies：存放spark计算后的依赖图</li></ul><p>jaeger提供两种方式的索引管理，一个是rollover、一个是ILM</p><h3 id="rollover方式（默认方式）">rollover方式（默认方式）</h3><p>该方式jaeger默认每天创建一个带日期后缀的索引，如：jaeger-span-2023-04-04，可查看其数据：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"jaeger-span-2023-04-04"</span><span class="token punctuation">,</span>    <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>    <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"mu72SocBT2RQOvh7w_S0"</span><span class="token punctuation">,</span>    <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>    <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"traceID"</span> <span class="token operator">:</span> <span class="token string">"8323e388f8a172e5e404e6873906f4e4"</span><span class="token punctuation">,</span>      <span class="token property">"spanID"</span> <span class="token operator">:</span> <span class="token string">"229debb8161b9693"</span><span class="token punctuation">,</span>      <span class="token property">"operationName"</span> <span class="token operator">:</span> <span class="token string">"/shelltrade/(authenticate jwttokenfilterwithoutobject)/loadbycriteria"</span><span class="token punctuation">,</span>      <span class="token property">"references"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>          <span class="token property">"refType"</span> <span class="token operator">:</span> <span class="token string">"CHILD_OF"</span><span class="token punctuation">,</span>          <span class="token property">"traceID"</span> <span class="token operator">:</span> <span class="token string">"8323e388f8a172e5e404e6873906f4e4"</span><span class="token punctuation">,</span>          <span class="token property">"spanID"</span> <span class="token operator">:</span> <span class="token string">"453b0488ff74aca4"</span>        <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"startTime"</span> <span class="token operator">:</span> <span class="token number">1680589895699132</span><span class="token punctuation">,</span>      <span class="token property">"startTimeMillis"</span> <span class="token operator">:</span> <span class="token number">1680589895699</span><span class="token punctuation">,</span>      <span class="token property">"duration"</span> <span class="token operator">:</span> <span class="token number">26024</span><span class="token punctuation">,</span>      <span class="token property">"tags"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>          <span class="token property">"key"</span> <span class="token operator">:</span> <span class="token string">"http.user_agent"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>          <span class="token property">"value"</span> <span class="token operator">:</span> <span class="token string">"Ktor client"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          <span class="token property">"key"</span> <span class="token operator">:</span> <span class="token string">"net.host.name"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>          <span class="token property">"value"</span> <span class="token operator">:</span> <span class="token string">"trd-http-server-6644f77644-gdx4x"</span>        <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"logs"</span> <span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"process"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"serviceName"</span> <span class="token operator">:</span> <span class="token string">"trd-http-server"</span><span class="token punctuation">,</span>        <span class="token property">"tags"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            <span class="token property">"key"</span> <span class="token operator">:</span> <span class="token string">"ip"</span><span class="token punctuation">,</span>            <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"int64"</span><span class="token punctuation">,</span>            <span class="token property">"value"</span> <span class="token operator">:</span> <span class="token string">"168464409"</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于rollover配置参考：<br><a href="https://www.jaegertracing.io/docs/1.43/deployment/#elasticsearch-rollover">https://www.jaegertracing.io/docs/1.43/deployment/#elasticsearch-rollover</a></p><h3 id="ILM方式（推荐）">ILM方式（推荐）</h3><h4 id="创建策略">创建策略</h4><p>手工在ES创建一个ILM策略，名称必须叫：<code>jaeger-ilm-policy</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-X</span> PUT http://ESHOST:9200/_ilm/policy/jaeger-ilm-policy <span class="token punctuation">\</span><span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json; charset=utf-8'</span> <span class="token punctuation">\</span>--data-binary @- <span class="token operator">&lt;&lt;</span> <span class="token string">EOF{  "policy": {    "phases": {      "hot": {        "min_age": "0ms",        "actions": {          "rollover": {            "max_age": "1d"          },          "set_priority": {            "priority": 100          }        }      },      "delete": {        "min_age": "3d",        "actions": {          "delete": {}        }      }    }  }}EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="初始化索引">初始化索引</h4><p>在K8S创建Job，配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>es<span class="token punctuation">-</span>rollover  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> es<span class="token punctuation">-</span>rollover<span class="token punctuation">-</span>container        <span class="token key atrule">image</span><span class="token punctuation">:</span> jaegertracing/jaeger<span class="token punctuation">-</span>es<span class="token punctuation">-</span>rollover<span class="token punctuation">:</span><span class="token number">1.43</span>        <span class="token key atrule">args</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token string">'--es.username=elastic'</span>          <span class="token punctuation">-</span> <span class="token string">'--es.password=DtvUvl7k80bX5aL9'</span>          <span class="token punctuation">-</span> init          <span class="token punctuation">-</span> <span class="token string">'http://es.xxx.io'</span>        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ES_USE_ILM            <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">'true'</span>        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">limits</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 200m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 200Mi          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 100Mi        <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log        <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> default      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> default      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler  <span class="token key atrule">parallelism</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">completions</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">backoffLimit</span><span class="token punctuation">:</span> <span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置collector和query参数">配置collector和query参数</h4><p>先将jaeger-collector的pod副本降为0，使得collector不再往ES写入，然后删除之前已经存在的三个index template和所有jaeger-开头的索引。然后在jaeger-collector和jaeger-query的启动参数加上<code>--es.use-ilm=true</code>和<code>--es.use-aliases=true</code>，或者在它们的yaml配置文件里增加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">es</span><span class="token punctuation">:</span>  <span class="token key atrule">use-ilm</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">use-aliases</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>做完上面的步骤后调大jaeger-collector的pod副本数，观察ES重新创建了三个index template，并且已经自动关联上了上一步手动创建的ILM policy<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F4.jpg" alt=""></p><p>观察索引已经出现了-000001，配置成功<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F5.jpg" alt=""></p><p>关于ILM配置参考：<br><a href="https://www.jaegertracing.io/docs/1.43/deployment/#elasticsearch-ilm-support">https://www.jaegertracing.io/docs/1.43/deployment/#elasticsearch-ilm-support</a></p><h2 id="Service-Performance-Monitoring-SPM">Service Performance Monitoring (SPM)</h2><p>jaeger还可对trace进行聚合统计，计算出RED(Request, Error, Duration) metrics，并展示在UI的monitor页面。<br>此功能依赖另外一个组件OpenTelemetry Collector，接入后整体流程如下：<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F6.png" alt=""></p><p>此时应用不再将trace发往jaeger-collector，而是将trace发送到OpenTelemetry Collector（下文简称otel-collocter），otel-collocter分两路走，一路将trace原封不动发送到jaeger-collocter（由它去展示trace），另一路经过它自己内部的一个pipeline，计算出calls_total、latency_bucket等metrics，并通过自己的8889/metrics暴露出去，prometheus配置一个job采集它的8889/metrics，然后jaeger-query再去prometheus取回这些metrics，并展示到UI的monitor页面。</p><p>参考：<a href="https://github.com/jaegertracing/jaeger/tree/main/docker-compose/monitor">https://github.com/jaegertracing/jaeger/tree/main/docker-compose/monitor</a></p><h3 id="部署OpenTelemetry-Collector">部署OpenTelemetry Collector</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">deployment.kubernetes.io/revision</span><span class="token punctuation">:</span> <span class="token string">'51'</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">kubesphere.io/restartedAt</span><span class="token punctuation">:</span> <span class="token string">'2023-04-04T09:05:57.517Z'</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>configuration            <span class="token key atrule">defaultMode</span><span class="token punctuation">:</span> <span class="token number">420</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>container          <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span>            otel/opentelemetry<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>contrib<span class="token punctuation">:</span>0.74.0          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">'--config'</span>            <span class="token punctuation">-</span> /etc/otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>config.yml          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>port              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">4317</span>  <span class="token comment">## 此端口没用上</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8888</span>  <span class="token comment">## otel-collector自己的metrics</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> exporter       <span class="token comment">## otel-collector计算trace统计值后通过此端口暴露出去</span>              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8889</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> collector      <span class="token comment">## 应用向otel-collector:14278发送trace数据</span>              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">14278</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> zipkin         <span class="token comment">## 应用通过zipkin方式发送trace到9411</span>              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9411</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">limits</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 200m              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 500Mi            <span class="token key atrule">requests</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 200Mi          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>volume              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>config.yml              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>config.yml          <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log          <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> default      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> default      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> 25%      <span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> 25%  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">progressDeadlineSeconds</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>test  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">kubesphere.io/creator</span><span class="token punctuation">:</span> fanpengfei<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span><span class="token number">4317</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">4317</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">4317</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span><span class="token number">8888</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8888</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8888</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span><span class="token number">14278</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">14278</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">14278</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span><span class="token number">8889</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8889</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8889</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span><span class="token number">55678</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">55678</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">55678</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span>zipkin      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9411</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9411</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> otel<span class="token punctuation">-</span>collector  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.96.7.76  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>otel-collector的配置文件如下。一个otel-collector由receivers、exporters、processors三部分组成，其中receivers定义了jaeger输入(监听在14278)、zipkin输入(监听在9411)和otlp输入(本文未使用otlp)。exporters定义了输出有三条路径，prometheus(即普米从本机 <a href="http://xx:8889/metrics">http://xx:8889/metrics</a> 采走)、zipkin(zipkin方式过来的trace统计计算需要发送到本机监听的9411)、jaeger(trace原样输出到jaeger)。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">## otel-collector-config.yml</span><span class="token key atrule">receivers</span><span class="token punctuation">:</span>  <span class="token key atrule">jaeger</span><span class="token punctuation">:</span>    <span class="token key atrule">protocols</span><span class="token punctuation">:</span>      <span class="token key atrule">thrift_http</span><span class="token punctuation">:</span>        <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"0.0.0.0:14278"</span>  <span class="token key atrule">zipkin</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"0.0.0.0:9411"</span>  <span class="token key atrule">otlp</span><span class="token punctuation">:</span>    <span class="token key atrule">protocols</span><span class="token punctuation">:</span>      <span class="token key atrule">grpc</span><span class="token punctuation">:</span>      <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token comment">## Dummy receiver that's never used, because a pipeline is required to have one.</span>  <span class="token key atrule">otlp/spanmetrics</span><span class="token punctuation">:</span>    <span class="token key atrule">protocols</span><span class="token punctuation">:</span>      <span class="token key atrule">grpc</span><span class="token punctuation">:</span>        <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"localhost:65535"</span><span class="token key atrule">exporters</span><span class="token punctuation">:</span>  <span class="token key atrule">prometheus</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"0.0.0.0:8889"</span>  <span class="token key atrule">zipkin</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"http://localhost:9411/api/v2/spans"</span>  <span class="token key atrule">jaeger</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"jaeger-collector:14250"</span>    <span class="token key atrule">tls</span><span class="token punctuation">:</span>      <span class="token key atrule">insecure</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">processors</span><span class="token punctuation">:</span>  <span class="token key atrule">batch</span><span class="token punctuation">:</span>  <span class="token key atrule">spanmetrics</span><span class="token punctuation">:</span>    <span class="token key atrule">metrics_exporter</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">service</span><span class="token punctuation">:</span>  <span class="token key atrule">pipelines</span><span class="token punctuation">:</span>    <span class="token key atrule">traces</span><span class="token punctuation">:</span>      <span class="token key atrule">receivers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>jaeger<span class="token punctuation">,</span> zipkin<span class="token punctuation">]</span>      <span class="token key atrule">processors</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>spanmetrics<span class="token punctuation">,</span> batch<span class="token punctuation">]</span>      <span class="token key atrule">exporters</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>jaeger<span class="token punctuation">]</span>    <span class="token comment">## The exporter name in this pipeline must match the spanmetrics.metrics_exporter name.</span>    <span class="token comment">## The receiver is just a dummy and never used; added to pass validation requiring at least one receiver in a pipeline.</span>    <span class="token key atrule">metrics/spanmetrics</span><span class="token punctuation">:</span>      <span class="token key atrule">receivers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>otlp/spanmetrics<span class="token punctuation">]</span>      <span class="token key atrule">exporters</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>prometheus<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="对接prometheus">对接prometheus</h3><p>应用发送trace到otel-collector以后，可在otel-collector的8889看到metrics，说明聚合统计已经生效：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> http:/otel-collector:8889/metrics<span class="token comment">## HELP calls_total </span><span class="token comment">## TYPE calls_total counter</span>calls_total<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/callback"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span><span class="token punctuation">}</span> <span class="token number">1</span>calls_total<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/checkjwtinredis"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span><span class="token punctuation">}</span> <span class="token number">840</span>calls_total<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/getobjectlist"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span><span class="token punctuation">}</span> <span class="token number">74</span><span class="token comment">## HELP latency </span><span class="token comment">## TYPE latency histogram</span>latency_bucket<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/callback"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span>,le<span class="token operator">=</span><span class="token string">"2"</span><span class="token punctuation">}</span> <span class="token number">0</span>latency_bucket<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/callback"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span>,le<span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">}</span> <span class="token number">0</span>latency_bucket<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/callback"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span>,le<span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">}</span> <span class="token number">0</span>latency_sum<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/callback"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span><span class="token punctuation">}</span> <span class="token number">192.146</span>latency_count<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/callback"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span><span class="token punctuation">}</span> <span class="token number">1</span>latency_bucket<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/checkjwtinredis"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span>,le<span class="token operator">=</span><span class="token string">"2"</span><span class="token punctuation">}</span> <span class="token number">816</span>latency_bucket<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/checkjwtinredis"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span>,le<span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">}</span> <span class="token number">832</span>latency_bucket<span class="token punctuation">{</span>operation<span class="token operator">=</span><span class="token string">"/checkjwtinredis"</span>,service_name<span class="token operator">=</span><span class="token string">"auth-http-server"</span>,span_kind<span class="token operator">=</span><span class="token string">"SPAN_KIND_SERVER"</span>,status_code<span class="token operator">=</span><span class="token string">"STATUS_CODE_UNSET"</span>,le<span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">}</span> <span class="token number">834</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可在prometheus.yaml配置job：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">## prometheus.yaml</span><span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> aggregated<span class="token punctuation">-</span>trace<span class="token punctuation">-</span>metrics    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'otel-exporter.jaeger-test.xxx.io'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>otel-exporter.jaeger-test.xxx.io是我的K8S给otel-collector:8889配置的ingress地址<br>重新加载配置后，可在jaeger-ui的monitor页面查看<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fjaeger%2F7.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 可观测性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云原生监控Prometheus-Operator部署配置</title>
      <link href="/blog/posts/1120038761/"/>
      <url>/blog/posts/1120038761/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2><p>github地址：<br><a href="https://github.com/prometheus-operator/prometheus-operator">https://github.com/prometheus-operator/prometheus-operator</a></p><p>安装方式可选方式：</p><ul><li>源码yaml安装</li><li>helm安装：k8sv1.21+以后新版的helm charts为此地址：<a href="https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack">https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack</a></li></ul><h2 id="安装部署prometheus-operator">安装部署prometheus-operator</h2><p>本文使用helm方式安装prometheus-operator</p><h3 id="下载安装包">下载安装包</h3><ol><li>添加helm仓库</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> prometheus-community https://prometheus-community.github.io/helm-charts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>搜索包，排第一的kube-prometheus-stack是现在最新的的promethes-operator charts</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm search repo prometheusNAME                                                      CHART VERSION        APP VERSION        DESCRIPTION                                       prometheus-community/kube-prometheus-stack                <span class="token number">42.2</span>.0               <span class="token number">0.60</span>.1             kube-prometheus-stack collects Kubernetes manif<span class="token punctuation">..</span>.prometheus-community/prometheus                           <span class="token number">19.0</span>.0               v2.40.5            Prometheus is a monitoring system and <span class="token function">time</span> seri<span class="token punctuation">..</span>.prometheus-community/prometheus-adapter                   <span class="token number">3.4</span>.2                v0.10.0            A Helm chart <span class="token keyword">for</span> k8s prometheus adapter   ……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>下载包</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm pull prometheus-community/kube-prometheus-stack <span class="token parameter variable">--version</span><span class="token operator">=</span><span class="token number">42.2</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置value-yaml">配置value.yaml</h3><h3 id="安装charts">安装charts</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create ns prometheushelm <span class="token function">install</span> prometheus-stack kube-prometheus-stack-42.2.0.tgz <span class="token parameter variable">-n</span> prometheus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看命名空间prometheus下的各资源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl get all <span class="token parameter variable">-n</span> prometheusNAME                                                         READY   STATUS             RESTARTS      AGEpod/alertmanager-prometheus-stack-kube-prom-alertmanager-0   <span class="token number">2</span>/2     Running            <span class="token number">1</span> <span class="token punctuation">(</span>32s ago<span class="token punctuation">)</span>   103spod/prometheus-prometheus-stack-kube-prom-prometheus-0       <span class="token number">2</span>/2     Running            <span class="token number">0</span>             102spod/prometheus-stack-grafana-67f9c54566-cqqdg                <span class="token number">3</span>/3     Running            <span class="token number">0</span>             107spod/prometheus-stack-kube-prom-admission-patch-4z5ks         <span class="token number">0</span>/1     CrashLoopBackOff   <span class="token number">3</span> <span class="token punctuation">(</span>36s ago<span class="token punctuation">)</span>   102spod/prometheus-stack-kube-prom-operator-689885654-c2znh      <span class="token number">1</span>/1     Running            <span class="token number">0</span>             107spod/prometheus-stack-kube-state-metrics-59fbfbfd5f-mjjjn     <span class="token number">0</span>/1     ImagePullBackOff   <span class="token number">0</span>             107spod/prometheus-stack-prometheus-node-exporter-bdxrq          <span class="token number">1</span>/1     Running            <span class="token number">0</span>             107spod/prometheus-stack-prometheus-node-exporter-j8fpn          <span class="token number">1</span>/1     Running            <span class="token number">0</span>             107spod/prometheus-stack-prometheus-node-exporter-jf65w          <span class="token number">1</span>/1     Running            <span class="token number">0</span>             107spod/prometheus-stack-prometheus-node-exporter-rms29          <span class="token number">1</span>/1     Running            <span class="token number">0</span>             107sNAME                                                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                      AGEservice/alertmanager-operated                       ClusterIP   None             <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9093</span>/TCP,9094/TCP,9094/UDP   103sservice/prometheus-operated                         ClusterIP   None             <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9090</span>/TCP                     102sservice/prometheus-stack-grafana                    ClusterIP   <span class="token number">10.100</span>.46.155    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>/TCP                       107sservice/prometheus-stack-kube-prom-alertmanager     ClusterIP   <span class="token number">10.110</span>.149.34    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9093</span>/TCP                     107sservice/prometheus-stack-kube-prom-operator         ClusterIP   <span class="token number">10.105</span>.139.158   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP                      107sservice/prometheus-stack-kube-prom-prometheus       ClusterIP   <span class="token number">10.109</span>.41.102    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9090</span>/TCP                     107sservice/prometheus-stack-kube-state-metrics         ClusterIP   <span class="token number">10.96</span>.77.114     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">8080</span>/TCP                     107sservice/prometheus-stack-prometheus-node-exporter   ClusterIP   <span class="token number">10.98</span>.46.213     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9100</span>/TCP                     107sNAME                                                       DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGEdaemonset.apps/prometheus-stack-prometheus-node-exporter   <span class="token number">4</span>         <span class="token number">4</span>         <span class="token number">4</span>       <span class="token number">4</span>            <span class="token number">4</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>          107sNAME                                                  READY   UP-TO-DATE   AVAILABLE   AGEdeployment.apps/prometheus-stack-grafana              <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           107sdeployment.apps/prometheus-stack-kube-prom-operator   <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           107sdeployment.apps/prometheus-stack-kube-state-metrics   <span class="token number">0</span>/1     <span class="token number">1</span>            <span class="token number">0</span>           107sNAME                                                             DESIRED   CURRENT   READY   AGEreplicaset.apps/prometheus-stack-grafana-67f9c54566              <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">1</span>       107sreplicaset.apps/prometheus-stack-kube-prom-operator-689885654    <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">1</span>       107sreplicaset.apps/prometheus-stack-kube-state-metrics-59fbfbfd5f   <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">0</span>       107sNAME                                                                    READY   AGEstatefulset.apps/alertmanager-prometheus-stack-kube-prom-alertmanager   <span class="token number">1</span>/1     103sstatefulset.apps/prometheus-prometheus-stack-kube-prom-prometheus       <span class="token number">1</span>/1     102sNAME                                                   COMPLETIONS   DURATION   AGEjob.batch/prometheus-stack-kube-prom-admission-patch   <span class="token number">0</span>/1           102s       102s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现有两个pod起不来。通过describe发现kube-state-metrics是镜像拉不下来，直接编辑<code>deployment.apps/prometheus-stack-kube-state-metrics</code>修改image</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">image</span><span class="token punctuation">:</span> registry.k8s.io/kube<span class="token punctuation">-</span>state<span class="token punctuation">-</span>metrics/kube<span class="token punctuation">-</span>state<span class="token punctuation">-</span>metrics<span class="token punctuation">:</span>v2.7.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/kube<span class="token punctuation">-</span>state<span class="token punctuation">-</span>metrics<span class="token punctuation">:</span>2.7.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>保存后deployment会自动重新创建，等待一段时间后再看pod已经成功启动，kube-prom-admission-patch也自动好了。</p><h3 id="查看CRD">查看CRD</h3><p>operator会安装如下CRD</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl get crdNAME                                                  CREATED ATalertmanagerconfigs.monitoring.coreos.com             <span class="token number">2022</span>-12-04T13:46:48Zalertmanagers.monitoring.coreos.com                   <span class="token number">2022</span>-12-04T13:46:48Zpodmonitors.monitoring.coreos.com                     <span class="token number">2022</span>-12-04T13:46:48Zprobes.monitoring.coreos.com                          <span class="token number">2022</span>-12-04T13:46:48Zprometheuses.monitoring.coreos.com                    <span class="token number">2022</span>-12-04T13:46:48Zprometheusrules.monitoring.coreos.com                 <span class="token number">2022</span>-12-04T13:46:48Zservicemonitors.monitoring.coreos.com                 <span class="token number">2022</span>-12-04T13:46:48Zthanosrulers.monitoring.coreos.com                    <span class="token number">2022</span>-12-04T13:46:49Z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通过operator安装prometheus">通过operator安装prometheus</h2><p>Helm install以后，会自动用operator在prometheus命名空间下安装一个Prometheus CR，可查看：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl get Prometheus <span class="token parameter variable">-n</span> prometheus NAME                                    VERSION   DESIRED   READY   RECONCILED   AVAILABLE   AGEprometheus-stack-kube-prom-prometheus   v2.39.1   <span class="token number">1</span>         <span class="token number">1</span>       True         True        12m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果没有安装，或者我们需要在其它ns下另外安装一个prometheus（适合于非集群管理员，拿不到管理员安装的prometheus），可提交一个如下CR</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> monitoring.coreos.com/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Prometheus<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">meta.helm.sh/release-name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack    <span class="token key atrule">meta.helm.sh/release-namespace</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2023-11-25T13:19:58Z"</span>  <span class="token key atrule">generation</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>prometheus<span class="token punctuation">-</span>stack<span class="token punctuation">-</span>prometheus    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/part-of</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>prometheus<span class="token punctuation">-</span>stack    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 42.2.0    <span class="token key atrule">chart</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>prometheus<span class="token punctuation">-</span>stack<span class="token punctuation">-</span>42.2.0    <span class="token key atrule">heritage</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">release</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span><span class="token number">1</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">alerting</span><span class="token punctuation">:</span>    <span class="token key atrule">alertmanagers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v2      <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack<span class="token punctuation">-</span>kube<span class="token punctuation">-</span>prom<span class="token punctuation">-</span>alertmanager      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> prometheus      <span class="token key atrule">pathPrefix</span><span class="token punctuation">:</span> /      <span class="token key atrule">port</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span>web  <span class="token key atrule">enableAdminAPI</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">evaluationInterval</span><span class="token punctuation">:</span> 30s  <span class="token key atrule">externalUrl</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//prometheus<span class="token punctuation">-</span>1.prometheus<span class="token punctuation">:</span><span class="token number">9090</span>  <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> quay.io/prometheus/prometheus<span class="token punctuation">:</span>v2.39.1  <span class="token key atrule">listenLocal</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">logFormat</span><span class="token punctuation">:</span> logfmt  <span class="token key atrule">logLevel</span><span class="token punctuation">:</span> info  <span class="token key atrule">paused</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">podMonitorNamespaceSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">podMonitorSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">release</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack  <span class="token key atrule">portName</span><span class="token punctuation">:</span> http<span class="token punctuation">-</span>web  <span class="token key atrule">probeNamespaceSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">probeSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">release</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">retention</span><span class="token punctuation">:</span> 10d  <span class="token key atrule">routePrefix</span><span class="token punctuation">:</span> /  <span class="token key atrule">ruleNamespaceSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">ruleSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">release</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack  <span class="token key atrule">scrapeInterval</span><span class="token punctuation">:</span> 30s  <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>    <span class="token key atrule">fsGroup</span><span class="token punctuation">:</span> <span class="token number">2000</span>    <span class="token key atrule">runAsGroup</span><span class="token punctuation">:</span> <span class="token number">2000</span>    <span class="token key atrule">runAsNonRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">1000</span>  <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack<span class="token punctuation">-</span>kube<span class="token punctuation">-</span>prom<span class="token punctuation">-</span>prometheus  <span class="token key atrule">serviceMonitorNamespaceSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">serviceMonitorSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">release</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>stack  <span class="token key atrule">shards</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">storage</span><span class="token punctuation">:</span>    <span class="token key atrule">volumeClaimTemplate</span><span class="token punctuation">:</span>      <span class="token key atrule">spec</span><span class="token punctuation">:</span>        <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> ReadWriteMany        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">storage</span><span class="token punctuation">:</span> 2Gi        <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>storage  <span class="token key atrule">version</span><span class="token punctuation">:</span> v2.39.1  <span class="token key atrule">walCompression</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其余Prometheus CR的参数，可用explain命令查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl explain Prometheus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="暴露服务">暴露服务</h3><p>默认安装的prometheus服务都是ClusterIP，可用Ingress、NodePort或LoadBalancer暴露出来，比如用NodePort：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl edit svc prometheus-stack-kube-prom-prometheus <span class="token parameter variable">-n</span> prometheus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将type: ClusterIP改为NodePort，查看端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl get svc <span class="token parameter variable">-n</span> prometheus NAME                                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                      AGEalertmanager-operated                       ClusterIP   None             <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9093</span>/TCP,9094/TCP,9094/UDP   25mprometheus-operated                         ClusterIP   None             <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9090</span>/TCP                     25mprometheus-stack-grafana                    ClusterIP   <span class="token number">10.100</span>.46.155    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>/TCP                       25mprometheus-stack-kube-prom-alertmanager     ClusterIP   <span class="token number">10.110</span>.149.34    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9093</span>/TCP                     25mprometheus-stack-kube-prom-operator         ClusterIP   <span class="token number">10.105</span>.139.158   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP                      25mprometheus-stack-kube-prom-prometheus       NodePort    <span class="token number">10.109</span>.41.102    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9090</span>:30633/TCP               25mprometheus-stack-kube-state-metrics         ClusterIP   <span class="token number">10.96</span>.77.114     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">8080</span>/TCP                     25mprometheus-stack-prometheus-node-exporter   ClusterIP   <span class="token number">10.98</span>.46.213     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9100</span>/TCP                     25m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就可以打开prometheus页面了：<br><a href="http://192.168.126.100:30633">http://192.168.126.100:30633</a><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F2.png" alt=""></p><h2 id="部署后问题">部署后问题</h2><h3 id="kubelet-10250端口不通">kubelet 10250端口不通</h3><p>解决办法：</p><ol><li>修改kube-controller-manager.yaml，将–bind-address改为0.0.0.0</li></ol><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F3.PNG" alt=""></p><ol start="2"><li>修改kube-scheduler.yaml，将–bind-address改为0.0.0.0</li></ol><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F4.PNG" alt=""></p><p>修改后解决</p><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F5.PNG" alt=""></p><h3 id="kube-proxy-10249端口不通">kube-proxy 10249端口不通</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F6.PNG" alt=""><br>解决办法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl edit configmap kube-proxy <span class="token parameter variable">-n</span> kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把metricsBindAddress修改成metricsBindAddress: 0.0.0.0:10249<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F7.png" alt=""><br>重启kube-proxy pod：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pods <span class="token parameter variable">-n</span> kube-system <span class="token operator">|</span> <span class="token function">grep</span> kube-proxy <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'{print $1}'</span><span class="token operator">|</span><span class="token function">xargs</span> kubectl delete pods <span class="token parameter variable">-n</span> kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="etcd-2181端口不通">etcd 2181端口不通</h3><p>解决办法：修改etcd.yaml<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F8.png" alt=""></p><h2 id="配置Grafana">配置Grafana</h2><p>Helm install好以后grafana已经自动装好，将prometheus-stack-grafana服务的类型改为NodePort后，查看grafana的admin密码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get secret prometheus-stack-grafana <span class="token parameter variable">-n</span> prometheus <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span>"<span class="token punctuation">{</span>.data.admin-pass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmonitor%2Fprometheus%2F9.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 可观测性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S入门系列之五：K8S授权与认证</title>
      <link href="/blog/posts/1057072950/"/>
      <url>/blog/posts/1057072950/</url>
      
        <content type="html"><![CDATA[<div class="note success no-icon"><p>本篇通过实验，创建一个仅能访问命名空间test的用户，并且只有list pod的权限。另外创建一个集群管理员用户，具有所有权限。</p></div><ol><li>新用户本地生成私钥和证书请求文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~$ kubectl create ns <span class="token builtin class-name">test</span>student@client:~$ <span class="token builtin class-name">cd</span> ~/.kube/student@client:~/.kube$ openssl genrsa <span class="token parameter variable">-out</span> fox-user.key <span class="token number">2048</span>student@client:~/.kube$ openssl rand <span class="token parameter variable">-writerand</span> ~/.randstudent@client:~/.kube$ openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> fox-user.key <span class="token parameter variable">-out</span> fox-user.csr <span class="token parameter variable">-subj</span> <span class="token string">"/CN=fox-user/O=kubeusers"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意上面步骤中的-subj参数，指定了在K8S中要新建的用户名为fox-user，角色类型为kubeusers(一个普通用户)<br>如果要创建<code>集群管理员用户</code>，则应写：“/CN=XXXXX/O=system:masters/O=system:authenticated”</p><ol start="2"><li>用户把证书请求文件发送给master节点管理员，私钥自己留存</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ <span class="token function">scp</span> fox-user.csr k8s-master:/tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>使用master节点的根CA为用户的证书请求文件签发证书</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@k8s-master:~<span class="token comment">## mv /tmp/fox-user.csr /etc/kubernetes/pki/ &amp;&amp; cd /etc/kubernetes/pki</span>root@k8s-master:/etc/kubernetes/pki<span class="token comment">## openssl x509 -req -in fox-user.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out fox-user.crt -days 365</span>root@k8s-master:/etc/kubernetes/pki<span class="token comment">## openssl x509 -in fox-user.crt -text -noout</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="4"><li>把签发完的证书和master根证书发回给用户</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@k8s-master:/etc/kubernetes/pki<span class="token comment">## scp fox-user.crt ca.crt student@client:~/.kube</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>在客户端设置集群入口</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl config set-cluster mycluster --embed-certs --certificate-authority<span class="token operator">=</span>ca.crt <span class="token parameter variable">--server</span><span class="token operator">=</span><span class="token string">"https://192.168.126.100:6443"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li>在客户端设置用户credentials</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl config set-credentials fox-user --embed-certs --client-certificate<span class="token operator">=</span>fox-user.crt --client-key<span class="token operator">=</span>fox-user.key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="7"><li>在客户端设置context</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl config set-context fox-user@mycluster <span class="token parameter variable">--cluster</span><span class="token operator">=</span>mycluster <span class="token parameter variable">--user</span><span class="token operator">=</span>fox-user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="8"><li>在客户端切换上下文并测试</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl config use-context fox-user@myclusterstudent@client:~/.kube$ kubectl get nodesError from server <span class="token punctuation">(</span>Forbidden<span class="token punctuation">)</span>: nodes is forbidden: User <span class="token string">"fox-user"</span> cannot list resource <span class="token string">"nodes"</span> <span class="token keyword">in</span> API group <span class="token string">""</span> at the cluster scope<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到一个普通用户并不能执行get nodes这样的操作</p><ol start="9"><li>创建一个角色仅能在namespace=test中执行list pods操作<br>注意要先回到管理员context</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl config use-context kubernetes-admin@kubernetesstudent@client:~/.kube$ kubectl create role fox-role <span class="token parameter variable">--resource</span><span class="token operator">=</span><span class="token string">"pod"</span> <span class="token parameter variable">--verb</span><span class="token operator">=</span><span class="token string">"list"</span> <span class="token parameter variable">-n</span> <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="10"><li>创建一个rolebinding，将上述role绑定到用户fox-user</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl create rolebinding fox-rolebinding <span class="token parameter variable">--role</span><span class="token operator">=</span>fox-role <span class="token parameter variable">--user</span><span class="token operator">=</span>fox-user <span class="token parameter variable">-n</span> <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="11"><li>至此，用户fox-user已绑定到fox-role这个角色，而这个角色的权限仅限于test中list pod，切换上下文，验证</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl config use-context fox-user@myclusterstudent@client:~/.kube$ kubectl get pods <span class="token parameter variable">-n</span> <span class="token builtin class-name">test</span>No resources found <span class="token keyword">in</span> <span class="token builtin class-name">test</span> namespace.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>试一下list services</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">student@client:~/.kube$ kubectl get svc <span class="token parameter variable">-n</span> <span class="token builtin class-name">test</span>Error from server <span class="token punctuation">(</span>Forbidden<span class="token punctuation">)</span>: services is forbidden: User <span class="token string">"fox-user"</span> cannot list resource <span class="token string">"services"</span> <span class="token keyword">in</span> API group <span class="token string">""</span> <span class="token keyword">in</span> the namespace <span class="token string">"test"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S存储系列之三：K8S Rook Ceph StorageClass</title>
      <link href="/blog/posts/4198581200/"/>
      <url>/blog/posts/4198581200/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://rook.io/">https://rook.io/</a></p></blockquote><h2 id="什么是Rook">什么是Rook</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fstorage%2Frook-home.png" alt=""><br>Rook是CNCF已经毕业的云原生存储方案<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fstorage%2Fwhat_is_rook.png" alt=""></p><h2 id="前置条件">前置条件</h2><p>Rook Ceph将每个k8s节点上的块存储联合成一体作为分布式存储，为k8s提供StorageClass，这样的k8s节点由于同时提供了计算、网络、存储，因此也被称作为超融合节点。<br>为了使用Rook Ceph，k8s集群必须满足的条件有：</p><ul><li>至少三个node</li><li>节点提供块存储，满足下列条件之一<ul><li>Raw devices (no partitions or formatted filesystems)</li><li>Raw partitions (no formatted filesystem)</li><li>PVs available from a storage class in block mode</li></ul></li></ul><p>我们选择第一个方式提供Raw devices，为每个节点添加一块盘sdb，不对该盘做任何分区操作，也不格式化文件系统：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsblk <span class="token parameter variable">-f</span>NAME                      FSTYPE      LABEL UUID                                   FSAVAIL FSUSE% MOUNTPOINT                                                      <span class="token number">0</span>   <span class="token number">100</span>% /snap/snapd/15904sda├─sda1├─sda2                    ext4              00c05ca1-7dd5-41d1-8ae6-c7deb56cde25    <span class="token number">800</span>.9M    <span class="token number">11</span>% /boot└─sda3                    LVM2_member       1NgIKw-CZDb-6t8t-cIMZ-iHYa-jACV-MQIYnR  └─ubuntu--vg-ubuntu--lv ext4              6686cd41-a6f4-45a7-a564-5581507cd252     <span class="token number">10</span>.7G    <span class="token number">34</span>% /sdb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用lsblk看sdb没有FSTYPE</p><h2 id="部署Rook-Operator">部署Rook Operator</h2><p>下载资源文件，并部署</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone --single-branch <span class="token parameter variable">--branch</span> v1.9.4 https://github.com/rook/rook.git<span class="token builtin class-name">cd</span> rook/deploy/exampleskubectl create <span class="token parameter variable">-f</span> crds.yaml <span class="token parameter variable">-f</span> common.yaml <span class="token parameter variable">-f</span> operator.yamlkubectl get pods <span class="token parameter variable">-n</span> rook-cephrook-ceph-operator-799cd7d684-fzwxb                               <span class="token number">1</span>/1     Running     <span class="token number">0</span>              18h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署Rook-Ceph-Cluster">部署Rook Ceph Cluster</h2><p>编辑cluster.yaml，修改spec.storage.deviceFilter，改为sdb。deviceFilter还可以写正则表达式，详见：<a href="https://rook.io/docs/rook/v1.9/CRDs/ceph-cluster-crd/?h=devicefilter#storage-selection-settings">https://rook.io/docs/rook/v1.9/CRDs/ceph-cluster-crd/?h=devicefilter#storage-selection-settings</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">……    <span class="token key atrule">storage</span><span class="token punctuation">:</span> <span class="token comment">## cluster level storage configuration and selection</span>    <span class="token key atrule">useAllNodes</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">useAllDevices</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">deviceFilter</span><span class="token punctuation">:</span> sdb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来部署cluster</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> rook/deploy/exampleskubectl apply <span class="token parameter variable">-f</span> cluster.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看pod是否运行。注意下面很多镜像都是从k8s.gcr.io下载的，需要翻墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pods <span class="token parameter variable">-n</span> rook-cephNAME                                                              READY   STATUS      RESTARTS         AGEcsi-cephfsplugin-jhtt7                                            <span class="token number">3</span>/3     Running     <span class="token number">3</span> <span class="token punctuation">(</span>21h ago<span class="token punctuation">)</span>      21hcsi-cephfsplugin-p4chb                                            <span class="token number">3</span>/3     Running     <span class="token number">4</span> <span class="token punctuation">(</span>26h ago<span class="token punctuation">)</span>      4d20hcsi-cephfsplugin-provisioner-7577bb4d59-dmv7m                     <span class="token number">6</span>/6     Running     <span class="token number">9</span> <span class="token punctuation">(</span>63m ago<span class="token punctuation">)</span>      19hcsi-cephfsplugin-provisioner-7577bb4d59-gr8qk                     <span class="token number">6</span>/6     Running     <span class="token number">13</span> <span class="token punctuation">(</span>4h10m ago<span class="token punctuation">)</span>   19hcsi-cephfsplugin-txhqp                                            <span class="token number">3</span>/3     Running     <span class="token number">2</span> <span class="token punctuation">(</span>25h ago<span class="token punctuation">)</span>      4d20hcsi-rbdplugin-5z5nd                                               <span class="token number">3</span>/3     Running     <span class="token number">3</span> <span class="token punctuation">(</span>21h ago<span class="token punctuation">)</span>      21hcsi-rbdplugin-cqnr7                                               <span class="token number">3</span>/3     Running     <span class="token number">4</span> <span class="token punctuation">(</span>25h ago<span class="token punctuation">)</span>      4d20hcsi-rbdplugin-provisioner-847b498845-bxswz                        <span class="token number">6</span>/6     Running     <span class="token number">9</span> <span class="token punctuation">(</span>63m ago<span class="token punctuation">)</span>      19hcsi-rbdplugin-provisioner-847b498845-vfplt                        <span class="token number">6</span>/6     Running     <span class="token number">14</span> <span class="token punctuation">(</span>4h10m ago<span class="token punctuation">)</span>   19hcsi-rbdplugin-s6nlj                                               <span class="token number">3</span>/3     Running     <span class="token number">2</span> <span class="token punctuation">(</span>26h ago<span class="token punctuation">)</span>      4d20hrook-ceph-crashcollector-k8s-node1.lab.example.com-8b77cffwnjgt   <span class="token number">1</span>/1     Running     <span class="token number">0</span>                4h11mrook-ceph-crashcollector-k8s-node2.lab.example.com-9d755bdddmcc   <span class="token number">1</span>/1     Running     <span class="token number">0</span>                19hrook-ceph-crashcollector-k8s-node3.lab.example.com-6dbb64b65s5t   <span class="token number">1</span>/1     Running     <span class="token number">0</span>                4h13mrook-ceph-mgr-a-78cd6b9ffb-j8r9w                                  <span class="token number">2</span>/2     Running     <span class="token number">4</span> <span class="token punctuation">(</span>63m ago<span class="token punctuation">)</span>      4h13mrook-ceph-mgr-b-79476687d8-9hfft                                  <span class="token number">2</span>/2     Running     <span class="token number">43</span> <span class="token punctuation">(</span>26m ago<span class="token punctuation">)</span>     19hrook-ceph-mon-a-c7c674d76-znxzx                                   <span class="token number">1</span>/1     Running     <span class="token number">48</span> <span class="token punctuation">(</span>26m ago<span class="token punctuation">)</span>     19hrook-ceph-mon-b-5df5487d9f-z7rnb                                  <span class="token number">1</span>/1     Running     <span class="token number">4</span> <span class="token punctuation">(</span>63m ago<span class="token punctuation">)</span>      4h15mrook-ceph-mon-c-6d8968ff95-h2vqp                                  <span class="token number">1</span>/1     Running     <span class="token number">8</span> <span class="token punctuation">(</span>30m ago<span class="token punctuation">)</span>      19hrook-ceph-operator-799cd7d684-fzwxb                               <span class="token number">1</span>/1     Running     <span class="token number">0</span>                19hrook-ceph-osd-0-5dc6988c7b-l69vx                                  <span class="token number">1</span>/1     Running     <span class="token number">8</span> <span class="token punctuation">(</span>30m ago<span class="token punctuation">)</span>      19hrook-ceph-osd-1-5777f4dc9d-cl48b                                  <span class="token number">1</span>/1     Running     <span class="token number">43</span> <span class="token punctuation">(</span>26m ago<span class="token punctuation">)</span>     19hrook-ceph-osd-2-75688c47d-nfbqx                                   <span class="token number">1</span>/1     Running     <span class="token number">5</span> <span class="token punctuation">(</span>30m ago<span class="token punctuation">)</span>      4h15mrook-ceph-osd-prepare-k8s-node1.lab.example.com-5j4b2             <span class="token number">0</span>/1     Completed   <span class="token number">0</span>                166mrook-ceph-osd-prepare-k8s-node2.lab.example.com-sz5b8             <span class="token number">0</span>/1     Completed   <span class="token number">0</span>                166mrook-ceph-osd-prepare-k8s-node3.lab.example.com-645cq             <span class="token number">0</span>/1     Completed   <span class="token number">0</span>                <span class="token number">166</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note success no-icon"><p>If the rook-ceph-mon, rook-ceph-mgr, or rook-ceph-osd pods are not created, please refer to the Ceph common issues for more details and potential solutions.</p></div><p>再部署一个toolbox（里面有ceph命令）用于查看ceph状态：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> toolbox.yamlkubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> rook-ceph-tools-55587cd5f9-mvnhw <span class="token parameter variable">-n</span> rook-ceph -- <span class="token function">bash</span><span class="token punctuation">[</span>rook@rook-ceph-tools-55587cd5f9-mvnhw /<span class="token punctuation">]</span>$ ceph status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="note success no-icon"><p>If the cluster is not healthy, please refer to the Ceph common issues for more details and potential solutions.</p></div><p>Ceph还提供了一个dashboard：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl expose deployment rook-ceph-mgr-a <span class="token parameter variable">-n</span> rook-ceph <span class="token parameter variable">--type</span><span class="token operator">=</span>NodePort <span class="token parameter variable">--name</span> ceph-dashboardkubectl get svc <span class="token parameter variable">-n</span> rook-cephNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                                        AGEceph-dashboard             NodePort    <span class="token number">10.98</span>.127.28     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">6800</span>:30682/TCP,9283:31582/TCP,8443:32441/TCP   21hkubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> rook-ceph-tools-55587cd5f9-dp9z2 <span class="token parameter variable">-n</span> rook-ceph -- <span class="token function">bash</span><span class="token punctuation">[</span>rook@rook-ceph-tools-55587cd5f9-dp9z2 /<span class="token punctuation">]</span>$ ceph status  cluster:    id:     43a7f46e-58d0-4b09-9c69-d150b716d499    health: HEALTH_WARN            <span class="token number">3</span> daemons have recently crashed  services:    mon: <span class="token number">3</span> daemons, quorum a,b,c <span class="token punctuation">(</span>age 31m<span class="token punctuation">)</span>    mgr: a<span class="token punctuation">(</span>active, since 36m<span class="token punctuation">)</span>, standbys: b    mds: <span class="token number">1</span>/1 daemons up, <span class="token number">1</span> hot standby    osd: <span class="token number">3</span> osds: <span class="token number">3</span> up <span class="token punctuation">(</span>since 31m<span class="token punctuation">)</span>, <span class="token number">3</span> <span class="token keyword">in</span> <span class="token punctuation">(</span>since 20h<span class="token punctuation">)</span>  data:    volumes: <span class="token number">1</span>/1 healthy    pools:   <span class="token number">3</span> pools, <span class="token number">65</span> pgs    objects: <span class="token number">27</span> objects, <span class="token number">429</span> KiB    usage:   <span class="token number">86</span> MiB used, <span class="token number">30</span> GiB / <span class="token number">30</span> GiB avail    pgs:     <span class="token number">65</span> active+clean  io:    client:   <span class="token number">851</span> B/s rd, <span class="token number">1</span> op/s rd, <span class="token number">0</span> op/s wr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问<a href="https://xn--IP-rm4e214d:32441">https://节点IP:32441</a><br>至此Ceph Cluster部署完毕<br>Ceph可提供三种存储方式：</p><ul><li>Block: Create block storage to be consumed by a pod (RWO)</li><li>Shared Filesystem: Create a filesystem to be shared across multiple pods (RWX)</li><li>Object: Create an object store that is accessible inside or outside the Kubernetes cluster</li></ul><p>我们使用shared filesystem提供RWX模式</p><h2 id="创建Filesystem">创建Filesystem</h2><p>filesystem.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> ceph.rook.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CephFilesystem<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myfs  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>ceph<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">metadataPool</span><span class="token punctuation">:</span>    <span class="token key atrule">replicated</span><span class="token punctuation">:</span>      <span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">dataPools</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> replicated      <span class="token key atrule">replicated</span><span class="token punctuation">:</span>        <span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">preserveFilesystemOnDelete</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">metadataServer</span><span class="token punctuation">:</span>    <span class="token key atrule">activeCount</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token key atrule">activeStandby</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> filesystem.yamlkubectl get pods <span class="token parameter variable">-n</span> rook-ceph <span class="token parameter variable">-l</span> <span class="token assign-left variable">app</span><span class="token operator">=</span>rook-ceph-mdsNAME                                    READY   STATUS    RESTARTS   AGErook-ceph-mds-myfs-a-9f6f85968-ljr8f    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          80mrook-ceph-mds-myfs-b-595fbc5858-jm5wz   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          79m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="提供StorageClass">提供StorageClass</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> storage.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StorageClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>cephfs<span class="token comment">## Change "rook-ceph" provisioner prefix to match the operator namespace if needed</span><span class="token key atrule">provisioner</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>ceph.cephfs.csi.ceph.com<span class="token key atrule">parameters</span><span class="token punctuation">:</span>  <span class="token comment">## clusterID is the namespace where the rook cluster is running</span>  <span class="token comment">## If you change this namespace, also change the namespace below where the secret namespaces are defined</span>  <span class="token key atrule">clusterID</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>ceph  <span class="token comment">## CephFS filesystem name into which the volume shall be created</span>  <span class="token key atrule">fsName</span><span class="token punctuation">:</span> myfs  <span class="token comment">## Ceph pool into which the volume shall be created</span>  <span class="token comment">## Required for provisionVolume: "true"</span>  <span class="token key atrule">pool</span><span class="token punctuation">:</span> myfs<span class="token punctuation">-</span>replicated  <span class="token comment">## The secrets contain Ceph admin credentials. These are generated automatically by the operator</span>  <span class="token comment">## in the same namespace as the cluster.</span>  <span class="token key atrule">csi.storage.k8s.io/provisioner-secret-name</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>csi<span class="token punctuation">-</span>cephfs<span class="token punctuation">-</span>provisioner  <span class="token key atrule">csi.storage.k8s.io/provisioner-secret-namespace</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>ceph  <span class="token key atrule">csi.storage.k8s.io/controller-expand-secret-name</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>csi<span class="token punctuation">-</span>cephfs<span class="token punctuation">-</span>provisioner  <span class="token key atrule">csi.storage.k8s.io/controller-expand-secret-namespace</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>ceph  <span class="token key atrule">csi.storage.k8s.io/node-stage-secret-name</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>csi<span class="token punctuation">-</span>cephfs<span class="token punctuation">-</span>node  <span class="token key atrule">csi.storage.k8s.io/node-stage-secret-namespace</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>ceph<span class="token key atrule">reclaimPolicy</span><span class="token punctuation">:</span> Delete<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>provisioner名称：<a href="http://rook-ceph.cephfs.csi.ceph.com">rook-ceph.cephfs.csi.ceph.com</a>，其中rook-ceph是cluster运行所在namespace</p><h2 id="创建PVC">创建PVC</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> cephfs<span class="token punctuation">-</span>fox<span class="token punctuation">-</span>dev  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> rook<span class="token punctuation">-</span>cephfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pvcNAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGEcephfs-fox-dev   Bound    pvc-451e4fc3-bda4-445a-b2a6-d5dd40a845d3   5Gi        RWX            rook-cephfs    22h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
          <category> kubernetes </category>
          
          <category> kubernetes storage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud native </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S存储系列之一：K8S HostPath StorageClass</title>
      <link href="/blog/posts/1059359803/"/>
      <url>/blog/posts/1059359803/</url>
      
        <content type="html"><![CDATA[<h2 id="创建provisioner、storageclass">创建provisioner、storageclass</h2><p>我们使用rancher提供的hostpath，地址：<a href="https://github.com/rancher/local-path-provisioner">https://github.com/rancher/local-path-provisioner</a><br>local-path-storage.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Namespace<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>storage<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>service<span class="token punctuation">-</span>account  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>storage<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>role<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">""</span> <span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"nodes"</span><span class="token punctuation">,</span> <span class="token string">"persistentvolumeclaims"</span><span class="token punctuation">,</span> <span class="token string">"configmaps"</span> <span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span> <span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">""</span> <span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"endpoints"</span><span class="token punctuation">,</span> <span class="token string">"persistentvolumes"</span><span class="token punctuation">,</span> <span class="token string">"pods"</span> <span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"*"</span> <span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">""</span> <span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"events"</span> <span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span> <span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"storage.k8s.io"</span> <span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"storageclasses"</span> <span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span> <span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>bind<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>role<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>service<span class="token punctuation">-</span>account    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>storage<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>storage<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>service<span class="token punctuation">-</span>account      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner          <span class="token key atrule">image</span><span class="token punctuation">:</span> rancher/local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner<span class="token punctuation">:</span>v0.0.22          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">command</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>provisioner            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>debug            <span class="token punctuation">-</span> start            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>config            <span class="token punctuation">-</span> /etc/config/config.json          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>volume              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/config/          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>config<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> storage.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StorageClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token key atrule">provisioner</span><span class="token punctuation">:</span> rancher.io/local<span class="token punctuation">-</span>path<span class="token key atrule">volumeBindingMode</span><span class="token punctuation">:</span> WaitForFirstConsumer<span class="token key atrule">reclaimPolicy</span><span class="token punctuation">:</span> Delete<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>storage<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">config.json</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>    <span class="token punctuation">{</span>            "nodePathMap"<span class="token punctuation">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                    "node"<span class="token punctuation">:</span><span class="token string">"DEFAULT_PATH_FOR_NON_LISTED_NODES"</span><span class="token punctuation">,</span>                    "paths"<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"/opt/local-path-provisioner"</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>            <span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token key atrule">setup</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>    <span class="token comment">#!/bin/sh</span>    set <span class="token punctuation">-</span>eu    mkdir <span class="token punctuation">-</span>m 0777 <span class="token punctuation">-</span>p "$VOL_DIR"  <span class="token key atrule">teardown</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>    <span class="token comment">#!/bin/sh</span>    set <span class="token punctuation">-</span>eu    rm <span class="token punctuation">-</span>rf "$VOL_DIR"  <span class="token key atrule">helperPod.yaml</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> helper<span class="token punctuation">-</span>pod    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> helper<span class="token punctuation">-</span>pod        <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行该yaml，并验证是否创建成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> local-path-storage.yamlkubectl get pods <span class="token parameter variable">-n</span> local-path-storageNAME                                      READY   STATUS    RESTARTS   AGElocal-path-provisioner-64d5bc6b74-htqqg   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          13skubectl get storageclasses.storage.k8s.ioNAME                    PROVISIONER                     RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGElocal-path              rancher.io/local-path           Delete          WaitForFirstConsumer   <span class="token boolean">false</span>                  24srook-cephfs             rook-ceph.cephfs.csi.ceph.com   Delete          Immediate              <span class="token boolean">false</span>                  19h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建pvc">创建pvc</h2><p>pvc.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>pvc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 128Mi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pvcNAME             STATUS    VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGElocal-path-pvc   Pending    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此处Pending是因为设置的BINDINGMODE是WaitForFirstConsumer，是正常现象</p><p>现在来发布一个pod验证一下是否能成功bind</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> volume<span class="token punctuation">-</span>test<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> volume<span class="token punctuation">-</span>test    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>stable<span class="token punctuation">-</span>alpine    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> volv      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /data    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> volv    <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>      <span class="token key atrule">claimName</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>path<span class="token punctuation">-</span>pvc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> pod.yamlkubectl get podsNAME          READY   STATUS    RESTARTS   AGEvolume-test   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          51skubectl get pvcNAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGElocal-path-pvc   Bound    pvc-73c6f5b4-c22d-4654-bc1c-967aacd5d2f8   128Mi      RWO            local-path     15m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pvc已经是Bound了</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
          <category> kubernetes </category>
          
          <category> kubernetes storage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud native </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S存储系列之二：K8S NFS StorageClass</title>
      <link href="/blog/posts/1908189687/"/>
      <url>/blog/posts/1908189687/</url>
      
        <content type="html"><![CDATA[<p>NFS是最常规、最简单的提供云存储的方式</p><h2 id="安装NFS">安装NFS</h2><p>在提供nfsserver的节点（192.168.126.99）安装相关软件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> nfs-kernel-server rpcbind<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在需要远程挂载nfs的客户端节点（也就是所有的k8s node节点）安装相关软件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nfs-common rpcbind<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>nfsserver节点导出共享目录，重启nfsserver</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/exports/nfs *<span class="token punctuation">(</span>insecure,rw,sync,no_root_squash<span class="token punctuation">)</span>systemctl <span class="token builtin class-name">enable</span> rpcbindsystemctl <span class="token builtin class-name">enable</span> nfs-serversystemctl start rpcbindsystemctl start nfs-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使nfs配置生效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">exportfs <span class="token parameter variable">-rv</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>客户端节点验证能否挂载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">showmount <span class="token parameter variable">-e</span> <span class="token number">192.168</span>.126.99<span class="token function">mount</span> <span class="token parameter variable">-t</span> nfs <span class="token number">192.168</span>.126.99:/nfs /mnt/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="创建provisioner、storageclass">创建provisioner、storageclass</h2><p>nfs-storageclass.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> storage.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StorageClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>storage  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">storageclass.kubernetes.io/is-default-class</span><span class="token punctuation">:</span> <span class="token string">"true"</span><span class="token key atrule">provisioner</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>sigs.io/nfs<span class="token punctuation">-</span>provisioner  <span class="token comment">## 这个名字随便起，和下面ENV里的PROVISIONER_NAME对上就行了</span><span class="token key atrule">parameters</span><span class="token punctuation">:</span>  <span class="token key atrule">archiveOnDelete</span><span class="token punctuation">:</span> <span class="token string">"false"</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>provisioner<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> Recreate  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>hangzhou.aliyuncs.com/lfy_k8s_images/nfs<span class="token punctuation">-</span>subdir<span class="token punctuation">-</span>external<span class="token punctuation">-</span>provisioner<span class="token punctuation">:</span>v4.0.2          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>root              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /persistentvolumes          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> PROVISIONER_NAME              <span class="token key atrule">value</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>sigs.io/nfs<span class="token punctuation">-</span>provisioner            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NFS_SERVER              <span class="token key atrule">value</span><span class="token punctuation">:</span> 192.168.126.99            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NFS_PATH              <span class="token key atrule">value</span><span class="token punctuation">:</span> /nfs      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>root          <span class="token key atrule">nfs</span><span class="token punctuation">:</span>            <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.126.99            <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfs<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>provisioner<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>runner<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"nodes"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"persistentvolumes"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"persistentvolumeclaims"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"storage.k8s.io"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"storageclasses"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"events"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> run<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>provisioner<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>runner  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>provisioner<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"endpoints"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>provisioner<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>provisioner<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建上述资源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> nfs-storageclass.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查是否创建成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pods <span class="token parameter variable">-n</span> nfs-provisionerkubectl get storageclassNAME                    PROVISIONER                     RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGEnfs-storage <span class="token punctuation">(</span>default<span class="token punctuation">)</span>   k8s-sigs.io/nfs-provisioner     Delete          Immediate              <span class="token boolean">false</span>                  55m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建PVC">创建PVC</h2><p>创建一个pvc测试一下，storageclass选择刚建好的nfs-storage<br>pvc.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>fox  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>fox<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>storage<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证是否成功，Bound就成功了，要是Pending就失败了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pvcNAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGEnfs-fox          Bound    pvc-f84fa5d7-050f-4549-95e9-4a2715d23043   1Gi        RWX            nfs-storage    54m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
          <category> kubernetes </category>
          
          <category> kubernetes storage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud native </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S入门系列之四：用kubectl操作和访问集群</title>
      <link href="/blog/posts/60787/"/>
      <url>/blog/posts/60787/</url>
      
        <content type="html"><![CDATA[<h2 id="kubectl执行流程">kubectl执行流程</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fkubectl%2Fkubectl.png" alt=""></p><h2 id="kubectl命令行补齐">kubectl命令行补齐</h2><table><tbody><tr><th>子命令</th><th>说明</th></tr><tr>  <td>completion</td>  <td>kubectl为指定的shell（bash或zsh）中的子命令或参数实现自动补齐。建议写入~/.bash_profile，source后立即生效  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>kubectl completion <span class="token function">bash</span><span class="token punctuation">)</span><span class="token builtin class-name">echo</span> <span class="token string">"source &lt;(kubectl completion bash)"</span> <span class="token operator">&gt;&gt;</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  </td></tr></tbody></table><h2 id="kubectl集群信息检索-维护">kubectl集群信息检索/维护</h2><table><tbody><tr>  <td>api-versions</td>  <td>以"group/version"的格式，打印当前服务端支持的API版本</td></tr><tr>  <td>api-resources</td>  <td>列出集群支持的API资源</td></tr><tr>  <td>cluster-info</td>  <td>显示整个集群的kubernetes master、kubeDNS、metrics-server等服务组件的endpoints。<br>  使用kubectl cluster-info dump <i>--output-directory</i>分类存放集群信息，进一步调试和诊断集群问题。  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl cluster-info dump --output-directory<span class="token operator">=</span>/path/to/cluster-state<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>certificate</td>  <td>修改证书请求资源的状态，使用kubectl get csr列出证书签名请求。<br>  approve：批准证书签名请求<br>  deny：拒绝证书签名请求  </td></tr><tr>  <td>top</td>  <td>显示node或者pod的cpu、memory的使用量，需要提前安装并正确配置metrics-server。<br>  --sort-by=cpu|memory使用cpu或者memory排序  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token function">top</span> <span class="token function">node</span> --sort-by<span class="token operator">=</span>cpukubectl <span class="token function">top</span> pod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>cordon</td>  <td>将指定节点标记为不可被调度，将不会被master节点上的kube-scheduler分配新的pod。被标记的节点（除非发布任务时使用nodeName强制指定标记的节点），使用kubect get nodes查看到的STATUS为Ready,SchedulingDisabled  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl cordon k8s-node3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>uncordon</td>  <td>标记指定节点可以被kube-scheduler调度  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl uncordon k8s-node3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>drain</td>  <td>排空准备维护的节点<br>  1. 给指定的节点标记为SchedulingDisabled，防止被kube-scheduler分配新的pod<br>  2. 尝试把运行的pod迁移到其它node节点，如果无法迁移将删除pod<br>  3. 使用--ignore-daemonsets参数删除由DaemonSet管理的pod，使用--delete-emptydir-data参数删除没有使用共享存储，而是将数据存放在当前node节点的pod<br>  4. drain后的node节点，可以使用kubectl delete node <i>NodeName</i>，从etcd中彻底删除。使用kubeadm reset初始化该节点<br>  5. 也可以把drain后的node点，使用kubectl uncordon <i>NodeName</i>，重新标记为可以被调度  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl drain k8s-node3 --ignore-daemonsetskubectl delete <span class="token function">node</span> k8s-node3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  </td></tr></tbody></table><h2 id="kubectl认证与鉴权">kubectl认证与鉴权</h2><table><tbody><tr>  <td>config</td>  <td>修改、配置客户端登录凭证文件。每次执行kubectl命令可以使用--kubeconfig指定登录凭证，或设置KUBECONFIG环境变量。当多个登录凭证存在时，优先级排序<br>  --kubeconfig &gt; $KUBECONFIG &gt; ${HOME}/.kube/config  </td></tr><tr>  <td>auth</td>  <td>检查当前用户的授权<br>  can-i // 检查当前用户是否可对某种资源执行操作。  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl auth can-i create pods --all-namespaceskubectl auth can-i list deployments.apps<span class="token comment"># check to see if I can do everything in my current namespace</span>kubectl auth can-i <span class="token string">'*'</span> <span class="token string">'*'</span> kubectl auth can-i list jobs.batch/bar <span class="token parameter variable">-n</span> foo<span class="token comment"># check to see if I can read pod logs</span>kubectl auth can-i get pods <span class="token parameter variable">--subresource</span><span class="token operator">=</span>log<span class="token comment"># check to see if I can access the URL /logs/</span>kubectl auth can-i get /logs/<span class="token comment"># list all allowd actions in namespace "foo"</span>kubectl auth can-i <span class="token parameter variable">--list</span> <span class="token parameter variable">--namespace</span><span class="token operator">=</span>foo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr></tbody></table><h2 id="kubectl-POD基本操作">kubectl POD基本操作</h2><div class="note info no-icon"><p>注：部分常见命令未列出</p></div><table><tbody><tr>  <td>run</td>  <td>创建一个pod并运行容器<br>  --image=指定镜像名字<br>  --image-pull-policy=指定下载镜像的策略，可选值Always,Never,IfNotPresent,默认为Always<br>  -l, --labels=[] "k1=v1,k2=v2,..." 指定pod的标签<br>  --annotations="" 应用于pod的注释，多个注释使用多个--annotations<br>  --env="" 设置pod中的环境变量，多个变量使用多个--env<br>  --command 在容器中执行的命令<br>  --expose 为pod创建ClusterIP Service<br>  --port 指定容器的暴露端口<br>  --attach 等待pod启动运行后，附加命令到pod中执行<br>  --rm 在执行完容器中attach命令后删除pod<br>  --record 在资源annotations中记录当前的kubectl命令<br>  --privileged 以特权身份运行容器，默认为false<br>  --restart=指定pod的重启策略，可选值：Always,OnFailure,Never，默认为Always  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl run busybox <span class="token parameter variable">-it</span> <span class="token parameter variable">--image</span><span class="token operator">=</span>busybox <span class="token parameter variable">--rm</span> <span class="token parameter variable">--attach</span> -- shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>port-forward</td>  <td>将本地的一个或多个端口转发到pod：localPort:podPort，会持续占用一个终端（终端关闭结束端口转发）。支持的资源：pod、deployment、service  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl port-forward TYPE/NAME <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>LOCAL_PORT<span class="token punctuation">]</span>:REMOTE_PORT <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>LOCAL_PORT_N<span class="token punctuation">]</span>:REMOTE_PORT_N<span class="token punctuation">]</span><span class="token comment"># 范例</span>kubectl port-forward pod/mypod <span class="token number">5000</span> <span class="token number">6000</span>kubectl port-forward pod/mypod <span class="token number">8888</span>:5000kubectl port-forward <span class="token parameter variable">--address</span> <span class="token number">0.0</span>.0.0 pod/mypod <span class="token number">8888</span>:5000kubectl port-forward <span class="token parameter variable">--address</span> localhost,192.168.126.188 pod/mypod <span class="token number">8888</span>:5000<span class="token comment"># listen on a random port locally</span>kubectl port-forward pod/mypod :5000kubectl port-forward deployment/mydeployment <span class="token number">5000</span> <span class="token number">6000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr></tbody></table><h2 id="kubectl调试排错">kubectl调试排错</h2><div class="note info no-icon"><p>注：部分常见命令未列出</p></div><table><tbody><tr>  <td>debug</td>  <td>创建调试会话以对工作负载和节点进行故障排除，默认资源类型为pod。debug采取的操作因指定的资源而异。支持的行动包括：  <ul>    <li>工作负载：创建现有pod的副本，并更改某些属性，例如将镜像标记更改为新版本</li>    <li>工作负载：向已经运行的pod添加临时容器，例如，在不重新启动pod的情况下添加调试实用程序</li>    <li>节点：创建一个新的pod，该pod在节点的主机名称空间中运行，并且可以访问节点的文件系统</li>  </ul>  范例：在node1节点上使用<b>"hostIPC:true"</b>, <b>"hostNetwork:true"</b>, <b>"hostPID:true"</b>, <b>"restartPolicy:Never"</b>启用debugger容器，并以rw挂载节点的/文件系统到centos容器的/host文件夹  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl debug <span class="token parameter variable">-it</span> node/k8s-node1 <span class="token parameter variable">--image</span><span class="token operator">=</span>centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>proxy</td>  <td>转发kube-apiserver到本地的指定地址和端口，默认为127.0.0.1:8001，随后可通过curl获取集群资源信息<br>  --address 指定转发到本机的IP地址  -p, --port 指定转发到本机的端口。0为随机端口  --accept-hosts 使用正则表达式指定允许访问转发的主机，默认为localhost，'^*$'为放行所有主机  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl proxy <span class="token parameter variable">--address</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr></tbody></table><h2 id="kubectl资源管理">kubectl资源管理</h2><div class="note info no-icon"><p>注：部分常见命令未列出</p></div><table><tbody><tr>  <td>label</td>  <td>以key=value的形式，设置或更新资源的标签    <ul>      <li>标签key和value必须以字母或数字开头，可以包含字母、数字、"-"、"."和"_"，每个字符长度不超过63个字符</li>      <li>key可以使用类似于DNS子域前缀和单个"/"开头，如example.com/my-app</li>      <li>默认不允许修改现存标签的value，使用--overwrite覆盖现有标签的value</li>      <li>使用--resource-version设置资源的某个版本的标签，否则为当前版本</li>    </ul>    <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 范例</span>kubectl label pods foo <span class="token assign-left variable">unhealthy</span><span class="token operator">=</span>truekubectl label <span class="token parameter variable">--overwrite</span> pods foo <span class="token assign-left variable">status</span><span class="token operator">=</span>unhealthy<span class="token comment"># update all pods label in the namespace</span>kubectl label pods <span class="token parameter variable">--all</span> <span class="token assign-left variable">status</span><span class="token operator">=</span>unhealthy<span class="token comment"># update a pod identified by the type and name in "pod.json"</span>kubectl label <span class="token parameter variable">-f</span> pod.json <span class="token assign-left variable">status</span><span class="token operator">=</span>unhealthykubectl label pods foo <span class="token assign-left variable">status</span><span class="token operator">=</span>unhealthy --resource-version<span class="token operator">=</span><span class="token number">1</span><span class="token comment"># update pod 'foo' by removing a label named 'bar' if exists</span>kubectl label pods foo bar-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>annotate</td>  <td>更新或设置一个或多个资源的注释    <ul>      <li>所有kubernetes对象都支持将附加数据作为注释与对象一起存储。注释是权重大于标签的键值对，并且包含任意字符串值，如结构化JSON。可以使用注释来实现kubernetes处于beta阶段的功能扩展</li>      <li>默认不允许修改现存注释的value，使用--overwrite覆盖现有注释的value</li>      <li>使用--resource-version设置资源的某个版本的注释，否则为当前版本</li>    </ul>    <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 范例</span>kubectl annotate pods foo <span class="token assign-left variable">description</span><span class="token operator">=</span><span class="token string">'my frontend'</span><span class="token comment"># update a pod identified by the type and name in "pod.json"</span>kubectl annotate <span class="token parameter variable">-f</span> pod.json <span class="token assign-left variable">description</span><span class="token operator">=</span><span class="token string">'my frontend'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>expose</td>  <td>给已经存在的pod，service，replicationcontroller，deployment，replicaset资源<b>创建或关联service</b>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 范例</span><span class="token comment"># create a service for a replicaset nginx, which serves on port 80 and connects to the containers on port 8000</span>kubectl expose rc nginx <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span> --target-port<span class="token operator">=</span><span class="token number">8000</span>kubectl expose deployment nginx <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span> --target-port<span class="token operator">=</span><span class="token number">8000</span>kubectl expose pod valid-port <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">444</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>frontend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>replace</td>  <td>通过文本文件或标准命令行替换已经存在的资源  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pod mypod <span class="token parameter variable">-o</span> yaml <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/\(image: myimage\):.*$/\1:v4/'</span> <span class="token operator">|</span> kubectl replace <span class="token parameter variable">-f</span> -kubectl replace <span class="token parameter variable">-f</span> ./pod.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>patch</td>  <td>使用JSON补丁更新资源的字段<br>  以下patch方法常用于使用go封装云原生应用部署，即替换image版本、扩缩容副本  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl patch deployments web <span class="token parameter variable">-p</span> <span class="token string">'{"spec":{"replicas":1}}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  以下patch方法常用于admission webhook为工作负载增加配置字段，可参加<a href="http://localhost:4000/blog/posts/1902483454/#%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91">K8S二次开发系列之三：自定义开发Admission Webhook</a>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl patch deployments web <span class="token parameter variable">--type</span><span class="token operator">=</span><span class="token string">'json'</span> <span class="token parameter variable">-p</span> <span class="token string">'[{"op":"replace","path":"/spec/template/spec/containers/0/image","value":"nginx:1.21.5"}]'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr></tbody></table><h2 id="kubectl更新workload">kubectl更新workload</h2><table><tbody><tr>  <td>set</td>  <td>对现有应用程序的资源进行更改：env, image, resources, selector, serviceaccount, subject</td></tr><tr>  <td>scale</td>  <td>对指定的工作负载副本数量进行缩放，如果指定了--current-replicas或--resource-version则会在尝试缩放之前对其进行验证，并保证在将缩放发送到服务器时前提条件为true  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 范例：</span>kubectl scale <span class="token parameter variable">--replicas</span><span class="token operator">=</span><span class="token number">3</span> rs/fookubectl scale <span class="token parameter variable">--replicas</span><span class="token operator">=</span><span class="token number">3</span> <span class="token parameter variable">-f</span> foo.yamlkubectl scale --current-replicas<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">--replicas</span><span class="token operator">=</span><span class="token number">3</span> deployment/mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>autoscale</td>  <td>使用metrics-server对指定的工作负载的cpu-percent指标进行度量，按照预支自动缩放pod副本数量  ```shell  # 范例  # 使用默认策略对foo进行最大10最小2的副本缩放  kubectl autoscale deployment foo --min=2 --max=10  # cpu使用率超过80%后进行最大5最小1的副本缩放  kubectl autoscale rc foo --max=5 --cpu-percent=80  </td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S入门系列之二：用kubeadm管理集群</title>
      <link href="/blog/posts/1988254567/"/>
      <url>/blog/posts/1988254567/</url>
      
        <content type="html"><![CDATA[<h2 id="kubeadm功能">kubeadm功能</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fkubeadm%2F1.png" alt=""></p><ul><li>按照参数或配置文件初始化控制平面<ul><li>按照指定版本自动pull控制平面组件镜像</li><li>调用本地容器运行时以静态pod形式运行核心组件</li><li>在/etc/kubernetes/pki自动创建根证书，并使用根证书为组件签发证书</li><li>创建管理员登陆凭证：/etc/kubernetes/admin.conf</li></ul></li><li>使用discovery token和TLS bootstrap token管理worker节点<ul><li>安全地增加集群worker节点</li><li>安全恢复节点</li></ul></li><li>平滑升级和降级集群</li><li>续签证书</li><li>构建高可用集群，多master节点、多etcd节点</li><li>不依赖平台，可在本地或公有云上部署集群</li></ul><h2 id="kubeadm子命令">kubeadm子命令</h2><table><tbody><tr><th>子命令</th><th>说明</th></tr><tr>  <td>kubeadm completion</td>  <td>kubeadm为指定的shell（bash或zsh）中的子命令或参数实现自动补齐  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>kubeadm completion <span class="token function">bash</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>kubeadm certs</td>  <td>用于使用kubeadm处理集群证书  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm certs check-expiration <span class="token comment">## 检查默认存放在/etc/kubernetes/pki中CA和证书文件的过期日期和剩余时间</span>kubeadm certs renew <span class="token operator">&lt;</span>all<span class="token operator">|</span>certname<span class="token operator">&gt;</span> <span class="token comment">## 更新指定或所有证书</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>kubeadm config</td>  <td>管理kubeadm集群的配置，该配置保留在集群的kube-system命名空间中名为kubeadm-config的ConfigMap，kubeadm使用它来存储关于集群的内部配置。使用kubectl -n kube-system get cm kubeadm-config -o yaml打印当前的集群配置  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm config images listkubeadm config images pullkubeadm config print init-defauts <span class="token comment">## 生成kubeadm init默认配置</span>kubeadm config print join-defaults <span class="token comment">## 生成kubeadm join默认配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>  </td></tr><tr>  <td>kubeadm init</td>  <td>运行此命令以设置kubernetes控制平面</td></tr><tr>  <td>kubeadm join</td>  <td>在任何想要加入现有集群的节点上运行此命令</td></tr><tr>  <td>kubeadm reset</td>  <td>还原集群到初始化状态</td></tr><tr>  <td>kubeadm token</td>  <td>使用generate、create、list、delete子命令管理令牌</td></tr><tr>  <td>kubeadm upgrade</td>  <td>使用此命令平稳的将集群升级到指定版本</td></tr><tr>  <td>kubeadm version</td>  <td>打印版本</td></tr><tr>  <td>kubeadm help</td>  <td>打印帮助信息</td></tr></tbody></table><h3 id="kubeadm-init-参数说明">kubeadm init 参数说明</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>–apiserver-advertise-address</td><td>声明API服务器正在监听的IP地址，如果未设置，将使用默认网络接口</td></tr><tr><td>–apiserver-bind-port</td><td>API服务器要绑定的端口，默认是6443</td></tr><tr><td>–apiserver-cert-extra-sans</td><td>可以是IP地址和DNS</td></tr><tr><td>–cert-dir</td><td>证书存放路径，默认在/etc/kubernetes/pki</td></tr><tr><td>–config</td><td>kubeadm配置文件存放路径</td></tr><tr><td>–cri-socket</td><td>要连接的CRI套接字的路径，如果为空，则kubeadm将尝试自动检测此值；仅当安装了多个CRI或具有非标准CRI插槽时，才使用此选项</td></tr><tr><td>–dtry-run</td><td>试运行，不做任何更改</td></tr><tr><td>–ignore-preflight-errors</td><td>检查清单，其错误显示为警告</td></tr><tr><td>–image-repository</td><td>镜像仓库，<a href="http://xn--k8s-c88dn12zzcya.gcr.io">默认为k8s.gcr.io</a>（国内不通）</td></tr><tr><td>–kubernetes-version</td><td>k8s版本</td></tr><tr><td>–node-name</td><td>指定node节点名称</td></tr><tr><td>–pod-network-cidr</td><td>指定pod网络的CIDR范围</td></tr><tr><td>–service-cidr</td><td>指定service的CIDR范围，默认为10.96.0.0/12</td></tr><tr><td>–service-dns-domain</td><td>为服务指定domain name。默认为cluster.local</td></tr><tr><td>–token</td><td>手动指定用于在节点和控制平面节点之间建立双向信任的令牌</td></tr><tr><td>–skip-token-print</td><td>不打印"kubeadm init"生成的默认令牌</td></tr><tr><td>–token-ttl</td><td>令牌的生命周期，如果设置为0，则永不过期（默认为24h）</td></tr></tbody></table><h3 id="kubeadm-join-参数说明">kubeadm join 参数说明</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm <span class="token function">join</span> <span class="token number">192.168</span>.126.100:6443 <span class="token parameter variable">--token</span> rxqhqd.uzn6bhwxhnrikddx --discovery-token-ca-cert-hash sha256:211774e9b0c1d5aabe9fee10b63fe5f875ce6a588d216dc7793fac2298c9e745      <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>–tls-bootstrap-token</td><td>指定用于在加入节点时临时通过kubernetes控制平面进行身份验证的令牌</td></tr><tr><td>–discovery-file</td><td>基于文件发现用于加载集群信息的文件或URL</td></tr><tr><td>–discovery-token</td><td>基于令牌发现，令牌用于验证从API服务器获取的集群信息</td></tr><tr><td>–token</td><td>默认令牌，如果未指定</td></tr><tr><td>–discovery-token-ca-cert-hash</td><td>对于基于令牌的发现，请验证根CA公共密钥是否与此哈希匹配（格式：&lt;类型&gt;:&lt;值&gt;</td></tr><tr><td>–discovery-token-unsafe-skip-ca-verification</td><td>对于基于令牌的发现，允许加入时不使用–discovery-token-ca-cert-hash参数</td></tr></tbody></table><h3 id="kubeadm-upgrade子命令说明">kubeadm upgrade子命令说明</h3><table><tbody><tr><th>参数</th><th>说明</th></tr><tr>  <td>Upgrade apply</td>  <td>将您的kubernetes集群升级到指定版本  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm upgrade apply v1.23.5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>Upgrade diff</td>  <td>显示指定版本与现存版本配置文件的差异  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm upgrade <span class="token function">diff</span> v1.23.5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  </td></tr><tr>  <td>Upgrade node</td>  <td>升级集群中的单个节点或某个节点制定阶段性升级，支持的阶段：<br>  control-plane、kubelet-config、preflight  </td></tr><tr>  <td>Upgrade plan</td>  <td>检查和当前kubeadm相同版本，可升级的k8s最新子版本  </td></tr></tbody></table><h3 id="kubeadm-token子命令说明">kubeadm token子命令说明</h3><p>引导令牌用于在客户端和服务端之间建立双向信任。当客户端（例如即将加入集群的节点）需要信任与之通信的服务器时，可以使用引导令牌。然后可以使用带有“签名”用法的引导令牌。引导令牌还可以用作允许对API服务器进行短暂身份验证的方式（令牌用作API服务器信任客户端的方式），例如用于执行TLS引导程序。</p><table><thead><tr><th>子命令</th><th>说明</th></tr></thead><tbody><tr><td>token generate</td><td>随机生成并打印引导令牌（bootstrap tokens），但不要存入etcd</td></tr><tr><td>token create</td><td>创建引导令牌（bootstrap tokens）并存入etcd</td></tr><tr><td>token list</td><td>列出etcd中处于有效期内的所有token</td></tr><tr><td>token delete</td><td>从etcd中删除指定令牌</td></tr></tbody></table><p>token create 参数说明</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>–print-join-command</td><td>打印使用该令牌加入集群所需的完整kubeadm join命令</td></tr><tr><td>–ttl duration</td><td>令牌被自动删除之前的持续时间（例如1s、2m、3h）。如果设置为0，–ttl=0令牌将永不过期</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S入门系列之一：Kubernetes概览</title>
      <link href="/blog/posts/3520104697/"/>
      <url>/blog/posts/3520104697/</url>
      
        <content type="html"><![CDATA[<h2 id="VM和容器的区别">VM和容器的区别</h2><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F1.png" alt=""></p><h2 id="什么是云原生">什么是云原生</h2><p>CNCF——云原生计算基金会<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F2.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F3.png" alt=""></p><h2 id="什么是Kubernetes">什么是Kubernetes</h2><p>Kubernetes是一个可移植的、可扩展的容器编排工具与平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。Kubernetes拥有一个庞大且快速增长的生态系统。Kubernetes的服务、支持和工具广泛可用。</p><p>Kubernetes这个名字源于希腊语，意为“舵手”或“飞行员”。k8s这个缩写是因为k和s之间有8个字母。Google在2014年开源了Kubernetes项目。Kubernetes建立在Google大规模运行生产工作负载方面拥有十几年的经验基础上，结合了社区中最好的想法和实践。</p><p>Kubernetes是用于自动部署，扩展和管理容器化应用程序的开源系统。</p><h2 id="Kubernetes架构">Kubernetes架构</h2><h3 id="架构图">架构图</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fk8s_arch.png" alt=""></p><h3 id="核心组件">核心组件</h3><p>control-plane 节点核心组件：<a href="https://kubernetes.io/docs/concepts/overview/components/">https://kubernetes.io/docs/concepts/overview/components/</a></p><table><thead><tr><th>组件</th><th>说明</th></tr></thead><tbody><tr><td>kube-apiserver</td><td>提供Restful API接口、集群的统一入口，集群的认证、授权、准入控制及各组件的协调者，所有的对象资源的增删改查和监听操作都交给apiserver处理后再提交给etcd数据库做持久化存储</td></tr><tr><td>kube-controller-manager</td><td>管理k8s出厂的时候预置的各种类(kind)(如deployment、service等)，然后从类中实例化出资源对象并对其进行管理。Controller manager由多种controller组成，包括Node Controller、Job Controller、Endpoints Controller、Service Account &amp; Token Controller</td></tr><tr><td>kube-sheduler</td><td>将pod调度到可用的Node节点上</td></tr><tr><td>etcd</td><td>高可用的分布式键值数据库，可用于服务发现。etcd采用raft一致性算法，基于Go语言实现。etcd作为一个高可用键值存储系统，天生就是为集群化而设计，用于保存K8s集群状态数据</td></tr></tbody></table><h3 id="Kubernetes工作流程">Kubernetes工作流程</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F4.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F5.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F6.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F7.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F8.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F9.png" alt=""><br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F10.png" alt=""></p><h3 id="Container-Runtime-Interface-CRI-架构">Container Runtime Interface(CRI)架构</h3><p>容器运行时分为High-level和Low-level</p><ul><li>High-level：管理，协调，接收外部请求，提供存储、网络</li><li>Low-level：，遵循OCI(Open Container Initiative)开放容器标准，创建cgroups和namespaces进行资源隔离</li></ul><p><strong>dockershim</strong></p><p>kubelet用于连接容器运行时，容器运行时除了docker外，当时还有一个rkt。</p><p>Google和Docker互相看不顺眼，K8s提出了CRI接口，docker不遵循CRI接口，K8s为了兼容docker，在kubelet上放了一个docker垫片(dockershim)，通过dockershim去连接docker。</p><p>1.24版本以后谷歌去掉了dockershim，docker认怂了，说后面垫片docker来开发，docker把自己代码解耦，其中containerd作为高级容器运行时并交给了CNCF（已毕业）；如果去掉docker，containerd现在仍然是docker公司的。runc是低级容器运行时，也是docker公司的。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F11.png" alt=""></p><h3 id="K8s部署工具及托管平台">K8s部署工具及托管平台</h3><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F12.png" alt=""></p><h3 id="K8s高可用架构">K8s高可用架构</h3><ul><li><p>etcd和master部署在一起<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F13.png" alt=""></p></li><li><p>etcd单独部署<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fk8s%2Fsummary%2F14.png" alt=""></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> K8S入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio系列文章之（三）功能快速入门</title>
      <link href="/blog/posts/169155028/"/>
      <url>/blog/posts/169155028/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p>本文用一个小例子演示如何将一个微服务接入istio，以及使用istio进行流量管理</p></div><h2 id="环境准备">环境准备</h2><p>本文使用环境为 kubernetes v1.23.0 + istio 1.17.0</p><h2 id="部署简易程序">部署简易程序</h2><h3 id="部署两个版本的微服务">部署两个版本的微服务</h3><p>本文将在k8s中部署一个Python Flask编写的简易微服务，代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">import</span> os<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> Request<span class="token punctuation">,</span> urlopen<span class="token keyword">import</span> jsonapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">i_am_fine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"I am FINE!"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/env/&lt;env&gt;'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show_env</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/fetch'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">fetch_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">as</span> response<span class="token punctuation">:</span>        <span class="token keyword">return</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中的env会在创建Deployment的时候作为环境变量提交上去。</p><p>现在为该服务创建k8s资源：flaskapp.istio.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> flaskapp<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> flaskapp  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp<span class="token punctuation">-</span>v1<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> flaskapp      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> flaskapp        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp        <span class="token key atrule">image</span><span class="token punctuation">:</span> dustise/flaskapp        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> version          <span class="token key atrule">value</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp<span class="token punctuation">-</span>v2<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> flaskapp      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> flaskapp        <span class="token key atrule">version</span><span class="token punctuation">:</span> v2    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp        <span class="token key atrule">image</span><span class="token punctuation">:</span> dustise/flaskapp        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> version          <span class="token key atrule">value</span><span class="token punctuation">:</span> v2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ul><li>两个版本的Deployment用的是相同的镜像，但使用不同的version标签进行区分，分别是v1和v2</li><li>两个版本的Deployment都设置了一个环境变量version，分别取值v1和v2</li><li>两个版本的Deployment都使用了app和version标签，在istio网格应用中通常会使用这两个标签作为应用和版本的标识</li><li>Service中的selector仅使用了一个app标签，意味着该Service对两个Deployment都会进行转发</li><li>Service中定义的端口一般按istio规范命名为http</li></ul><p>现在需要将该服务提交到k8s的时候对其进行istio注入，有注入两种方法：</p><p>自动注入</p><p>需要为服务所在的命名空间打上标签<code>istio-injection=enabled</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl label namespace default istio-injection<span class="token operator">=</span>enabled<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>手动注入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">istioctl kube-inject <span class="token parameter variable">-f</span> flaskapp.istio.yaml <span class="token operator">|</span> kubectl apply <span class="token parameter variable">-f</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>过一会查看Pod状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pods <span class="token parameter variable">-n</span> defaultNAME                           READY   STATUS    RESTARTS   AGEflaskapp-v1-6d5d7ffb9f-5q6v8   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          20hflaskapp-v2-8647744b6-dlnrb    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          20h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>每个Pod里有两个容器，这就是istio注入Sidecar的结果，除了一个初始化容器istio-init外，还有两个容器：一个是istio-proxy，另一个是原本的服务</p><h3 id="部署客户端微服务">部署客户端微服务</h3><p>客户端服务很简单，只是使用了一个已装好各种测试工具的镜像，具体的测试都可以在这个容器内shell完成。准备好资源文件：sleep.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> sleep  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> sleep    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> sleep    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ssh      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> sleep<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> sleep      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> sleep        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sleep        <span class="token key atrule">image</span><span class="token punctuation">:</span> dustise/sleep        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这个客户端应用并没有对外提供服务的能力，但还是需要给他创建一个Service对象，这同样是istio的注入要求：没有Service的Deployment是无法被istio发现并进行操作的。</p><p>同样的对该文件进行注入并提交：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">istioctl kube-inject <span class="token parameter variable">-f</span> sleep.yaml <span class="token operator">|</span> kubectl apply <span class="token parameter variable">-f</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>过一会查看Pod状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pods <span class="token parameter variable">-l</span> <span class="token assign-left variable">app</span><span class="token operator">=</span>sleep <span class="token parameter variable">-n</span> defaultNAME                     READY   STATUS    RESTARTS   AGEsleep-6bf6676dcc-6nvnm   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          21h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="验证服务">验证服务</h3><p>下来进入sleep容器（如果有kubernetes-dashboard也可以通过界面进入）并进行测试</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> sleep-6bf6676dcc-6nvnm /bin/bashkubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead.bash-5.0<span class="token comment">## for((i=0; i&lt;100; i++)); do http --body http://flaskapp/env/version; done</span>v2v1v2……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从运行结果可以看到v1和v2两个结果随机出现，大约各占一半</p><h3 id="创建目标规则和默认路由">创建目标规则和默认路由</h3><p>接下来使用istio来管理这两个服务的流量</p><p>首先创建flaskapp应用的目标规则：flaskapp-destinationrule.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> flaskapp  <span class="token key atrule">subsets</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该DestinationRule通过Pod标签把flaskapp服务分成两个subset，分别命名为v1和v2</p><p>提交该文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> flaskapp-destinationrule.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来为flaskapp服务创建路由规则：flaskapp-virtualservice-v2.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> flaskapp<span class="token punctuation">-</span>default<span class="token punctuation">-</span>v2<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> flaskapp  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> flaskapp        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该VirtualService对象负责接管对flaskapp这一主机名的访问，并将所有流量都转发到DestinationRule定义的v2 subset上。</p><p>提交该文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> flaskapp-virtualservice-v2.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>现在进入sleep测试，看看重新定义的流量管理规则是否生效：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl exec -it sleep-6bf6676dcc-6nvnm /bin/bash</span><span class="token comment"># kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.</span>bash-5.0<span class="token comment"># for((i=0; i&lt;100; i++)); do http --body http://flaskapp/env/version; done</span>v2v2v2……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到路由规则已经生效，重复多次访问返回的永远是v2</p><h2 id="Istio-Dashboard">Istio Dashboard</h2><p>作为一个云原生的服务网格组件，istio必须提供可观测的相关功能。通过istioctl命令可以看到istio默认提供了以下几种dashboard：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## istioctl dashboard</span>Access to Istio web UIsUsage:  istioctl dashboard <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>  istioctl dashboard <span class="token punctuation">[</span>command<span class="token punctuation">]</span>Aliases:  dashboard, dash, dAvailable Commands:  controlz    Open ControlZ web UI  envoy       Open Envoy admin web UI  grafana     Open Grafana web UI  jaeger      Open Jaeger web UI  kiali       Open Kiali web UI  prometheus  Open Prometheus web UI  skywalking  Open SkyWalking UI  zipkin      Open Zipkin web UI<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意新版的istio已经不再默认安装各类dashboard，必须自己手动部署</p><h3 id="部署Prometheus">部署Prometheus</h3><p>手动提交yaml到kubernetes</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cd /opt/istio-1.12.1/samples/addons</span><span class="token comment"># kubectl apply -f prometheus.yaml</span><span class="token comment"># kubectl get pods -l app=prometheus -n istio-system</span>NAME                          READY   STATUS    RESTARTS   AGEprometheus-64fd8ccd65-6n6qt   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          17h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动prometheus dashboard监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># istioctl dashboard prometheus --address=192.168.91.10</span>http://192.168.91.10:9090<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打开prometheus页面的targets发现istiod的15014端口connection refused，编辑deployment istio-operator</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl edit deploy istio-operator <span class="token parameter variable">-n</span> istio-operator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到<code>--monitoring-host=127.0.0.1</code>将其改为<code>--monitoring-host=0.0.0.0</code></p><p>再次打开prometheus页面targets</p><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F2.png" alt=""></p><h3 id="部署Grafana">部署Grafana</h3><p>手动提交yaml到kubernetes</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cd /opt/istio-1.12.1/samples/addons</span><span class="token comment"># kubectl apply -f grafana.yaml</span><span class="token comment"># kubectl get pods -l app=grafana -n istio-system</span>NAME                       READY   STATUS    RESTARTS   AGEgrafana-6ccd56f4b6-vz7k5   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          16h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动grafana dashboard监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># istioctl dashboard grafana --address=192.168.91.10</span>http://192.168.91.10:3000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F3.png" alt=""></p><h3 id="部署Jaeger">部署Jaeger</h3><p>手动提交yaml到kubernetes</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cd /opt/istio-1.12.1/samples/addons</span><span class="token comment"># kubectl apply -f jaeger.yaml</span><span class="token comment"># kubectl get pods -l app=jaeger -n istio-system</span>NAME                      READY   STATUS    RESTARTS   AGEjaeger-5d44bc5c5d-fqtbr   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          16h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动jaeger dashboard监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># istioctl dashboard jaeger --address=192.168.91.10</span>http://192.168.91.10:16686<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F4.png" alt=""></p><h3 id="部署Kiali">部署Kiali</h3><p>手动提交yaml到kubernetes</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cd /opt/istio-1.12.1/samples/addons</span><span class="token comment"># kubectl apply -f kiali.yaml</span><span class="token comment"># kubectl get pods -l app=kiali -n istio-system</span>NAME                     READY   STATUS    RESTARTS   AGEkiali-79b86ff5bc-skwp8   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          16h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动kiali dashboard监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># istioctl dashboard kiali --address=192.168.91.10</span>http://192.168.91.10:20001/kiali<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2Fkiali.png" alt=""></p><h2 id="部署Bookinfo示例程序">部署Bookinfo示例程序</h2><ol><li>进入istio-1.17.0/samples/bookinfo/目录部署应用</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cd istio-1.17.0/</span><span class="token comment"># kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>等待一段直到所有Pod都running。当每个Pod准备就绪时，Istio sidecar将伴随应用一起部署。</p><ol start="2"><li>确认上面的操作都正确之后，运行下面命令，通过检查返回的页面标题来验证应用是否已在集群中运行，并已提供网页服务：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -sS productpage:9080/productpage | grep -o "&lt;title&gt;.*&lt;/title&gt;"</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Simple Bookstore App<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>对外开放应用程序<br>此时，BookInfo应用已经部署，但还不能被外界访问。要开放访问，还需要创建Istio入站网关（Ingress Gateway），它会在网格边缘把一个路径映射到路由。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml</span>gateway.networking.istio.io/bookinfo-gateway createdvirtualservice.networking.istio.io/bookinfo created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可用下面命令确保配置文件没有问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># istioctl analyze</span>✔ No validation issues found when analyzing namespace: default.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="4"><li>确定入站IP和端口。查看service发现，默认ingressgateway使用的是LoadBalancer类型，而我们的集群暂不提供LoadBalancer，此时EXTERNAL-IP的地方显示的是pending，需要把它改成NodePort</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl get svc -n istio-system</span>NAME                   TYPE           CLUSTER-IP       EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                                                                      AGEgrafana                ClusterIP      <span class="token number">10.97</span>.23.53      <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">3000</span>/TCP                                                                     90mistio-egressgateway    ClusterIP      <span class="token number">10.99</span>.30.204     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>/TCP,443/TCP                                                               44distio-ingressgateway   LoadBalancer   <span class="token number">10.111</span>.102.172   <span class="token operator">&lt;</span>pending<span class="token operator">&gt;</span>     <span class="token number">15021</span>:31849/TCP,80:30464/TCP,443:31104/TCP,31400:30828/TCP,15443:30440/TCP   44distiod                 NodePort       <span class="token number">10.108</span>.227.110   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">15010</span>:32579/TCP,15012:32125/TCP,443:30219/TCP,15014:32647/TCP                44djaeger-collector       ClusterIP      <span class="token number">10.105</span>.82.176    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">14268</span>/TCP,14250/TCP,9411/TCP                                                 87mkiali                  ClusterIP      <span class="token number">10.106</span>.90.206    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">20001</span>/TCP,9090/TCP                                                           85mprometheus             ClusterIP      <span class="token number">10.97</span>.146.99     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9090</span>/TCP                                                                     4h16mtracing                ClusterIP      <span class="token number">10.100</span>.227.136   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>/TCP,16685/TCP                                                             87mzipkin                 ClusterIP      <span class="token number">10.110</span>.162.221   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">9411</span>/TCP                                                                     87m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编辑service istio-ingressgateway，将<code>type: LoadBalancer</code>改为<code>type: NodePort</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl edit svc istio-ingressgateway -n istio-system</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改完以后</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                                                                      AGEgrafana                ClusterIP   <span class="token number">10.97</span>.23.53      <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">3000</span>/TCP                                                                     165mistio-ingressgateway   NodePort    <span class="token number">10.111</span>.102.172   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">15021</span>:31849/TCP,80:30464/TCP,443:31104/TCP,31400:30828/TCP,15443:30440/TCP   44d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>查看istio-ingressgateway的yaml，名称为http2的端口：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl get svc istio-ingressgateway -n istio-system -o jsonpath="{.spec.ports[?(@.name=='http2')].nodePort}";echo</span><span class="token number">30464</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是gateway的访问地址是：<a href="http://192.168.126.100:30464">http://192.168.126.100:30464</a></p><ol start="5"><li>在K8S集群外，访问Bookinfo应用100次：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># for i in $(seq 1 100); do curl -s -o /dev/null "http://192.168.126.100:30464/productpage"; done</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li><p>打开kiali，可以看到访问链路图<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F5.png" alt=""></p></li><li><p>打开浏览器可以看到Bookinfo应用的前端页面<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2F6.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 微服务 </tag>
            
            <tag> ServiceMesh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio系列文章之（二）安装部署</title>
      <link href="/blog/posts/3229823938/"/>
      <url>/blog/posts/3229823938/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p>目前istio已经弃用了Helm方式安装，改为使用istioctl进行安装</p></div><h2 id="准备k8s集群">准备k8s集群</h2><p>本文使用sealos工具部署了发文时最新的k8s集群（1master+3node），具体步骤详见官方说明：</p><p><a href="https://sealos.run/docs/self-hosting/lifecycle-management/quick-start/deploy-kubernetes">https://sealos.run/docs/self-hosting/lifecycle-management/quick-start/deploy-kubernetes</a></p><p>本文部署的k8s版本是v1.29.1</p><h2 id="下载istio介质">下载istio介质</h2><p>前往github官网下载：<a href="https://github.com/istio/istio/releases">https://github.com/istio/istio/releases</a></p><p>本文使用的版本是 Istio 1.17.0</p><h2 id="安装istio">安装istio</h2><ol><li>解压安装包到/opt</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> zxf istioctl-1.17.0-linux-amd64.tar.gz<span class="token function">cp</span> istio-1.17.0/bin/istioctl /usr/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>安装istio</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">istioctl <span class="token function">install</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">profile</span><span class="token operator">=</span>demo <span class="token parameter variable">-y</span>This will <span class="token function">install</span> the Istio <span class="token number">1.17</span>.0 <span class="token string">"demo"</span> profile <span class="token punctuation">(</span>with components: Istio core, Istiod, Ingress gateways, and Egress gateways<span class="token punctuation">)</span> into the cluster. Proceed? <span class="token punctuation">(</span>y/N<span class="token punctuation">)</span> y✔ Istio core installed✔ Istiod installed✔ Ingress gateways installed✔ Egress gateways installed✔ Installation complete Made this installation the default <span class="token keyword">for</span> injection and validation.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于不同profile的说明如下：<br><a href="https://istio.io/latest/zh/docs/setup/additional-setup/config-profiles/">https://istio.io/latest/zh/docs/setup/additional-setup/config-profiles/</a></p><table><thead><tr><th>核心组件</th><th>default</th><th>demo</th><th>minimal</th><th>remote</th><th>empty</th><th>preview</th><th>ambient</th></tr></thead><tbody><tr><td>istio-egressgateway</td><td></td><td>✔</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>istio-ingressgateway</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td>✔</td><td></td></tr><tr><td>istiod</td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td>CNI</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td></tr><tr><td>Ztunnel</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td></tr></tbody></table><p>有时候安装istio会失败，主要报错为istio-egressgateway或者istio-ingressgateway的istio-proxy容器起不来，看日志报错为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">istio-proxy warn sds failed to warm certificate: failed to generate workload……Readiness probe failed: Get <span class="token string">"http://10.233.113.10:15021/healthz/ready"</span><span class="token builtin class-name">:</span> dial tcp <span class="token number">10.233</span>.113.10:15021: connect: connection refused……lookup istiod.istio-system.svc on <span class="token number">10.96</span>.0.10:53: <span class="token builtin class-name">read</span> udp <span class="token number">10.244</span>.153.113:41187-<span class="token operator">&gt;</span><span class="token number">10.96</span>.0.10:53: i/o timeout"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>猜测为宿主机的dns没配好，解决办法：</p><ul><li>k8s所有节点/etc/resolve.conf里配置正确的dns</li><li>铲掉k8s集群，重新部署k8s，再装istio</li></ul><p>注意，如果安装istio这里有问题，后面就没法正常使用istio的各项功能，所以这里必须安装成功。</p><ol start="4"><li>装好以后验证istio的版本</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">istioctl versionclient version: <span class="token number">1.17</span>.0control plane version: <span class="token number">1.17</span>.0data plane version: <span class="token number">1.17</span>.0 <span class="token punctuation">(</span><span class="token number">2</span> proxies<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>验证istio各个pod状态</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pods <span class="token parameter variable">-n</span> istio-systemNAME                                    READY   STATUS    RESTARTS   AGEistio-egressgateway-687f4db598-b5llq    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          12histio-ingressgateway-78f69bd5db-bxnvr   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          12histiod-76d66d9876-w4wpv                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          12h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此istio就安装成功了</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 微服务 </tag>
            
            <tag> ServiceMesh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio系列文章之（一）基本原理介绍</title>
      <link href="/blog/posts/3186326952/"/>
      <url>/blog/posts/3186326952/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p>Istio: An open platform to connect, secure, control and observe services.</p></div><h2 id="什么是-service-mesh">什么是 service mesh</h2><p>在业务规模化和研发效能提升等因素的驱动下，从单块应用向微服务架构的转型已经成为很多企业(尤其是互联网企业)数字化转型的趋势。</p><p>在微服务模式下，企业内部服务少则几个到几十个，多则上百个，每个服务一般都以集群方式部署，这时自然产生两个问题(如下图所示)：</p><p>一、服务发现：服务的消费方(Consumer)如何发现服务的提供方(Provider)？</p><p>二、负载均衡：服务的消费方如何以某种负载均衡策略访问集群中的服务提供方实例？</p><p>服务发现和负载均衡并不是新问题，业界其实已经探索和总结出一些常用的模式，这些模式的核心其实是代理(Proxy)，以及代理在架构中所处的位置。在服务消费方和服务提供方之间增加一层代理，由代理负责服务发现和负载均衡功能，消费方通过代理间接访问目标服务。</p><p>所谓的ServiceMesh，也被形象称为边车(Sidecar)模式。早期有一些摩托车，除了主驾驶位，还带一个边车位，可以额外坐一个人。在Sidecar模式中，业务代码进程(相当于主驾驶)共享一个代理(相当于边车)，代理除了负责服务发现和负载均衡，还负责动态路由、容错限流、监控度量和安全日志等功能，这些功能是具体业务无关的，属于跨横切面关注点(Cross-Cutting Concerns)范畴。</p><p>在新一代的ServiceMesh架构中(下图上方)，服务的消费方和提供方主机(或者容器)两边都会部署代理SideCar。ServiceMesh比较正式的术语也叫数据面板(DataPlane)，与数据面板对应的还有一个独立部署的控制面板(ControlPlane)，用来集中配置和管理数据面板，也可以对接各种服务发现机制(如K8S服务发现)。<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2Fservicemesh.png" alt=""></p><h2 id="istio介绍">istio介绍</h2><p>首先来看 istio 官方给出的架构图<br><img src="https://blog-1255547500.cos.ap-beijing.myqcloud.com/images%2Fcncf%2Fmicroservice%2Fistio%2Fistio_arch.png" alt=""></p><p>可以看到，istio 就是我们上述提到的 service mesh 架构的一种实现，服务之间的通信（比如这里的 Service A 访问 Service B）会通过代理（默认是 envoy）来进行，而且中间的网络协议支持 HTTP/1.1，HTTP/2，gRPC 或者 TCP，可以说覆盖了主流的通信协议。</p><p>istio核心组件整体分为数据面(data plane)和控制面(control plane)，其中控制面做了进一步的细分，分成了 Pilot、Mixer、和 Citadel，它们的各自功能如下：</p><ul><li>Pilot：为 envoy 提供了服务发现，流量管理和智能路由（AB测试、金丝雀发布等），以及错误处理（超时、重试、熔断）功能。用户通过 pilot 的 API 管理网络相关的资源对象，pilot 会根据用户的配置和服务的信息把网络流量管理变成 envoy 能识别的格式分发到各个 sidecar 代理中。</li><li>Mixer：为整个集群执行访问控制（哪些用户可以访问哪些服务）和 policy 管理（rate limit，quota 等），并且收集代理观察到的服务之间的流量统计数据</li><li>Citadel：为服务之间提供认证和证书管理，可以让服务自动升级成 TLS 协议</li></ul><p>数据面组件如下：</p><ul><li>Sidecar(Envoy)：负责控制面对网格控制的实际执行。istio中的默认sidecar是由Envoy派生出来的，在理论上，只要支持Envoy的xDs协议，其它类似的反向代理软件都可以代替Envoy。在istio的默认实现中，istio利用istio-init初始化容器中的iptables命令，对所在Pod的流量进行劫持，从而接管Pod中应用的通信过程，如此一来，就获得了通信的控制权，控制面的控制目的最终得以实现。</li></ul><p>istio的核心配置对象</p><p>istio在安装过程中会进行CRD的初始化，在Kubernetes集群中注册一系列的CRD。CRD在注册成功之后，会建立一些基础对象，完成istio的初始设置。</p><p>用户利用istio控制微服务通信，是通过向Kubernetes提交CRD资源的方式完成的。istio中的资源分为三组进行管理，分别是</p><ul><li><a href="http://networking.istio.io">networking.istio.io</a></li><li><a href="http://config.istio.io">config.istio.io</a></li><li><a href="http://authentication.istio.io">authentication.istio.io</a></li></ul><h3 id="networking-istio-io"><a href="http://networking.istio.io">networking.istio.io</a></h3><p>istio使用频率最高的核心资源，主要包括以下五种类型：</p><p>Gateway：网格内部服务互访或者网格外部流量进入网格，都要首先经过Gateway</p><p>VirtualService：主要由以下部分组成：<br>（1）Host：该对象所负责的主机名称，如果在Kubernetes内部，则这个主机名可以是服务名。<br>（2）Gateway：流量的来源网关，如果这一字段被省略，则代表使用的网关名为“mesh”，也就是默认的网格内部服务互联所用的网关。<br>（3）路由对象：网格中的流量，如果符合前面的Host和Gateway的条件，就需要根据实际协议对流量的处理方式进行甄别。</p><p>TCP/TLS/HTTP Route：路由对象</p><p>DestinationWeight：流量权重（金丝雀发布会用到）</p><p>Destination：由Subset和Port两个元素组成</p><h3 id="config-istio-io"><a href="http://config.istio.io">config.istio.io</a></h3><p>config.istio.io中的对象用于为Mixer组件提供配置，包含以下组件：Rule、Action、Instance、Adaptor、Template、Handler</p><h3 id="authentication-istio-io"><a href="http://authentication.istio.io">authentication.istio.io</a></h3><p>这一组API用于定义认证策略</p><h3 id="rbac-istio-io"><a href="http://rbac.istio.io">rbac.istio.io</a></h3><p>在istio中实现了一个和Kubernetes颇为相似的RBAC访问控制系统</p>]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud Native </tag>
            
            <tag> 微服务 </tag>
            
            <tag> ServiceMesh </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
